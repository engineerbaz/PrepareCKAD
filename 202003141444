Script started on 2020-03-14 14:43:15+0500
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo " [KTHis [K[K[K[Khis is SOLUTION F[Kfor CKAD Exercise b y dgkanatsios:[K"
This is SOLUTION for CKAD Exercise by dgkanatsios
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo "This is SOLUTION for CKAD Exercise byy dgkanatsios" >> README.md 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl creat[K[K[K[K[Kge[K[K[K[K[K[K[K[K[K[Ksource [K[K[K[K[K[K[Kkubectl create ns mys[Knamespace
namespace/mynamespace created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get ns
NAME              STATUS   AGE
default           Active   27d
kube-node-lease   Active   27d
kube-public       Active   27d
kube-system       Active   27d
mynamespace       Active   3s
namespace1        Active   6d21h
namespace2        Active   6d21h
namespace3        Active   6d21h
namespace4        Active   6d21h
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl run ng[K[K[K[K[K[K[K get pod
NAME                     READY   STATUS      RESTARTS   AGE
06nginx                  0/1     Error       0          26d
07nginx                  0/1     Error       0          26d
100vol                   0/1     Error       0          14d
104pvc2b                 0/1     Error       0          14d
111                      0/1     Error       0          13d
113                      0/1     Completed   0          12d
114nginx                 0/1     Completed   0          12d
117                      0/1     Error       0          12d
118                      0/1     Error       0          12d
126                      0/1     Error       0          9d
131                      0/1     Error       0          9d
132                      0/1     Error       0          9d
134                      0/1     Completed   0          6d22h
136                      0/1     Completed   0          6d22h
137busybox               0/1     Error       0          6d22h
13nginx                  0/1     Completed   1          26d
140                      0/1     Error       0          6d21h
144                      0/1     Error       0          6d21h
17shell                  0/1     Error       0          26d
19bb                     0/1     Completed   0          26d
21bb                     0/1     Completed   0          26d
29mc                     0/3     Completed   0          25d
34mc                     0/2     Error       0          25d
37-ng-1                  0/1     Error       0          19d
37-ng-2                  0/1     Error       0          19d
37-ng-3                  0/1     Error       0          19d
67dep-7db4cf66f7-2hfgb   1/1     Running     12         14d
67dep-7db4cf66f7-9wrj7   1/1     Running     12         14d
67dep-7db4cf66f7-h5g7f   1/1     Running     12         14d
67dep-7db4cf66f7-m2269   1/1     Running     12         14d
84job-9gkc8              0/1     Completed   0          14d
88job-bx58m              0/1     Completed   0          14d
hello                    0/1     Error       0          6d21h
mysec                    0/1     Error       0          12d
nginx                    0/1     Completed   0          12d
not-running              0/1     Error       0          6d21h
secbusybox               0/1     Error       0          12d
test114                  0/1     Completed   0          12d
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl delete ng[K[Kpod nginx
pod "nginx" deleted
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get[K[K[Kt[Krun nginx --image [K=N[Knginx --restart= Neer[K[Kve [Kr 0[K--dry-run -o yaml > 1.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ c[Knano c[K1.yaml 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;29H(B[0;7m[ Read 15 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                     1.yaml                               [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Spell[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: nginx[9;3Hname: nginx[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: nginx[14;5Hresources: {}[15;3HdnsPolicy: ClusterFirst[16;3HrestartPolicy: Never[17dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[6;26H[?12l[?25h[?25l[7;10H[?12l[?25h[?25l[8;15H[?12l[?25h[?25l[9d[?12l[?25h[?25l[1;65H(B[0;7mModified(B[m[10;35r[10;1HM[1;38r[10;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lc[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25ly[?12l[?25h[?25ln[?12l[?25h[?25la[36d[K[10;18H[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lc[?12l[?25h[?25le[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: 1.yaml                                   (B[m[36;27H[?12l[?25h[?25l[K[1;73H[1;65H(B[0;7m        (B[m[36;29H(B[0;7m[ Wrote 16 lines ](B[m[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ u[Kkubectl create -f 1.yaml 
pod/nginx created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod
NAME                     READY   STATUS      RESTARTS   AGE
06nginx                  0/1     Error       0          26d
07nginx                  0/1     Error       0          26d
100vol                   0/1     Error       0          14d
104pvc2b                 0/1     Error       0          14d
111                      0/1     Error       0          13d
113                      0/1     Completed   0          12d
114nginx                 0/1     Completed   0          12d
117                      0/1     Error       0          12d
118                      0/1     Error       0          12d
126                      0/1     Error       0          9d
131                      0/1     Error       0          9d
132                      0/1     Error       0          9d
134                      0/1     Completed   0          6d22h
136                      0/1     Completed   0          6d22h
137busybox               0/1     Error       0          6d22h
13nginx                  0/1     Completed   1          26d
140                      0/1     Error       0          6d21h
144                      0/1     Error       0          6d21h
17shell                  0/1     Error       0          26d
19bb                     0/1     Completed   0          26d
21bb                     0/1     Completed   0          26d
29mc                     0/3     Completed   0          25d
34mc                     0/2     Error       0          25d
37-ng-1                  0/1     Error       0          19d
37-ng-2                  0/1     Error       0          19d
37-ng-3                  0/1     Error       0          19d
67dep-7db4cf66f7-2hfgb   1/1     Running     12         14d
67dep-7db4cf66f7-9wrj7   1/1     Running     12         14d
67dep-7db4cf66f7-h5g7f   1/1     Running     12         14d
67dep-7db4cf66f7-m2269   1/1     Running     12         14d
84job-9gkc8              0/1     Completed   0          14d
88job-bx58m              0/1     Completed   0          14d
hello                    0/1     Error       0          6d21h
mysec                    0/1     Error       0          12d
not-running              0/1     Error       0          6d21h
secbusybox               0/1     Error       0          12d
test114                  0/1     Completed   0          12d
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod nginx
Error from server (NotFound): pods "nginx" not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod nginx -n n[Kmybn[K[Knamespace
NAME    READY   STATUS    RESTARTS   AGE
nginx   1/1     Running   0          18s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod 
NAME                     READY   STATUS      RESTARTS   AGE
06nginx                  0/1     Error       0          26d
07nginx                  0/1     Error       0          26d
100vol                   0/1     Error       0          14d
104pvc2b                 0/1     Error       0          14d
111                      0/1     Error       0          13d
113                      0/1     Completed   0          12d
114nginx                 0/1     Completed   0          12d
117                      0/1     Error       0          12d
118                      0/1     Error       0          12d
126                      0/1     Error       0          9d
131                      0/1     Error       0          9d
132                      0/1     Error       0          9d
134                      0/1     Completed   0          6d22h
136                      0/1     Completed   0          6d22h
137busybox               0/1     Error       0          6d22h
13nginx                  0/1     Completed   1          26d
140                      0/1     Error       0          6d21h
144                      0/1     Error       0          6d21h
17shell                  0/1     Error       0          26d
19bb                     0/1     Completed   0          26d
21bb                     0/1     Completed   0          26d
29mc                     0/3     Completed   0          25d
34mc                     0/2     Error       0          25d
37-ng-1                  0/1     Error       0          19d
37-ng-2                  0/1     Error       0          19d
37-ng-3                  0/1     Error       0          19d
67dep-7db4cf66f7-2hfgb   1/1     Running     12         14d
67dep-7db4cf66f7-9wrj7   1/1     Running     12         14d
67dep-7db4cf66f7-h5g7f   1/1     Running     12         14d
67dep-7db4cf66f7-m2269   1/1     Running     12         14d
84job-9gkc8              0/1     Completed   0          14d
88job-bx58m              0/1     Completed   0          14d
hello                    0/1     Error       0          6d21h
mysec                    0/1     Error       0          12d
not-running              0/1     Error       0          6d21h
secbusybox               0/1     Error       0          12d
test114                  0/1     Completed   0          12d
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl c[Krun bb --image+[K=busyboxx 00[K[K--restat[Krt= Never -- sh[K[K/s[Kbin/sh -c [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kkubectl run busybox --image=busybox --restaart=Never --dry-run -o yaml --command -- env > envpod.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ ca[K[Knano envpod.yaml 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;29H(B[0;7m[ Read 17 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  envpod.yaml                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Spell[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: busybox[9;3Hname: busybox[10dspec:[11;3Hcontainers:[12;3H- command:[13;5H- env[14;5Himage: busybox[15;5Hname: busybox[16;5Hresources: {}[17;3HdnsPolicy: ClusterFirst[18;3HrestartPolicy: Never[19dstatus: {}[3d[?12l[?25h[?25l[36d[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl apply -f envpod.yaml
pod/busybox created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl logs busybox
Error from server (BadRequest): container "busybox" in pod "busybox" is waiting to start: ContainerCreating
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl logs busyboxapply -f envpod.yaml[11Pnano envpod.yaml kubectl run busybox --image=busybox --restaart=Never --dry-run -o yaml --command -- env > envpod.yaml[Acc[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ckubectl get pod 
NAME                     READY   STATUS              RESTARTS   AGE
06nginx                  0/1     Error               0          26d
07nginx                  0/1     Error               0          26d
100vol                   0/1     Error               0          14d
104pvc2b                 0/1     Error               0          14d
111                      0/1     Error               0          13d
113                      0/1     Completed           0          12d
114nginx                 0/1     Completed           0          12d
117                      0/1     Error               0          12d
118                      0/1     Error               0          12d
126                      0/1     Error               0          9d
131                      0/1     Error               0          9d
132                      0/1     Error               0          9d
134                      0/1     Completed           0          6d23h
136                      0/1     Completed           0          6d22h
137busybox               0/1     Error               0          6d22h
13nginx                  0/1     Completed           1          26d
140                      0/1     Error               0          6d21h
144                      0/1     Error               0          6d21h
17shell                  0/1     Error               0          26d
19bb                     0/1     Completed           0          26d
21bb                     0/1     Completed           0          26d
29mc                     0/3     Completed           0          25d
34mc                     0/2     Error               0          25d
37-ng-1                  0/1     Error               0          19d
37-ng-2                  0/1     Error               0          19d
37-ng-3                  0/1     Error               0          19d
67dep-7db4cf66f7-2hfgb   1/1     Running             12         14d
67dep-7db4cf66f7-9wrj7   1/1     Running             12         14d
67dep-7db4cf66f7-h5g7f   1/1     Running             12         14d
67dep-7db4cf66f7-m2269   1/1     Running             12         14d
84job-9gkc8              0/1     Completed           0          14d
88job-bx58m              0/1     Completed           0          14d
busybox                  0/1     ContainerCreating   0          7s
hello                    0/1     Error               0          6d21h
mysec                    0/1     Error               0          12d
not-running              0/1     Error               0          6d21h
secbusybox               0/1     Error               0          12d
test114                  0/1     Completed           0          12d
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod busybox
NAME      READY   STATUS              RESTARTS   AGE
busybox   0/1     ContainerCreating   0          17s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod busybox
NAME      READY   STATUS      RESTARTS   AGE
busybox   0/1     Completed   0          77s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod busybox[Klogs busybox
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=busybox
KUBERNETES_PORT_443_TCP_PORT=443
NGINX_PORT_80_TCP_PORT=80
NGINX_PORT=tcp://10.105.5.19:80
NGINX_PORT_80_TCP_PROTO=tcp
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_SERVICE_PORT=443
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
NGINX_SERVICE_HOST=10.105.5.19
NGINX_PORT_80_TCP=tcp://10.105.5.19:80
KUBERNETES_PORT=tcp://10.96.0.1:443
NGINX_SERVICE_PORT=80
NGINX_PORT_80_TCP_ADDR=10.105.5.19
HOME=/root
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl logs busybox[K[K[K[K[K[K[K[K[K[K[K[Ke[K[K[K[K[K[K[K[K[Kcc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl exec -ti busyboc[Kx 
error: you must specify at least one command for the container
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl exec -ti busybox -- [Ke[Kenv
Error: unknown flag: --env


Examples:
  # Get output from running 'date' command from pod mypod, using the first container by default
  kubectl exec mypod date
  
  # Get output from running 'date' command in ruby-container from pod mypod
  kubectl exec mypod -c ruby-container date
  
  # Switch to raw terminal mode, sends stdin to 'bash' in ruby-container from pod mypod
  # and sends stdout/stderr from 'bash' back to the client
  kubectl exec mypod -c ruby-container -i -t -- bash -il
  
  # List contents of /usr from the first container of pod mypod and sort by modification time.
  # If the command you want to execute in the pod has any flags in common (e.g. -i),
  # you must use two dashes (--) to separate your command's flags/arguments.
  # Also note, do not surround your command and its flags/arguments with quotes
  # unless that is how you would execute it normally (i.e., do ls -t /usr, not "ls -t /usr").
  kubectl exec mypod -i -t -- ls -t /usr
  
  # Get output from running 'date' command from the first pod of the deployment mydeployment, using the first container by default
  kubectl exec deploy/mydeployment date
  
  # Get output from running 'date' command from the first pod of the service myservice, using the first container by default
  kubectl exec svc/myservice date

Options:
  -c, --container='': Container name. If omitted, the first container in the pod will be chosen
      --pod-running-timeout=1m0s: The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running
  -i, --stdin=false: Pass stdin to the container
  -t, --tty=false: Stdin is a TTY

Usage:
  kubectl exec (POD | TYPE/NAME) [-c CONTAINER] [flags] -- COMMAND [args...] [options]

Use "kubectl options" for a list of global command-line options (applies to all commands).

unknown flag: --env
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl exec -ti busybox --env[K[K[K /bo[Kin/sh 
error: cannot exec into a container in a completed pod; current phase is Succeeded
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl run myns [K[K[K[K[K[K[K[K[K[K creay[Kte ns myns --dry-run 
namespace/myns created (dry run)
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl create ns myns --dry-run -o yaml
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: myns
spec: {}
status: {}
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl creta[K[Kate rq [K[K[K--help
Create a resource from a file or from stdin.

 JSON and YAML formats are accepted.

Examples:
  # Create a pod using the data in pod.json.
  kubectl create -f ./pod.json
  
  # Create a pod based on the JSON passed into stdin.
  cat pod.json | kubectl create -f -
  
  # Edit the data in docker-registry.yaml in JSON then create the resource using the edited data.
  kubectl create -f docker-registry.yaml --edit -o json

Available Commands:
  clusterrole         Create a ClusterRole.
  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole
  configmap           Create a configmap from a local file, directory or literal value
  cronjob             Create a cronjob with the specified name.
  deployment          Create a deployment with the specified name.
  job                 Create a job with the specified name.
  namespace           Create a namespace with the specified name
  poddisruptionbudget Create a pod disruption budget with the specified name.
  priorityclass       Create a priorityclass with the specified name.
  quota               Create a quota with the specified name.
  role                Create a role with single rule.
  rolebinding         Create a RoleBinding for a particular Role or ClusterRole
  secret              Create a secret using specified subcommand
  service             Create a service using specified subcommand.
  serviceaccount      Create a service account with the specified name

Options:
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
      --dry-run=false: If true, only print the object that would be sent, without sending it.
      --edit=false: Edit the API resource before creating
  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource
  -k, --kustomize='': Process the kustomization directory. This flag can't be used together with -f or -R.
  -o, --output='': Output format. One of: json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file.
      --raw='': Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.
      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.
  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.
  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
      --validate=true: If true, use a schema to validate the input before sending it
      --windows-line-endings=false: Only relevant if --edit=true. Defaults to the line ending native to your platform.

Usage:
  kubectl create -f FILENAME [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl create --helpq--helpu--helpo--helpt--helpa--help --help
Create a resourcequota with the specified name, hard limits and optional scopes

Aliases:
quota, resourcequota

Examples:
  # Create a new resourcequota named my-quota
  kubectl create quota my-quota
--hard=cpu=1,memory=1G,pods=2,services=3,replicationcontrollers=2,resourcequotas=1,secrets=5,persistentvolumeclaims=10
  
  # Create a new resourcequota named best-effort
  kubectl create quota best-effort --hard=pods=100 --scopes=BestEffort

Options:
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in
the template. Only applies to golang and jsonpath output formats.
      --dry-run=false: If true, only print the object that would be sent, without sending it.
      --generator='resourcequotas/v1': The name of the API generator to use.
      --hard='': A comma-delimited set of resource=quantity pairs that define a hard limit.
  -o, --output='': Output format. One of:
json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file.
      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the
annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.
      --scopes='': A comma-delimited set of quota scopes that must all match each object tracked by the quota.
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The
template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
      --validate=true: If true, use a schema to validate the input before sending it

Usage:
  kubectl create quota NAME [--hard=key1=value1,key2=value2] [--scopes=Scope1,Scope2] [--dry-run=bool] [options]

Use "kubectl options" for a list of global command-line options (applies to all commands).
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl create quota myrq --hara[Kd=cpu=C![K[K1,mem ory=1G,pods=2 --dry-run -o yaml > r[K2rq.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano 2
202003141414  202003141444  2rq.yaml      
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano 2rq.yaml 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;29H(B[0;7m[ Read 11 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                    2rq.yaml                              [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Spell[36d[3d[39;49m(B[mapiVersion: v1[4dkind: ResourceQuota[5dmetadata:[6;3HcreationTimestamp: null[7;3Hname: myrq[8dspec:[9;3Hhard:[10;5Hcpu: "1"[11;5Hmemory: 1G[12;5Hpods: "2"[13dstatus: {}[3d[?12l[?25h[?25l[36d[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pods --all-nampe[K[Kespace
Error: unknown flag: --all-namespace


Examples:
  # List all pods in ps output format.
  kubectl get pods
  
  # List all pods in ps output format with more information (such as node name).
  kubectl get pods -o wide
  
  # List a single replication controller with specified NAME in ps output format.
  kubectl get replicationcontroller web
  
  # List deployments in JSON output format, in the "v1" version of the "apps" API group:
  kubectl get deployments.v1.apps -o json
  
  # List a single pod in JSON output format.
  kubectl get -o json pod web-pod-13je7
  
  # List a pod identified by type and name specified in "pod.yaml" in JSON output format.
  kubectl get -f pod.yaml -o json
  
  # List resources from a directory with kustomization.yaml - e.g. dir/kustomization.yaml.
  kubectl get -k dir/
  
  # Return only the phase value of the specified pod.
  kubectl get -o template pod/web-pod-13je7 --template={{.status.phase}}
  
  # List resource information in custom columns.
  kubectl get pod test-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image
  
  # List all replication controllers and services together in ps output format.
  kubectl get rc,services
  
  # List one or more resources by their type and names.
  kubectl get rc/web service/frontend pods/web-pod-13je7

Options:
  -A, --all-namespaces=false: If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace.
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
      --chunk-size=500: Return large lists in chunks rather than all at once. Pass 0 to disable. This flag is beta and may change in the future.
      --field-selector='': Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type.
  -f, --filename=[]: Filename, directory, or URL to files identifying the resource to get from a server.
      --ignore-not-found=false: If the requested object does not exist the command will return exit code 0.
  -k, --kustomize='': Process the kustomization directory. This flag can't be used together with -f or -R.
  -L, --label-columns=[]: Accepts a comma separated list of labels that are going to be presented as columns. Names are case-sensitive. You can also use multiple flag options like -L label1 -L label2...
      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).
  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].
      --raw='': Raw URI to request from the server.  Uses the transport specified by the kubeconfig file.
  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)
      --server-print=true: If true, have the server return the appropriate table output. Supports extension APIs and CRDs.
      --show-kind=false: If present, list the resource type for the requested object(s).
      --show-labels=false: When printing, show all labels as the last column (default hide labels column)
      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
  -w, --watch=false: After listing/getting the requested object, watch for changes. Uninitialized objects are excluded if no object name is provided.
      --watch-only=false: Watch for changes to the requested object(s), without listing/getting first.

Usage:
  kubectl get [(-o|--output=)json|yaml|wide|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=...] (TYPE[.VERSION][.GROUP] [NAME | -l label] | TYPE[.VERSION][.GROUP]/NAME ...) [flags] [options]

Use "kubectl options" for a list of global command-line options (applies to all commands).

unknown flag: --all-namespace
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pods --all-namespaces
NAMESPACE     NAME                                    READY   STATUS      RESTARTS   AGE
default       06nginx                                 0/1     Error       0          26d
default       07nginx                                 0/1     Error       0          26d
default       100vol                                  0/1     Error       0          14d
default       104pvc2b                                0/1     Error       0          14d
default       111                                     0/1     Error       0          13d
default       113                                     0/1     Completed   0          12d
default       114nginx                                0/1     Completed   0          12d
default       117                                     0/1     Error       0          12d
default       118                                     0/1     Error       0          12d
default       126                                     0/1     Error       0          9d
default       131                                     0/1     Error       0          9d
default       132                                     0/1     Error       0          9d
default       134                                     0/1     Completed   0          6d23h
default       136                                     0/1     Completed   0          6d22h
default       137busybox                              0/1     Error       0          6d22h
default       13nginx                                 0/1     Completed   1          26d
default       140                                     0/1     Error       0          6d21h
default       144                                     0/1     Error       0          6d21h
default       17shell                                 0/1     Error       0          26d
default       19bb                                    0/1     Completed   0          26d
default       21bb                                    0/1     Completed   0          26d
default       29mc                                    0/3     Completed   0          25d
default       34mc                                    0/2     Error       0          25d
default       37-ng-1                                 0/1     Error       0          19d
default       37-ng-2                                 0/1     Error       0          19d
default       37-ng-3                                 0/1     Error       0          19d
default       67dep-7db4cf66f7-2hfgb                  1/1     Running     12         14d
default       67dep-7db4cf66f7-9wrj7                  1/1     Running     12         14d
default       67dep-7db4cf66f7-h5g7f                  1/1     Running     12         14d
default       67dep-7db4cf66f7-m2269                  1/1     Running     12         14d
default       84job-9gkc8                             0/1     Completed   0          14d
default       88job-bx58m                             0/1     Completed   0          14d
default       busybox                                 0/1     Completed   0          6m
default       hello                                   0/1     Error       0          6d21h
default       mysec                                   0/1     Error       0          12d
default       not-running                             0/1     Error       0          6d21h
default       secbusybox                              0/1     Error       0          12d
default       test114                                 0/1     Completed   0          12d
kube-system   coredns-5c98db65d4-8dsf7                1/1     Running     37         27d
kube-system   coredns-5c98db65d4-frxww                1/1     Running     38         27d
kube-system   etcd-minikube                           1/1     Running     18         27d
kube-system   kube-addon-manager-minikube             1/1     Running     18         27d
kube-system   kube-apiserver-minikube                 1/1     Running     30         27d
kube-system   kube-controller-manager-minikube        1/1     Running     20         27d
kube-system   kube-proxy-v2l29                        1/1     Running     18         27d
kube-system   kube-scheduler-minikube                 1/1     Running     20         27d
kube-system   kubernetes-dashboard-7b8ddcb5d6-vjmkg   1/1     Running     32         27d
kube-system   storage-provisioner                     1/1     Running     29         27d
mynamespace   nginx                                   1/1     Running     0          8m39s
namespace1    pod1                                    0/1     Error       0          6d21h
namespace2    pod2                                    0/1     Error       0          6d21h
namespace3    pod3                                    0/1     Error       0          6d21h
namespace4    pod4                                    0/1     Error       0          6d21h
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl run nginx --o[Kimage=nginx --resyat[K[K[Ktart= Never --port [K=80 
pod/nginx created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl run nginx --image=nginx --restart=NNever --port=80 [K[K[K[K[K[K[K[K[K-dry [K-run --ex[K[K[Ko yaml 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: nginx
  name: nginx
spec:
  containers:
  - image: nginx
    name: nginx
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl run nginx --image=nginx --restart=NNever --dry-run -o yaml [C[C[1@-[C[C[1@-[1@p[1@o[1@r[1@t[1@=[1@8[1@0[1@ 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: nginx
  name: nginx
spec:
  containers:
  - image: nginx
    name: nginx
    ports:
    - containerPort: 80
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl ste[K[K[Kset-nmae[K[K[Kam[K[K[K[K[K[K[K--h
Error: unknown flag: --h


Basic Commands (Beginner):
  create         Create a resource from a file or from stdin.
  expose         Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service
  run            Run a particular image on the cluster
  set            Set specific features on objects

Basic Commands (Intermediate):
  explain        Documentation of resources
  get            Display one or many resources
  edit           Edit a resource on the server
  delete         Delete resources by filenames, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout        Manage the rollout of a resource
  scale          Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job
  autoscale      Auto-scale a Deployment, ReplicaSet, or ReplicationController

Cluster Management Commands:
  certificate    Modify certificate resources.
  cluster-info   Display cluster info
  top            Display Resource (CPU/Memory/Storage) usage.
  cordon         Mark node as unschedulable
  uncordon       Mark node as schedulable
  drain          Drain node in preparation for maintenance
  taint          Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe       Show details of a specific resource or group of resources
  logs           Print the logs for a container in a pod
  attach         Attach to a running container
  exec           Execute a command in a container
  port-forward   Forward one or more local ports to a pod
  proxy          Run a proxy to the Kubernetes API server
  cp             Copy files and directories to and from containers.
  auth           Inspect authorization

Advanced Commands:
  diff           Diff live version against would-be applied version
  apply          Apply a configuration to a resource by filename or stdin
  patch          Update field(s) of a resource using strategic merge patch
  replace        Replace a resource by filename or stdin
  wait           Experimental: Wait for a specific condition on one or many resources.
  convert        Convert config files between different API versions
  kustomize      Build a kustomization target from a directory or a remote url.

Settings Commands:
  label          Update the labels on a resource
  annotate       Update the annotations on a resource
  completion     Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  api-resources  Print the supported API resources on the server
  api-versions   Print the supported API versions on the server, in the form of "group/version"
  config         Modify kubeconfig files
  plugin         Provides utilities for interacting with plugins.
  version        Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).

unknown flag: --h
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set 
1.yaml        202003141414  202003141444  2rq.yaml      envpod.yaml   .git/         README.md     
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set --h
Error: unknown flag: --h


Available Commands:
  env            Update environment variables on a pod template
  image          Update image of a pod template
  resources      Update resource requests/limits on objects with pod templates
  selector       Set the selector on a resource
  serviceaccount Update ServiceAccount of a resource
  subject        Update User, Group or ServiceAccount in a RoleBinding/ClusterRoleBinding

Usage:
  kubectl set SUBCOMMAND [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).

unknown flag: --h
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set --help
Configure application resources

 These commands help you make changes to existing application resources.

Available Commands:
  env            Update environment variables on a pod template
  image          Update image of a pod template
  resources      Update resource requests/limits on objects with pod templates
  selector       Set the selector on a resource
  serviceaccount Update ServiceAccount of a resource
  subject        Update User, Group or ServiceAccount in a RoleBinding/ClusterRoleBinding

Usage:
  kubectl set SUBCOMMAND [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set --help[K[K[K[K[K[K
1.yaml        202003141414  202003141444  2rq.yaml      envpod.yaml   .git/         README.md     
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set 
1.yaml        202003141414  202003141444  2rq.yaml      envpod.yaml   .git/         README.md     
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set nanm[Ke[K[Kme 
error: unknown command "name"
See 'kubectl set -h' for help and examples
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set name [K[K[K[K[K-h
Configure application resources

 These commands help you make changes to existing application resources.

Available Commands:
  env            Update environment variables on a pod template
  image          Update image of a pod template
  resources      Update resource requests/limits on objects with pod templates
  selector       Set the selector on a resource
  serviceaccount Update ServiceAccount of a resource
  subject        Update User, Group or ServiceAccount in a RoleBinding/ClusterRoleBinding

Usage:
  kubectl set SUBCOMMAND [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set -h[K[Kimage -h
Update existing container image(s) of resources.

 Possible resources include (case insensitive):

  pod (po), replicationcontroller (rc), deployment (deploy), daemonset (ds), replicaset (rs)

Examples:
  # Set a deployment's nginx container image to 'nginx:1.9.1', and its busybox container image to 'busybox'.
  kubectl set image deployment/nginx busybox=busybox nginx=nginx:1.9.1
  
  # Update all deployments' and rc's nginx container's image to 'nginx:1.9.1'
  kubectl set image deployments,rc nginx=nginx:1.9.1 --all
  
  # Update image of all containers of daemonset abc to 'nginx:1.9.1'
  kubectl set image daemonset abc *=nginx:1.9.1
  
  # Print result (in yaml format) of updating nginx container image from local file, without hitting the server
  kubectl set image -f path/to/file.yaml nginx=nginx:1.9.1 --local -o yaml

Options:
      --all=false: Select all resources, including uninitialized ones, in the namespace of the specified resource types
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in
the template. Only applies to golang and jsonpath output formats.
      --dry-run=false: If true, only print the object that would be sent, without sending it.
  -f, --filename=[]: Filename, directory, or URL to files identifying the resource to get from a server.
  -k, --kustomize='': Process the kustomization directory. This flag can't be used together with -f or -R.
      --local=false: If true, set image will NOT contact api-server but run locally.
  -o, --output='': Output format. One of:
json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-file.
      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the
command. If set to true, record the command. If not set, default to updating the existing annotation value only if one
already exists.
  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage
related manifests organized within the same directory.
  -l, --selector='': Selector (label query) to filter on, not including uninitialized ones, supports '=', '==', and
'!='.(e.g. -l key1=value1,key2=value2)
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The
template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].

Usage:
  kubectl set image (-f FILENAME | TYPE NAME) CONTAINER_NAME_1=CONTAINER_IMAGE_1 ... CONTAINER_NAME_N=CONTAINER_IMAGE_N
[options]

Use "kubectl options" for a list of global command-line options (applies to all commands).
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set image -h[K[Kpo[K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set image pod nginx=nginx:1.7.1
error: resource(s) were provided, but no name, label selector, or --all flag specified
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set image pod nginx=nginx:1.7.1[C[1P[1@/
error: unknown command "image/pod nginx=nginx:1.7.1"
See 'kubectl set -h' for help and examples
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl set image/pod nginx=nginx:1.7.1[C[C[C[C[C[1P[1@ [C[C[C/ nginx=nginx:1.7.1n nginx=nginx:1.7.1g nginx=nginx:1.7.1 [A]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci nginx=nginx:1.7.11[A]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn nginx=nginx:1.7.1[A]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cx nginx=nginx:1.7.1[A]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

pod/nginx image updated
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl describe po nginx
Name:         nginx
Namespace:    default
Priority:     0
Node:         minikube/10.0.2.15
Start Time:   Sat, 14 Mar 2020 14:56:13 +0500
Labels:       run=nginx
Annotations:  <none>
Status:       Running
IP:           172.17.0.10
Containers:
  nginx:
    Container ID:   docker://0d64c4c007e2c5e4fef37da5e0f1d82cd83c1d8d4e2fad55a5779ed8b310997d
    Image:          nginx:1.7.1
    Image ID:       docker-pullable://nginx@sha256:2539d4344dd18e1df02be842ffc435f8e1f699cfc55516e2cf2cb16b7a9aea0b
    Port:           80/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Sat, 14 Mar 2020 14:56:24 +0500
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-k8lrh (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  default-token-k8lrh:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-k8lrh
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  6m9s   default-scheduler  Successfully assigned default/nginx to minikube
  Normal  Pulling    6m8s   kubelet, minikube  Pulling image "nginx"
  Normal  Pulled     5m58s  kubelet, minikube  Successfully pulled image "nginx"
  Normal  Created    5m58s  kubelet, minikube  Created container nginx
  Normal  Started    5m58s  kubelet, minikube  Started container nginx
  Normal  Killing    10s    kubelet, minikube  Container nginx definition changed, will be restarted
  Normal  Pulling    10s    kubelet, minikube  Pulling image "nginx:1.7.1"
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl describe po nginx | grep Image
    [01;31m[KImage[m[K:          nginx:1.7.1
    [01;31m[KImage[m[K ID:       docker-pullable://nginx@sha256:2539d4344dd18e1df02be842ffc435f8e1f699cfc55516e2cf2cb16b7a9aea0b
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod nginx --show[K[K[K[K[K[K[K
NAME    READY   STATUS    RESTARTS   AGE
nginx   1/1     Running   1          113m
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get pod nginx -o wide
NAME    READY   STATUS    RESTARTS   AGE    IP            NODE       NOMINATED NODE   READINESS GATES
nginx   1/1     Running   1          113m   172.17.0.10   minikube   <none>           <none>
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl run busybox --image=busybox --rm -iit --restart=Never -- wget -O- 10.1.1.131:80
Error from server (AlreadyExists): pods "busybox" already exists
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl dee[Klete pod busybox
pod "busybox" deleted
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl delete pod busyboxrun busybox --image=busybox --rm -iit --restart=Never -- wget -O- 10.1.1.131:80[1P:80[1P:80[1P:80[1P:80[1P:80[1P:80[1P:80[1P:80[1P:807:802:80.:801:807:80.:801:80[1P:800:80.:801:800:80
Connecting to 172.17.0.10:80 (172.17.0.10:80)
writing to stdout
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
-                    100% |********************************|   612  0:00:00 ETA
written to stdout
pod "busybox" deleted
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl get po nginx -oyaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-03-14T09:56:13Z"
  labels:
    run: nginx
  name: nginx
  namespace: default
  resourceVersion: "336136"
  selfLink: /api/v1/namespaces/default/pods/nginx
  uid: 1677d2d9-c47f-4ff6-aaca-fd4e95a141c7
spec:
  containers:
  - image: nginx:1.7.1
    imagePullPolicy: Always
    name: nginx
    ports:
    - containerPort: 80
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-k8lrh
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-k8lrh
    secret:
      defaultMode: 420
      secretName: default-token-k8lrh
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-03-14T09:56:13Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-03-14T09:56:25Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-03-14T09:56:25Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-03-14T09:56:13Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://6f6583fd77204bc3cbfe5a014487ae921144d2c7d39062562c022d6e2694be0e
    image: nginx:1.7.1
    imageID: docker-pullable://nginx@sha256:7fbe0579e123f3d2b29c9159e9a80547fb72621bb419e52d98c679ddbf1055a1
    lastState:
      terminated:
        containerID: docker://0d64c4c007e2c5e4fef37da5e0f1d82cd83c1d8d4e2fad55a5779ed8b310997d
        exitCode: 0
        finishedAt: "2020-03-14T10:02:12Z"
        reason: Completed
        startedAt: "2020-03-14T09:56:24Z"
    name: nginx
    ready: true
    restartCount: 1
    state:
      running:
        startedAt: "2020-03-14T10:07:03Z"
  hostIP: 10.0.2.15
  phase: Running
  podIP: 172.17.0.10
  qosClass: BestEffort
  startTime: "2020-03-14T09:56:13Z"
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl logs nginx -p
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ kubectl logs nginx -p[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ktl exec -it nginx -- /bin/sh
# ls
50x.html  index.html
# car t 5	0z x.html
<!DOCTYPE html>
<html>
<head>
<title>Error</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>An error occurred.</h1>
<p>Sorry, the page you are looking for is currently unavailable.<br/>
Please try again later.</p>
<p>If you are the system administrator of this resource then you should check
the <a href="http://nginx.org/r/error_log">error log</a> for details.</p>
<p><em>Faithfully yours, nginx.</em></p>
</body>
</html>
# exit
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ c
cc: command not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git stata[Kus
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mnew file:   202003141414[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   README.md[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m1.yaml[m
	[31m202003141444[m
	[31m2rq.yaml[m
	[31menvpod.yaml[m

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git dd[K[Kadd 1.yaml 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -m :[K"file"
[master 9173108] file
 2 files changed, 16 insertions(+)
 create mode 100644 1.yaml
 create mode 100644 202003141414
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ gits[K r[Kpush rem[K[K[K[K [K[K[K[K[K[K[Kt remote pus[K[K[Kori[K[K[K[K[K[K[K[K[K[Kpush origin master 
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects:  33% (1/3)   Compressing objects:  66% (2/3)   Compressing objects: 100% (3/3)   Compressing objects: 100% (3/3), done.
Writing objects:  25% (1/4)   Writing objects:  50% (2/4)   Writing objects:  75% (3/4)   Writing objects: 100% (4/4)   Writing objects: 100% (4/4), 464 bytes | 464.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0)
To https://github.com/engineerbaz/k8CKAD.git
   e1351e6..9173108  master -> master
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git add envpod.yaml [K[K2[K[K[K`[Kaml 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -m "env file"
[master 2989b2c] env file
 1 file changed, 17 insertions(+)
 create mode 100644 envpod.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git push origin master 
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects:  33% (1/3)   Compressing objects:  66% (2/3)   Compressing objects: 100% (3/3)   Compressing objects: 100% (3/3), done.
Writing objects:  33% (1/3)   Writing objects:  66% (2/3)   Writing objects: 100% (3/3)   Writing objects: 100% (3/3), 426 bytes | 426.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/1)[Kremote: Resolving deltas: 100% (1/1)[Kremote: Resolving deltas: 100% (1/1), completed with 1 local object.[K
To https://github.com/engineerbaz/k8CKAD.git
   9173108..2989b2c  master -> master
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc[K[Kr[Kread fname 
2rq	.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo $fname 
2rq.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git add $fn\$fname 
fatal: pathspec '$fname' did not match any files
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo fn[K[K$fname 
2rq.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ gia[Kt add ([Ke[Kfname
fatal: pathspec 'fname' did not match any files
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git add fname4fname[1Pfname$fname
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git status 
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mnew file:   2rq.yaml[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   README.md[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ read fname
2 README.md
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ read fnamegit status add $fname[3Pstatus 
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mnew file:   2rq.yaml[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   README.md[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git status [1Pread fnamegit status [1Pread fnamegit status add $fname[1Pfname$fname[3Pstatus add $fname
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git add $fname[3Pstatus 
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mnew file:   2rq.yaml[m
	[32mmodified:   README.md[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -m "e[K$fn\$fname" 
[master 8fe57a9] $fname
 2 files changed, 12 insertions(+)
 create mode 100644 2rq.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git push maste[K[K[K[K[Korigin master 
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects:  25% (1/4)   Compressing objects:  50% (2/4)   Compressing objects:  75% (3/4)   Compressing objects: 100% (4/4)   Compressing objects: 100% (4/4), done.
Writing objects:  25% (1/4)   Writing objects:  50% (2/4)   Writing objects:  75% (3/4)   Writing objects: 100% (4/4)   Writing objects: 100% (4/4), 570 bytes | 570.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0)
To https://github.com/engineerbaz/k8CKAD.git
   2989b2c..8fe57a9  master -> master
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo .[K>[K<< EOF > gitBatch.sh
> git add[K[K[K[K[K[K[KEcho "[K[K[K[K[K[KLs[K[Kls
> git status
> git add[K[K[K[K[K[K[Kread fname
> git d[Kadd fname
> EOF
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ ./gitBatch
bash: ./gitBatch: No such file or directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ gitBatch.sh
gitBatch.sh: command not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cat gitBatch.sh 

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cat gitBatch.sh [5PgitBatch.sh[1P./gitBatchecho << EOF > gitBatch.sh
ls
git status
read fname
git add fname
EOF
[A[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pgit push origin master 
[K
[K
[K
[K
[K
[K[A[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@commit -m "\$fname"[C[1Ppush origin master[Cecho << EOF > gitBatch.sh
ls
git status
read fname
git add fname
EOF
[A[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[A[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C> gitBatch.sh






]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo << EOF >> gitBatch.sh
ls
git status
read fname
git add fname
EOF
[A[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[10Pcat gitBatch.sh 
[K
[K
[K
[K
[K
[K[A[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C


]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano [K gitBatch.sh 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 2 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d[39;49m(B[m[?12l[?25h[?25l[1;65H(B[0;7mModified(B[m[3dls[4dgit status[5d[32mread[39m(B[m fname[6dgit add fname[36d[K[6;14H[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: gitBatch.sh                              (B[m[36;32H[?12l[?25h[?25l[K[1;73H[1;65H(B[0;7m        (B[m[36;29H(B[0;7m[ Wrote 5 lines ](B[m[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano gitBatch.sh [1Pcat[C[C[C[C[C[C[C[C[C[C[C[C[Cecho << EOF >> gitBatch.sh
ls
git status
read fname
git add fname
EOF
[A[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[10Pcat gitBatch.sh 
[K
[K
[K
[K
[K
[K[A[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5PgitBatch.sh[1P./gitBatch
bash: ./gitBatch: No such file or directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh 
1.yaml	      202003141444  envpod.yaml  README.md
202003141414  2rq.yaml	    gitBatch.sh
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31mgitBatch.sh[m

no changes added to commit (use "git add" and/or "git commit -a")
gitB	atch.sh
fatal: pathspec 'fname' did not match any files
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ htit[K[K[Kistory 
 1075  kubectl get po
 1076  minikube status
 1077  minikube stop
 1078  minikube start
 1079  history | grep bash
 1080  source <(kubectl completion bash)
 1081  cc
 1082  script 202002281600
 1083  kubectl get po
 1084  history | grep 1962
 1085  source <(kubectl completion bash)
 1086  kubectl get pso
 1087  kubectl get pod
 1088  cc
 1089  kubectl get deploy 
 1090  kubectl get deploy 55-dep -o yaml
 1091  kubectl get deploy --show-labels 
 1092  cc
 1093  kubectl scale deploy 55-dep --replicas=3
 1094  kubectl get deploy 
 1095  kubectl rollout status deploy 55-dep 
 1096  kubectl get rs -l 55-dep-5b9d6b4479 
 1097  kubectl get rs 
 1098  kubectl get rs -l 55-dep-5b9d6b4479 
 1099  kubectl get rs --show-labels 
 1100  kubectl get rs -l 55-dep
 1101  kubectl delete deployments.
 1102  kubectl delete deploy 55-dep 
 1103  minikube start
 1104  exit
 1105  source <(kubectl completion bash)
 1106  cc
 1107  kubectl create deployment 67dep --image=nginx:1.7.1 --dry-run -o yaml > 67-dep.yaml
 1108  cat 67-dep.yaml 
 1109  vim 67-dep.yaml 
 1110  vi 67-dep.yaml 
 1111  cat 67-dep.yaml 
 1112  kubectl create -f 67-dep.yaml 
 1113  nano 67-dep.yaml 
 1114  kubectl create -f 67-dep.yaml 
 1115  nano 67-dep.yaml 
 1116  kubectl create -f 67-dep.yaml 
 1117  nano 67-dep.yaml 
 1118  kubectl create -f 67-dep.yaml 
 1119  vi 67-dep.yaml 
 1120  kubectl create -f 67-dep.yaml 
 1121  nano 67-dep.yaml 
 1122  kubectl create -f 67-dep.yaml 
 1123  nano 67-dep.yaml 
 1124  kubectl create -f 67-dep.yaml 
 1125  cc
 1126  kubectl set image deploy/67dep nging=nginx:1.17.1
 1127  kubectl set image deploy/67dep nginx=nginx:1.17.1
 1128  kubectl describe deploy 67dep | grep Image
 1129  kubectl set image deploy/67dep nginx=nginx:1.17.4
 1130  kubectl describe deploy 67dep | grep Image
 1131  kubectl get deployment
 1132  kubectl get po
 1133  kubectl get po 67dep-6dfdd9cbff-49sgc 
 1134  kubectl describe pod 67dep-6dfdd9cbff-49sgc 
 1135  kubectl describe pod 67dep-6dfdd9cbff-49sgc  | grep Image
 1136  cc
 1137  kubectl rollout history deployment 67dep 
 1138  kubectl get deploy 67dep --show-labels 
 1139  kubectl rollout history deployment 67dep 
 1140  kubectl rollout undo deployment 67dep 
 1141  kubectl rollout history deployment 67dep 
 1142  kubectl describe deployment 67dep | grep Image
 1143  cc
 1144  kubectl set image deploy/67dep nginx=nginx:1.16.1
 1145  kubectl describe deploy 67dep | grep Image
 1146  kubectl rollout history deployment 67dep 
 1147  kubectl rollout undo deploy 67dep --to-revision=3
 1148  kubectl describe deploy 67dep | grep Image
 1149  kubectl rollout status deploy 67dep
 1150  kubectl set image deploy/67dep nginx=nginx:1.100
 1151  kubectl rollout status deploy nginx
 1152  kubectl  get pd
 1153  kubectl  get pod
 1154  cc
 1155  kubectl rollout undo deploy 67dep 
 1156  kubectl rollout status deployment 67dep 
 1157  kubectl rollout history 
 1158  kubectl rollout history deploy 67dep
 1159  kubectl rollout history deploy 67dep --revision=7
 1160  kubectl rollout pause dpq-qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
 1161  cc
 1162  kubectl rollout pause deployment 67dep 
 1163  kubectl set image deploy/67dep nginx=nginx:latest
 1164  kubectl rollout history deployment 67dep 
 1165  kubectl rollout resume deployment 67dep
 1166  kubectl rollout history deployment 67dep
 1167  kubectl history deployaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 1168  kubectl rollout history deploy 67dep --revision=9
 1169  kubectl rollout history deploy 67dep --revision=8
 1170  cc
 1171  kubectl autoscale deploy 67dep --max=20 --min=19 --cpu-percent=85
 1172  kubectl get hps
 1173  kubectl get hpsa
 1174  kubectl get hpa
 1175  kubectl get pod --show-labels 
 1176  kubectl scale deployment 67dep --replicas=4
 1177  kubectl get pod --show-labels 
 1178  kubectl autoscale deploy 67dep --max=20 --min=19 --cpu-percent=85
 1179  kubectl delete hpa 67dep 
 1180  kubectl get pod --show-labels 
 1181  kubectl scale deploy 67dep --replicas=4
 1182  kubectl get pod --show-labels 
 1183  cc
 1184  kubectl create job 82job --image=node -- node-v
 1185  kubectl get job
 1186  kubectl get job -w
 1187  kubectl logs 82job-97d5j 
 1188  kubectl get po 
 1189  kubectl get job -w
 1190  cc
 1191  kubectl create job 84job --image=busybox --dry-run -o yaml -- echo " Hello I am from Job"
 1192  kubectl create job 84job --image=busybox --dry-run -o yaml -- echo " Hello I am from Job" > 84job.yaml
 1193  kubectl create -f 84job.yaml 
 1194  kubectl get job
 1195  kubectl logs 84job-9gkc8 
 1196  kubectl get job
 1197  kubectl get pod
 1198  kubectl logs 84job-9gkc8 
 1199  kubectl logs 82job-97d5j 
 1200  kubectl delete job 82job*
 1201  kubectl delete job 82job-*
 1202  kubectl delete job 82job-{*}
 1203  kubectl delete job 82job-
 1204  kubectl delete jobs.batch 82job 
 1205  kubectl get pod
 1206  cc
 1207  kubectl create job 88job --image=busybox --dry-run -o yaml -- echo "Hello" > 88.yaml
 1208  nano 88.yaml 
 1209  kubectl create -f 88.yaml 
 1210  nano 88.yaml 
 1211  kubectl create -f 88.yaml 
 1212  kubectl get job
 1213  kubectl get job -w
 1214  kubectl get po
 1215  kubectl delete pod 88job-46bhf 
 1216  kubectl get po
 1217  cc
 1218  kubectl create job 90job --image=busybox --dry-run -o yaml -- echo "Hello" > 90.yaml
 1219  nano 90.yaml 
 1220  kubectl create -f 90.yaml 
 1221  kubectl get po
 1222  kubectl get job
 1223  cc
 1224  kubectl create cronjob 92cj --image=busybox --schedule="1 * * * *" -o yaml > 91.yaml
 1225  nano 91.yaml 
 1226  kubectl create cronjob 92cj --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ"  -o yaml > 91.yaml
 1227  kubectl create cronjob 92cj --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ"  -o yaml > 91cj.yaml
 1228  kubectl create cronjob 92-cj --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ"  -o yaml > 91.yaml
 1229  nano 91.yaml 
 1230  kubectl get cj
 1231  kubectl delete 92c
 1232  kubectl delete cj 92cj
 1233  kubectl delete cj 92-cj
 1234  cc
 1235  kubectl create cronjob 92-cj --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ"  -o yaml > 91.yaml
 1236  nano 91
 1237  nano 91.yaml 
 1238  kubectl run cronjob 92-cj --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ" --dry-run  -o yaml > 92.yaml
 1239  kubectl run cronjob 92-cj --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ" --dry-run -o yaml > 92.yaml
 1240  nano 92.yaml 
 1241  kubectl create cronjob 92-cj --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ" -o yaml > 92cj.yml
 1242  kubectl create cronjob 92-cjs1 --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ" -o yaml > 92cj.yml
 1243  nano 92cj.yml 
 1244  kubectl get cj
 1245  cc
 1246  kubectl create cronjob 92-cronjob --image=busybox --schedule="*/1 * * * *" -- bin/sh -c "date; echo Hello CJ" 
 1247  kubectl get cj
 1248  kubectl get cj 92-cronjob -o yaml
 1249  cc
 1250  kubectl get po
 1251  kubectl logs 92-cronjob-1582916040-jrx7b 
 1252  kubectl get po
 1253  cc
 1254  kubectl get pv
 1255  kubectl create -f task-pv-volume.yaml
 1256  cc
 1257  nano 97pv.yaml
 1258  kubectl create -f 97pv.yaml 
 1259  nano 97pv.yaml
 1260  kubectl create -f 97pv.yaml 
 1261  nano 98pvc.yaml
 1262  kubectl create -f 98pvc.yaml 
 1263  kubectl pv
 1264  cc
 1265  kubectl get pv
 1266  kubectl get pvc
 1267  exit
 1268  kubectl get pod
 1269  history | grep bash
 1270  source <(kubectl completion bash)
 1271  c
 1272  ss
 1273  cc
 1274  script 202002281936
 1275  kubectl get cm
 1276  source <(kubectl completion bash)
 1277  kubectl create configmap 106cm --from-literal=app=new
 1278  kubectl get cm
 1279  kubectl get cm -o yaml
 1280  cc
 1281  cat >> 109config.txt << EOF
 1282  key1=value1
 1283  key2=value2
 1284  EOF
 1285  kubectl create configmap 110c --from-file=109config.txt
 1286  kubectl get cm
 1287  kubectl run 111 --image=nginx --restart=Never --dry-run -o yaml > 111.yaml
 1288  nano 111.yaml 
 1289  kubectl get cm
 1290  nano 111.yaml 
 1291  kubectl create -f 111.yaml 
 1292  nano 111.yaml 
 1293  kubectl create -f 111.yaml 
 1294  nano 111.yaml 
 1295  kubectl create -f 111.yaml 
 1296  kubectl get pod
 1297  kubectl exec -ti 111
 1298  kubectl exec -ti 111 -- /bin/sh
 1299  cat 109config.txt 
 1300  kubectl exec -ti 111 -- /bin/sh
 1301  cc
 1302  nano 111.yaml 
 1303  kubectl get cm
 1304  kubectl describe configmaps 110c 
 1305  kubectl exec -ti 111 -- env
 1306  cat 111.yaml 
 1307  nano 111.yaml 
 1308  kubectl get cm
 1309  nano 111.yaml 
 1310  kubectl get cmaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 1311  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 1312  exit
 1313  minikube start
 1314  history | grep bash
 1315  source <(kubectl completion bash)
 1316  kubectl get po
 1317  kubectl get cm
 1318  cc
 1319  script 202002292000
 1320  gedit
 1321  exit
 1322  minikube start
 1323  ls
 1324  ll
 1325  script 202003011055
 1326  history | grep bash
 1327  source <(kubectl completion bash)
 1328  cc
 1329  echo "var1=val1" > file.env
 1330  kubectl create configmap 112env --from-file=file.env
 1331  kubectl get cm
 1332  kubectl get cm 112env -o yaml
 1333  kubectl run 113 --image=nginx --restart=Never --dry-run -o yaml > 113.yaml
 1334  nano 113.yaml 
 1335  kubectl create -f 113.yaml 
 1336  kubectl exec -ti 113 -- /bin/sh
 1337  kubectl get pod
 1338  kubectl describe pod 113
 1339  kubectl get cm
 1340  nano 113.yaml 
 1341  kubectl delete pod 113 
 1342  oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo]
 1343  kubectl create -f 113.yaml 
 1344  kubectl get po
 1345  kubectl get po 113
 1346  kubectl describe pod 113
 1347  kubectl describe configmaps 112env 
 1348  nano 113.yaml 
 1349  kubectl delete pod 113 
 1350  kubectl get cm
 1351  nano 113.yaml 
 1352  ll
 1353  cat file
 1354  cat file.env
 1355  nano file.env 
 1356  kubectl exec -ti 113 -- env
 1357  kubectl get po
 1358  nano 113
 1359  nano 113.yaml 
 1360  kubectl explain pod.spec.env
 1361  kubectl explain pod.spec.
 1362  kubectl explain pod.spec.container.env
 1363  kubectl explain pod.spec.containers.env
 1364  cat 113.yaml 
 1365  kubectl explain pod.spec.containers.env.valueFrom
 1366  cat 113.yaml 
 1367  kubectl explain pod.spec.containers.env.valueFrom.configMapKeyRef
 1368  kubectl create -f 113.yaml 
 1369  kubectl get po 
 1370  kubectl get po 113 
 1371  kubectl describe pod 113
 1372  nano 113.yaml 
 1373  kubectl get cm
 1374  kubectl describe cm 1123nv
 1375  kubectl describe cm 112nv
 1376  kubectl describe cm 112env
 1377  kubectl describe cm 110c
 1378  nano 113.yaml 
 1379  kubectl delete pod 113
 1380  kubectl create -f 113.yaml 
 1381  kubectl get pod 113 -w
 1382  kubectl describe po 113
 1383  nano 114check.yaml
 1384  nano 113.yaml 
 1385  nano 114check.yaml
 1386  echo ko > 114check.yaml 
 1387  nano 114check.yaml
 1388  cat 113.yaml 
 1389  cat file.env 
 1390  kubectl get pod
 1391  kubectl delete pod 113
 1392  nano 114check.yaml 
 1393  kubectl create -f 114check.yaml 
 1394  nano 114check.yaml 
 1395  kubectl get pod 
 1396  kubectl describe pod nginx
 1397  kubectl delete pod nginx
 1398  nano 114check.yaml 
 1399  kubectl create -f 114check.yaml 
 1400  kubectl get pod nginx -w
 1401  kubectl delete pod nginx
 1402  nano 114check.yaml 
 1403  nano 113.yaml 
 1404  kubectl get cm
 1405  kubectl describe configmaps 110c
 1406  kubectl describe configmaps 112env
 1407  nano 114check.yaml 
 1408  kubectl create -f 114check.yaml 
 1409  kubectl get pod nginx -w
 1410  kubectl delete pod nginx
 1411  echo var1=val1 > file.env
 1412  cat file.env
 1413  kubectl create cm envcfgmap --from-env-file=file.env
 1414  nano 113.yaml 
 1415  kubectl create -f 113.yaml 
 1416  kubectl get pod
 1417  nano 113.yaml 
 1418  kubectl get pod
 1419  kubectl get configmaps envcfgmap
 1420  kubectl get configmaps 112nv
 1421  kubectl get configmaps 112env
 1422  kubectl describe cm 112env
 1423  kubectl describe cm envcfgmap
 1424  CC
 1425  xcc
 1426  cc
 1427  echo var1=val1 > env.env
 1428  nano test114.yaml
 1429  kubectl run test114 --image=nginx --restart=Never --dry-run -o yaml > test114.yaml
 1430  nano test114.yaml
 1431  cat env.env
 1432  kubectl create configmap testenv --from-file=env.env
 1433  kubectl get cm
 1434  kubectl describe configmaps testenv 
 1435  kubectl describe configmaps envcfgmap
 1436  kubectl describe configmaps 112env
 1437  cat test114.yaml 
 1438  cat env.env 
 1439  cat file.env 
 1440  kubectl get configmaps testenv 
 1441  kubectl get configmaps envcfgmap 
 1442  kubectl get configmaps envcfgmap -o yaml --export
 1443  kubectl get configmaps testenv -o yaml --export
 1444  cat file.env 
 1445  cat env.env 
 1446  echo var1=val1 > file.env
 1447  cat file.env 
 1448  kubectl create configmap env2 --from-env-file=env.env 
 1449  kubectl get cm
 1450  nano test114.yaml 
 1451  kubectl get configmaps env2 -o yaml
 1452  nano test114.yaml 
 1453  kubectl create -f test114.yaml 
 1454  nano test114.yaml 
 1455  kubectl create -f test114.yaml 
 1456  kubectl exec -ti test114 -- env
 1457  kubectl exec -ti test114 -- env | grep val
 1458  nano 114check.yaml 
 1459  kubectl delete pod 114test
 1460  kubectl delete pod test114 
 1461  kubectl create -f test114.yaml 
 1462  kubectl get cm
 1463  kubectl get pod test114 
 1464  kubectl exec -ti test114 -- env | grep val
 1465  kubectl exec -ti test114 -- env 
 1466  kubectl exec -ti test114 -- sh
 1467  nano 114check.yaml 
 1468  cat env.env 
 1469  kubectl get configmaps env2 -o yaml
 1470  cat test114.yaml 
 1471  nano test114.yaml 
 1472  ll
 1473  nano 114check.yaml 
 1474  kubectl delete po nginx
 1475  kubectl delete pod nginx
 1476  kubectl create -f test114.yaml 
 1477  nano test114.yaml 
 1478  kubectl create -f 114check.yaml 
 1479  kubectl exec -ti nginx -- env | grep var1
 1480  kubectl get pod nginx
 1481  nano 114check.yaml 
 1482  kubectl delete pod nginx
 1483  kubectl create -f 114check.yaml 
 1484  kubectl get pod nginx
 1485  kubectl get pod nginx -w
 1486  kubectl exec -ti nginx -- env | grep var1
 1487  kubectl exec -ti nginx -- env 
 1488  cc
 1489  git status
 1490  git add 90.yaml 
 1491  git add 202002232000 
 1492  git add .
 1493  git commit -m "practice"
 1494  git push remote orgin
 1495  git push origin master 
 1496  cc
 1497  kubectl create configmap cfgvolume --from-literal=var1=val --from-literal=var2=val2
 1498  minikube status
 1499  minikube stop
 1500  minikube start
 1501  minikube status
 1502  kubectl create configmap cfgvolume --from-literal=var1=val --from-literal=var2=val2
 1503  kubectl get configmaps 
 1504  kubectl run 114nginx --image=nginx --restart=Never --dry-run -o yaml > 114nginx.yaml
 1505  nano 114nginx.yaml 
 1506  kubectl create -f 114nginx.yaml 
 1507  nano 114nginx.yaml 
 1508  kubectl create -f 114nginx.yaml 
 1509  kubectl get pod 114nginx 
 1510  kubectl exec -it 114nginx -- /bin/sh
 1511  exit
 1512  ping 8.8.8.8
 1513  ping 1.1.1.1
 1514  exit
 1515  ll
 1516  minikube sstatus
 1517  minikube status
 1518  minikube stop
 1519  minikube start
 1520  kubectl get sm
 1521  kubectl get cm
 1522  cc
 1523  script 2003012355
 1524  history | grep bash 
 1525  source <(kubectl completion bash)
 1526  kubectl run secbusybox --image=busybox --restart=Never --dry-run -o yaml -- /bin/sh -s "sleep 36000;" > 115.yaml
 1527  nano 115.yaml 
 1528  kubectl create -f 115.yaml 
 1529  kubectl get pod secbusybox 
 1530  kubectl exec -ti secbusybox 
 1531  kubectl exec -ti secbusybox --sh
 1532  kubectl exec -ti secbusybox --/bin/sh
 1533  history | grep exec
 1534  kubectl exec -ti secbusybox /bin/sh
 1535  kubectl exec -ti secbusybox sh
 1536  ls
 1537  kubectl get pd
 1538  kubectl get po
 1539  cc
 1540  c
 1541  cc
 1542  kubectl run 117 --image=nginx --restart=Never --dry-run -o yaml > 117.yaml
 1543  nano 117.yaml 
 1544  kubectl create -f 117.yaml 
 1545  kubectl get pod 117
 1546  kubectl exec -it -- sh
 1547  kubectl exec -it 117 -- sh
 1548  cc
 1549  kubectl run 118 --image=nginx --restart=Never --dry-run -o yaml > 118.yaml
 1550  nano 118
 1551  nano 118.yaml 
 1552  kubectl create -f 118.yaml 
 1553  kubectl get pod 
 1554  kubectl exec -ti 118 sh
 1555  cc
 1556  kubectl create secret generic 122 --from-literal=username=user --from-literal=password=mypassword
 1557  kubectl get secret
 1558  kubectl get secrets --all-namespaces 
 1559  cc
 1560  kubectl get secrets
 1561  kubectl get secrets 122 -o yaml
 1562  cc
 1563  kubectl run 125 --image=nginx --restart=Never --dry-run -o yaml > 125.yaml
 1564  nano 125.yaml 
 1565  kubectl get secrets 
 1566  nano 125.yaml 
 1567  kubectl create -f 125.yaml 
 1568  nano 125.yaml 
 1569  kubectl get secrets 
 1570  nano 125.yaml 
 1571  kubectl get secrets 
 1572  kubectl create -f 125.yaml 
 1573  kubectl get secrets 
 1574  nano 125.yaml 
 1575  kubectl get secrets 
 1576  kubectl create -f 125.yaml 
 1577  cc
 1578  kubectl exec -it 125 -- env
 1579  kubectl get po
 1580  kubectl describe pod mysec
 1581  kubectl get secrets 
 1582  nano 125.yaml 
 1583  kubectl delete pod mysec
 1584  kubectl exec -it 125 -- env
 1585  kubectl create -f 125.yaml 
 1586  history 
 1587  kubectl create secret generic 122 --from-literal=username=user --from-literal=password=mypassword
 1588  kubectl create secret generic mysec122 --from-literal=username=user --from-literal=password=mypassword
 1589  kubectl get secrets 
 1590  kubectl create -f 125.yaml 
 1591  nano 125.yaml 
 1592  kubectl create -f 125.yaml 
 1593  kubectl get secrets 
 1594  kubectl get po
 1595  kubectl get po mysec -w
 1596  kubectl exec -it 125 -- env
 1597  kubectl exec -it mysec -- env
 1598  exit
 1599  git status
 1600  git add 2003012355 
 1601  git add 114nginx.yaml 
 1602  git commit -m "add log and sample "
 1603  git push origin master 
 1604  minikube start
 1605  script 202003042031
 1606  history | grep bashir
 1607  history | grep bash
 1608  source <(kubectl completion bash)
 1609  cc
 1610  ll
 1611  cc
 1612  kubectl get secrets 
 1613  kubectl run 126 --image=nginx --restart=Never --dry-run -o yaml > 126.yaml
 1614  nano 12
 1615  nano 126.yaml 
 1616  kubectl create -f 126.yaml 
 1617  kubectl exec 126 -- env
 1618  cc
 1619  ls
 1620  kubectl get po
 1621  cc
 1622  kubectl get sa
 1623  kubectl create sa admin
 1624  kubectl create sa admin -o yaml
 1625  kubectl create sa admin1 -o yaml
 1626  kubectl run 131 --image=busybox --restart=Never --dry-run -o yaml -- /bin/sh -c "sleep 3600" > 131.yaml
 1627  nano 131.yaml 
 1628  kubectl create -f 131.yaml 
 1629  kubectl exec -ti 131 -- sh
 1630  cc
 1631  kubectl run 132 --image=nginx --restart=Never --port=80 --dry-run -o yaml > 132.yaml
 1632  nano 132
 1633  nano 132.yaml 
 1634  kubectl explain pod.spec.containers
 1635  kubectl explain pod.spec.containers.readinessProbe
 1636  nano 132.yaml 
 1637  kubectl create -f 132.yaml 
 1638  cc
 1639  kubectl run 133 --image=nginx --restart=Never --port=80 --dry-run -o yaml > 133.yaml
 1640  kubectl explain containers.readinessProbe
 1641  kubectl explain pod.containers.readinessProbe
 1642  kubectl explain pod.spec.containers.readinessProbesss
 1643  kubectl explain pod.spec.containers.readinessProbe
 1644  nano 133.yaml 
 1645  kubectl explain pod.spec.containers.livenessProbe
 1646  gedit
 1647  minikube start
 1648  history | grep bash
 1649  source <(kubectl completion bash)
 1650  script 202003070954
 1651  cc
 1652  ll
 1653  cc
 1654  kubectl get po
 1655  cc
 1656  history | grep bash
 1657  source <(kubectl completion bash)
 1658  kubectl get po
 1659  cc
 1660  kubectl run 134 --image=nginx --restart=Never --port=80 --dry-run -o yaml > 134.yaml
 1661  kubectl explain pod.spec.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 1662  cc
 1663  kubectl explain pod.spec
 1664  kubectl explain pod.spec.container
 1665  kubectl explain pod.spec.containers
 1666  kubectl explain pod.spec.containers.livenessProbe
 1667  nano 134
 1668  nano 134.yaml 
 1669  kubectl explain pod.spec.containers.readinessProbe
 1670  nano 134.yaml 
 1671  c
 1672  cc
 1673  kubectl create -f 134.yaml 
 1674  nano 134.yaml 
 1675  kubectl create -f 134.yaml 
 1676  kubectl describe pod 134 | grep -i ness
 1677  kubectl get pod
 1678  nano 134.yaml 
 1679  kubectl get pod 134
 1680  kubectl logs pods 134
 1681  kubectl logs pod 
 1682  kubectl describe pod 134 
 1683  cc
 1684  kubectl explain Pod.spec.containers.livenessProbe
 1685  kubectl explain Pod.spec.containers.readinessProbe
 1686  kubectl run 136 --image=nginx --restart=Never --dry-run -o yaml > 136.yaml
 1687  nano 136.yaml 
 1688  kubectl explain Pod.spec.containers.readinessProbe
 1689  nano 136.yaml 
 1690  kubectl create -f 136.yaml 
 1691  nano 136.yaml 
 1692  kubectl create -f 136.yaml 
 1693  kubectl logs pods 136
 1694  kubectl describe pod 136
 1695  kubectl run 137busybox --image=busybox --restart=Never -- /bin/sh -c "echo I am from busybox pod; sleep 3600;"
 1696  kubectl logs pods 136
 1697  kubectl explain Pod.spec.containers.livenessProbe
 1698  minikube status
 1699  minikube stop
 1700  minikube start
 1701  kubectl logs 137busybox 
 1702  cc
 1703  kubectl get po
 1704  cc
 1705  history | grep bash
 1706  source <(kubectl completion bash)
 1707  cc
 1708  kubectl get events --sort-by=.metadata.creationTimestamp
 1709  cc
 1710  kubectl run 140 --image=alpine --restart=Never --dry-run -o yaml --/bin/sh ”while true; do echo ‘Hi I am from alpine’; sleep 5; done” > 140yaml
 1711  kubectl run 140 --image=alpine --restart=Never --dry-run -o yaml --/bin/sh -c ”while true; do echo ‘Hi I am from alpine’; sleep 5; done” > 140.yaml
 1712  kubectl run 140 --image=alpine --restart=Never --dry-run -o yaml -- /bin/sh -c ”while true; do echo ‘Hi I am from alpine’; sleep 5; done” > 140.yaml
 1713  kubectl run 140 --image=alpine --restart=Never -- /bin/sh -c ”while true; do echo ‘Hi I am from alpine’; sleep 5; done” > 140.yaml
 1714  kubectl run 140 --image=alpine --restart=Never --dry-run -o yaml -- /bin/sh -c "while true; do echo ‘Hi I am from alpine’; sleep 5; done” > 140.yaml
 1715  exit
 1716  //
 1717  kubectl run 140 --image=alpine --restart=Never -- /bin/sh -c "while true; do echo ‘Hi I am from alpine’; sleep 5;done” > 140.yaml
 1718  kubectl run 140 --image=alpine --restart=Never -- /bin/sh -c "while true; do echo ‘Hi I am from alpine’; sleep 5;done” 
 1719  kubectl get pod 140
 1720  cc
 1721  kubectl run 140 --image=alpine --restart=Never -- /bin/sh -c "while true; do echo 'Hi I am from alpine'; sleep 5;done" > 140.yaml 
 1722  nano 140.yaml 
 1723  kubectl run 140 --image=alpine --restart=Never -- /bin/sh -c "while true; do echo 'Hi I am from alpine'; sleep 5;done"
 1724  kubectl logs --follow hello
 1725  kubectl delete pod 140
 1726  cc
 1727  nano 140.yaml 
 1728  kubectl run hello --image=alpine --restart=Never  -- /bin/sh -c "while true; do echo 'Hi I am from Alpine'; sleep 5;done"
 1729  kubectl logs --follow hello
 1730  kubectl run 140 --image=alpine --restart=Never -- /bin/sh -c "while true; do echo 'Hi I am from alpine'; sleep 5;done"
 1731  kubectl logs --follow hello
 1732  kubectl logs --follow 140
 1733  cc
 1734  kubectl create -f https://gist.githubusercontent.com/bbachi/212168375b39e36e2e2984c097167b00/raw/1fd63509c3ae3a3d3da844640fb4cca744543c1c/not-running.yml
 1735  kubectl get pot not-running
 1736  kubectl get pod not-running
 1737  kubectl edit pod not-running 
 1738  kubectl get pod not-running
 1739  kubectl edit pod not-running 
 1740  kubectl get pod not-running
 1741  kubectl create -f https://gist.githubusercontent.com/bbachi/1f001f10337234d46806929d12245397/raw/84b7295fb077f15de979fec5b3f7a13fc69c6d83/problem-pod.yaml
 1742  kubectl get po --all-namespaces 
 1743  kubectl get po -n namespace2
 1744  kubectl set image pod/pod2 pod2=nginx -n namespace2
 1745  kubectl get po --all-namespaces 
 1746  kubectl get po -n namespace2
 1747  cc
 1748  kubectl run 144 --image=nginx --restart=Never --port=80 --dry-run -o yaml > 144.yaml
 1749  nano 144.yaml 
 1750  kubectl create -f 144.yaml 
 1751  nano 145svc.yaml
 1752  kubectl create -f 145svc.yaml 
 1753  nano 145svc.yaml
 1754  kubectl create -f 145svc.yaml 
 1755  nano 145svc.yaml
 1756  kubectl create -f 145svc.yaml 
 1757  nano 145svc.yaml
 1758  kubectl create -f 145svc.yaml 
 1759  kubectl get svc
 1760  kubectl expose po nginx --port=80 --target-port=9376
 1761  kubectl get po nginx  -o yaml
 1762  kubectl get po nginx  -o yaml >148.yml
 1763  nano 148.yml 
 1764  kubectl expose po nginx --port=80 --type=NodePort
 1765  kubectl delete svc nginx
 1766  kubectl expose po nginx --port=80 --type=NodePort
 1767  kubectl ger svc nginx 
 1768  kubectl get svc nginx 
 1769  kubectl get svc nginx -o yaml
 1770  cat 144.yaml 
 1771  cat 145svc.yaml 
 1772  kubectl get svc nginx -o yaml
 1773  cc
 1774  kubectl get svc nginx -o yaml
 1775  cat 145svc.yaml 
 1776  cc
 1777  git add .
 1778  git status
 1779  git commit -m "all 150 k8"
 1780  git push origin master 
 1781  cc
 1782  kubectl explain --recursive 
 1783  kubectl explain pod --recursive 
 1784  kubectl explain pod.container.spec --recursive 
 1785  kubectl explain pod.containers.spec --recursive 
 1786  kubectl explain pod --recursive 
 1787  kubectl explain pod --recursive | grep container
 1788  kubectl explain pod.containers --recursive 
 1789  kubectl explain pod --recursive 
 1790  kubectl explain pod.spec --recursive 
 1791  c
 1792  cc
 1793  kubectl config view
 1794  kubectl explain pod --recursive  > ListOfResourcesOfPod
 1795  nano ListOfResourcesOfPod 
 1796  git add ListOfResourcesOfPod 
 1797  git commit -m "add List of resources of POD"
 1798  git push origin master 
 1799  git status
 1800  exit
 1801  alias gadd "git add"
 1802  alias gadd "git add ."
 1803  alias --h
 1804  alias help
 1805  alias
 1806  alias gadd="git add ."
 1807  alias gadd="git add"
 1808  gadd
 1809  gadd .
 1810  git status 
 1811  echo << EOF >> GitAlias
 1812  alias gadd="git add "
 1813  alias gcom="git commit -m ""
 1814  alias gpush="git push origin master"
 1815  EOF
 1816  cat GitAlias 
 1817  nano GitAlias 
 1818  echo << EOF > test1
 1819  hi 
 1820  hello 
 1821  How are u
 1822  EOF
 1823  cat test1
 1824  rm GitAlias 
 1825  echo << EOF > GitAlias.txt
 1826  alias gadd="git add "
 1827  alias gcom="git commit -m ""
 1828  alias gpush="git push origin master"
 1829  EOF
 1830  cat GitAlias.txt 
 1831  echo << EOF >> GitAlias.txt
 1832  alias gadd="git add "
 1833  alias gcom="git commit -m ""
 1834  alias gpush="git push origin master"
 1835  EOF
 1836  cat GitAlias.txt 
 1837  echo << EOF >> GitAlias.txt
 1838  alias gadd="git add "
 1839  alias gcom="git commit -m ""
 1840  alias gpush="git push origin master"
 1841  EOF
 1842  cat GitAlias.txt 
 1843  echo << EOF >> 12GitAlias.txt
 1844  asas
 1845  hi
 1846  EOF
 1847  cat 12
 1848  cat 12GitAlias.txt 
 1849  rm 12GitAlias.txt 
 1850  rm GitAlias.txt 
 1851  echo >> 12GitAlias.txt <<EOF
 1852  asas
 1853  hi
 1854  EOF
 1855  cat 12GitAlias.txt 
 1856  rm 12GitAlias.txt 
 1857  echo >> 12Git.txt <<EOF
 1858  hhi 
 1859  this is program aassssssssssssssssssssssssssssssssssssssss
 1860  EOF
 1861  cat 12Git.txt 
 1862  nano 12Git.txt 
 1863  rm 12Git.txt 
 1864  echo << EOF >> 12file.txt 
 1865  hi 
 1866  this 
 1867  das
 1868  EOF
 1869  cat 12file.txt 
 1870  cat << EOF >> 12file.txt 
 1871  hi 
 1872  this 
 1873  das
 1874  gu 
 1875  jklkj
 1876  hoi 
 1877  EOF
 1878  cat 12F
 1879  cat 12file.txt 
 1880  cat << EOF > GitAlias
 1881  alias gadd="git add "
 1882  alias gcom="git commit -m ""
 1883  alias gpush="git push origin master"
 1884  EOF
 1885  cat GitAlias 
 1886  gad
 1887  gadd
 1888  touch 123.txt 
 1889  git add llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
 1890  git add 
 1891  git add 123.txt
 1892  gadd 123
 1893  gadd 123.txt
 1894  git status
 1895  gcom file to check
 1896  git status
 1897  git commit -m "check "
 1898  gpush
 1899  nano .bashrc
 1900  nano ./bashrc
 1901  cat ~/.bashrc 
 1902  s
 1903  ls
 1904  gpush
 1905  cat GitAlias 
 1906  alias gadd="git add "
 1907  alias gcom="git commit -m ""
 1908  alias gpush="git push origin master"
 1909  exit
 1910  cat ~/.bashrc 
 1911  gpush
 1912  gcomm
 1913  gcom hi"
 1914  cat GitAlias 
 1915  alias gpush="git push origin master"
 1916  gpush
 1917  touch 678
 1918  gadd 678
 1919  git status
 1920  gcom hi"
 1921  alias gcom="git commit -m "
 1922  gcomaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 1923  gcom "test"
 1924  gpush
 1925  cat << EOF > testEOFfile 
 1926  jhjkhjk
 1927  hjkhk
 1928  EOF
 1929  cat testEOFfile 
 1930  rm testEOFfile 
 1931  exit
 1932  minikube start
 1933  cat << EOF > myfile.txt
 1934  hi 
 1935  Hello
 1936  bye
 1937  EOF
 1938  cat myfile.txt 
 1939  cat << EOF >> myfile.txt 
 1940  how are you
 1941  byebye
 1942  EOF
 1943  cat myfile.txt 
 1944  rm myfile.txt 
 1945  git status 
 1946  ll
 1947  cat GitAlias 
 1948  kubectl config view
 1949  kubectl <(bash completion)
 1950  history | grep bash
 1951  source <(kubectl completion bash)
 1952  cc
 1953  kubectl config view 
 1954  cat ~/.kube/config 
 1955  png 8.8.8.8
 1956  ping 8.8.8.8
 1957  minikube start
 1958  exit
 1959  kubectl get all
 1960  exit
 1961  cd Q2_CNC/
 1962  ls
 1963  ls java/
 1964  git remote add java/firstJava.js
 1965  git remote add --help
 1966  git remote --help
 1967  cc
 1968  git --help 
 1969  git help everyday 
 1970  git add .
 1971  git status
 1972  git config status
 1973  git config remote status
 1974  git remote add ABC.txt
 1975  minikube status
 1976  source <(kubectl completion bash)
 1977  kubectl get all 
 1978  kubectl config view 
 1979  cc
 1980  exit
 1981  echo "This is SOLUTION for CKAD Exercise by dgkanatsios"
 1982  echo "This is SOLUTION for CKAD Exercise by dgkanatsios" >> README.md 
 1983  kubectl create ns mynamespace
 1984  kubectl get ns
 1985  kubectl get pod
 1986  kubectl delete pod nginx
 1987  cc
 1988  kubectl run nginx --image=nginx --restart=Never --dry-run -o yaml > 1.yaml
 1989  nano 1.yaml 
 1990  kubectl create -f 1.yaml 
 1991  kubectl get pod
 1992  kubectl get pod nginx
 1993  kubectl get pod nginx -n mynamespace
 1994  cc
 1995  kubectl get pod 
 1996  cc
 1997  kubectl run busybox --image=busybox --restart=Never --dry-run -o yaml --command -- env > envpod.yaml
 1998  nano envpod.yaml 
 1999  kubectl apply -f envpod.yaml
 2000  kubectl logs busybox
 2001  kubectl get pod 
 2002  kubectl get pod busybox
 2003  kubectl logs busybox
 2004  cc
 2005  kubectl exec -ti busybox 
 2006  kubectl exec -ti busybox --env
 2007  kubectl exec -ti busybox -- /bin/sh 
 2008  cc
 2009  kubectl create ns myns --dry-run 
 2010  kubectl create ns myns --dry-run -o yaml
 2011  kubectl create --help
 2012  kubectl create quota --help
 2013  cc
 2014  kubectl create quota myrq --hard=cpu=1,memory=1G,pods=2 --dry-run -o yaml > 2rq.yaml
 2015  nano 2rq.yaml 
 2016  kubectl get pods --all-namespace
 2017  kubectl get pods --all-namespaces
 2018  cc
 2019  kubectl run nginx --image=nginx --restart=Never --port=80 
 2020  kubectl run nginx --image=nginx --restart=Never --dry-run -o yaml 
 2021  kubectl run nginx --image=nginx --restart=Never --port=80 --dry-run -o yaml 
 2022  cc
 2023  kubectl --h
 2024  kubectl set --h
 2025  kubectl set --help
 2026  kubectl set name 
 2027  kubectl set -h
 2028  kubectl set image -h
 2029  kubectl set image pod nginx=nginx:1.7.1
 2030  kubectl set image/pod nginx=nginx:1.7.1
 2031  kubectl set image pod/nginx nginx=nginx:1.7.1
 2032  kubectl describe po nginx
 2033  kubectl describe po nginx | grep Image
 2034  cc
 2035  kubectl get pod nginx
 2036  kubectl get pod nginx -o wide
 2037  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- 10.1.1.131:80
 2038  kubectl delete pod busybox
 2039  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- 172.17.0.10:80
 2040  kubectl get po nginx -oyaml
 2041  kubectl logs nginx -p
 2042  kubectl exec -it nginx -- /bin/sh
 2043  c
 2044  cc
 2045  git status
 2046  git add 1.yaml 
 2047  git commit -m "file"
 2048  git push origin master 
 2049  git add envpod.yaml 
 2050  git commit -m "env file"
 2051  git push origin master 
 2052  read fname 
 2053  echo $fname 
 2054  git add \$fname 
 2055  echo $fname 
 2056  git add fname
 2057  git add $fname
 2058  git status 
 2059  read fname
 2060  git status 
 2061  git add $fname
 2062  git status 
 2063  git commit -m "\$fname" 
 2064  git push origin master 
 2065  echo << EOF > gitBatch.sh
ls
git status
read fname
git add fname
EOF

 2066  ./gitBatch
 2067  gitBatch.sh
 2068  cat gitBatch.sh 
 2069  echo << EOF >> gitBatch.sh
ls
git status
read fname
git add fname
EOF

 2070  cat gitBatch.sh 
 2071  nano gitBatch.sh 
 2072  ./gitBatch
 2073  bash gitBatch.sh 
 2074  history 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ history [9@bash gitBatch.sh[C[7P./gitBatchnano gitBatch.sh [1Pcat[C[C[C[C[C[C[C[C[C[C[C[C[C[1@nano[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 5 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d[39;49m(B[mls[4dgit status[5d[32mread[39m(B[m fname[6dgit add fname[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[1;65H(B[0;7mModified(B[m[7d 2059  [32mread[39m(B[m fname[8d 2060  git status[42m [9;2H[49m(B[m2061  git add (B[0;1m[31m$fname[10;2H[39m(B[m2062  git status[42m [11;2H[49m(B[m2063  git commit -m (B[0;1m[33m"\$fname"(B[0m[42m [12;2H[49m(B[m2064  git push origin master[42m [36d[49m(B[m[K[13d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[7d[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano gitBatch.sh 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 5 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d[39;49m(B[mls[4dgit status[5d[32mread[39m(B[m fname[6dgit add fname[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[1;65H(B[0;7mModified(B[m[7d 2059  [32mread[39m(B[m fname[8d 2060  git status[42m [9;2H[49m(B[m2061  git add (B[0;1m[31m$fname[10;2H[39m(B[m2062  git status[42m [11;2H[49m(B[m2063  git commit -m (B[0;1m[33m"\$fname"(B[0m[42m [12;2H[49m(B[m2064  git push origin master[42m [36d[49m(B[m[K[13d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lead[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25lfname[K[?12l[?25h[?25lname[K[?12l[?25h[?25lame[K[?12l[?25h[?25lme[K[?12l[?25h[?25le[K[?12l[?25h[?25l[K[?12l[?25h[?25l[8d[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[9d[?12l[?25h[?25l[8;12H[?12l[?25h[?25l [?12l[?25h[?25l[9d[?12l[?25h[?25l[A[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25ltatus[K[?12l[?25h[?25latus[K[?12l[?25h[?25ltus[K[?12l[?25h[?25lus[K[?12l[?25h[?25ls[K[?12l[?25h[?25l[K[?12l[?25h[?25l[7;36r[36;1H
[1;38r[8;1H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[6;36r[36;1H
[1;38r[6;1H[?12l[?25h[?25l[6;36r[36;1H
[1;38r[6;1H[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[7;36r[36;1H
[1;38r[7;1H[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[8d[?12l[?25h[?25l[7;25H[?12l[?25h[?25l [?12l[?25h[?25l[8d[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[9d[?12l[?25h[?25l[8;24H[?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[6;15H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[Als[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: gitBatch.sh                              (B[m[36;32H[?12l[?25h[?25l[K[1;73H[1;65H(B[0;7m        (B[m[36;29H(B[0;7m[ Wrote 7 lines ](B[m[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano gitBatch.sh [9Phistory[C[9@bash gitBatch.sh[C
1.yaml	      202003141444  envpod.yaml  README.md
202003141414  2rq.yaml	    gitBatch.sh
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31mgitBatch.sh[m

no changes added to commit (use "git add" and/or "git commit -a")
gits Bac tch.sh
[master e136075] $fname
 1 file changed, 7 insertions(+)
 create mode 100644 gitBatch.sh
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects:  33% (1/3)   Compressing objects:  66% (2/3)   Compressing objects: 100% (3/3)   Compressing objects: 100% (3/3), done.
Writing objects:  33% (1/3)   Writing objects:  66% (2/3)   Writing objects: 100% (3/3)   Writing objects: 100% (3/3), 334 bytes | 334.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/1)[Kremote: Resolving deltas: 100% (1/1)[Kremote: Resolving deltas: 100% (1/1), completed with 1 local object.[K
To https://github.com/engineerbaz/k8CKAD.git
   8fe57a9..e136075  master -> master
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh nano[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 7 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d[39;49m(B[mls[4dgit status[5d[32mread[39m(B[m fname[6dgit add (B[0;1m[31m$fname[7d[39m(B[mgit commit -m (B[0;1m[33m"\$fname"[8d[39m(B[mgit push origin master[3d[?12l[?25h[?25l[36d[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bi[K[KgitB[K[K[K[Kbash gitBatch.sh 
1.yaml	      202003141444  envpod.yaml  README.md
202003141414  2rq.yaml	    gitBatch.sh
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

no changes added to commit (use "git add" and/or "git commit -a")
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano [3Pccnano gitBatch.sh 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 7 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d[39;49m(B[mls[4dgit status[5d[32mread[39m(B[m fname[6dgit add (B[0;1m[31m$fname[7d[39m(B[mgit commit -m (B[0;1m[33m"\$fname"[8d[39m(B[mgit push origin master[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[7;24H[?12l[?25h[?25l[1;65H(B[0;7mModified(B[m[7;15H"[32m\(B[0;1m[31m$fname[39m(B[m[K[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: gitBatch.sh                              (B[m[36;32H[?12l[?25h[?25l[K[1;73H[1;65H(B[0;7m        (B[m[36;29H(B[0;7m[ Wrote 7 lines ](B[m[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ a[Kbash h[KgitBatch.sh 
1.yaml	      202003141444  envpod.yaml  README.md
202003141414  2rq.yaml	    gitBatch.sh
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

no changes added to commit (use "git add" and/or "git commit -a")
gitBashi .sh
fatal: pathspec 'gitBash.sh' did not match any files
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
	[31m202003141444[m

no changes added to commit

^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh nano[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 7 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d[39;49m(B[mls[4dgit status[5d[32mread[39m(B[m fname[6dgit add (B[0;1m[31m$fname[7d[39m(B[mgit commit -m (B[0;1m[31m$fname[8d[39m(B[mgit push origin master[3d[?12l[?25h[?25l[36;13H(B[0;7m[ line 1/8 (12%), col 1/3 (33%), char 0/85 (0%) ](B[m[3d[?12l[?25h[?25l[36d[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git push mas[K[K[Korigin master 
Everything up-to-date
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git push origin master [6Pnano gitBatch.sh[Cbash[C[C[C[C[C[C[C[C[C[C[C[C[Cnano[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 7 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d[39;49m(B[mls[4dgit status[5d[32mread[39m(B[m fname[6dgit add (B[0;1m[31m$fname[7d[39m(B[mgit commit -m (B[0;1m[31m$fname[8d[39m(B[mgit push origin master[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[A[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[1;65H(B[0;7mModified(B[m[3dels[?12l[?25h[?25lcls[?12l[?25h[?25lhls[?12l[?25h[?25lols[?12l[?25h[?25l(B[0;1m[34mecho[39m(B[m"ls[?12l[?25h[?25l ls[?12l[?25h[?25lls[K[?12l[?25h[?25lechols[K[?12l[?25h[?25l(B[0;1m[34mecho[39m(B[m ls[?12l[?25h[?25l"ls[?12l[?25h[?25l ls[?12l[?25h[?25lls[K[36d[K[3;7H[?12l[?25h[?25lSls[?12l[?25h[?25lls[K[?12l[?25h[?25lGls[?12l[?25h[?25lils[?12l[?25h[?25l ls[?12l[?25h[?25lls[K[?12l[?25h[?25ltls[?12l[?25h[?25l ls[?12l[?25h[?25lUls[?12l[?25h[?25lPls[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25lSls[?12l[?25h[?25ltls[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25lWls[?12l[?25h[?25lels[?12l[?25h[?25llls[?12l[?25h[?25lcls[?12l[?25h[?25lols[?12l[?25h[?25lmls[?12l[?25h[?25lels[?12l[?25h[?25l ls[?12l[?25h[?25lfls[?12l[?25h[?25lols[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25ltls[?12l[?25h[?25lols[?12l[?25h[?25l ls[?12l[?25h[?25lGls[?12l[?25h[?25lIls[?12l[?25h[?25ltls[?12l[?25h[?25l ls[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25lls[K[?12l[?25h[?25lils[?12l[?25h[?25ltls[?12l[?25h[?25l ls[?12l[?25h[?25l[6G(B[0;1m[33m"Welcome to Git "[39m(B[mls[?12l[?25h[?25l ls[?12l[?25h[?25l7[4;36r8[4dM[1;38r[3;23H[42m [49m(B[m[K[4dls[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25le[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l(B[0;1m[34mecho[39m(B[m[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l "[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25ld[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l u[?12l[?25h[?25lp[?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l o[?12l[?25h[?25ln[?12l[?25h[?25l[42m [49m(B[m[?12l[?25h[?25l G[?12l[?25h[?25lI[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25lt[?12l[?25h[?25l[6G(B[0;1m[33m"Completed update on Git"[39m(B[m[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: gitBatch.sh                              (B[m[36;32H[?12l[?25h[?25l[K[1;73H[1;65H(B[0;7m        (B[m[36;29H(B[0;7m[ Wrote 8 lines ](B[m[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano gitBatch.sh [6@git push origin master[C[6Pnano gitBatch.sh[Cbash[C[C[C[C[C[C[C[C[C[C[C[C[C
Welcome to Git 
1.yaml	      202003141444  envpod.yaml  README.md
202003141414  2rq.yaml	    gitBatch.sh
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

no changes added to commit (use "git add" and/or "git commit -a")
gitBashi .sh
fatal: pathspec 'gitBash.sh' did not match any files
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
	[31m202003141444[m

no changes added to commit

^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch hi.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch hi.txtbash gitBatch.sh 
Welcome to Git 
1.yaml	      202003141444  envpod.yaml  hi.txt
202003141414  2rq.yaml	    gitBatch.sh  README.md
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31mhi.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
hi, .txt
[master 75b364d] hi.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 hi.txt
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh 
Welcome to Git 
1.yaml	      202003141444  envpod.yaml  hi.txt
202003141414  2rq.yaml	    gitBatch.sh  README.md
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

no changes added to commit (use "git add" and/or "git commit -a")
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh [5Ptouch hi.txt[C[1P.txte.txty.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch hey.txtbash gitBatch.sh 
Welcome to Git 
1.yaml	      202003141444  envpod.yaml  hey.txt  README.md
202003141414  2rq.yaml	    gitBatch.sh  hi.txt
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31mhey.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
hey.txt
[master d39ef0b] hey.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 hey.txt
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects:  25% (1/4)   Compressing objects:  50% (2/4)   Compressing objects:  75% (3/4)   Compressing objects: 100% (4/4)   Compressing objects: 100% (4/4), done.
Writing objects:  25% (1/4)   Writing objects:  50% (2/4)   Writing objects:  75% (3/4)   Writing objects: 100% (4/4)   Writing objects: 100% (4/4), 426 bytes | 426.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/2)[Kremote: Resolving deltas: 100% (2/2)[Kremote: Resolving deltas: 100% (2/2), completed with 1 local object.[K
To https://github.com/engineerbaz/k8CKAD.git
   e136075..d39ef0b  master -> master
Completed update on Git
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh [4Ptouch hey.txtbash gitBatch.sh [5Ptouch hi.txtbash gitBatch.sh nano[C[C[C[C[C[C[C[C[C[C[C[C[C[6@git push origin master[C[6Pnano gitBatch.sh[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 8 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"Welcome to Git "(B[0m[42m [4d[49m(B[mls[5dgit status[6d[32mread[39m(B[m fname[7dgit add (B[0;1m[31m$fname[8d[39m(B[mgit commit -m (B[0;1m[31m$fname[9d[39m(B[mgit push origin master[10d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"Completed update on Git"[3d[39m(B[m[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[C[?12l[?25h[?25l[1;65H(B[0;7mModified(B[m[3;7H(B[0;1m[33m*Welcome to Git "(B[0m[42m [8G[49m(B[m[?12l[?25h[?25l(B[0;1m[33m**Welcome to Git "(B[0m[42m [3;9H[49m(B[m[?12l[?25h[?25l(B[0;1m[33m***Welcome to Git "(B[0m[42m [3;10H[49m(B[m[?12l[?25h[?25l(B[0;1m[33m****Welcome to Git "(B[0m[42m [3;11H[49m(B[m[?12l[?25h[?25l(B[0;1m[33m*****Welcome to Git "(B[0m[42m [3;12H[49m(B[m[?12l[?25h[?25l[7G(B[0;1m[33m******Welcome to Git "(B[0m[42m [3;13H[49m(B[m[?12l[?25h[?25l(B[0;1m[33m Welcome to Git "(B[0m[42m [36d[49m(B[m[K[3;14H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l(B[0;1m[33m*"(B[0m[42m [49m(B[m[?12l[?25h[?25l(B[0;1m[33m**"(B[0m[42m [49m(B[m[?12l[?25h[?25l(B[0;1m[33m***"(B[0m[42m [49m(B[m[?12l[?25h[?25l(B[0;1m[33m****"(B[0m[42m [49m(B[m[?12l[?25h[?25l(B[0;1m[33m*****"(B[0m[42m [49m(B[m[?12l[?25h[?25l[4;3H[?12l[?25h[?25l[5;11H[?12l[?25h[?25l[6d[?12l[?25h[?25l[7;15H[?12l[?25h[?25l[8;21H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l"(B[0;1m[31m$fname[16G[39m(B[m[?12l[?25h[?25lu(B[0;1m[31m$fname[17G[39m(B[m[?12l[?25h[?25ld(B[0;1m[31m$fname[18G[39m(B[m[?12l[?25h[?25l[1P[?12l[?25h[?25lp(B[0;1m[31m$fname[18G[39m(B[m[?12l[?25h[?25ld(B[0;1m[31m$fname[19G[39m(B[m[?12l[?25h[?25la(B[0;1m[31m$fname[20G[39m(B[m[?12l[?25h[?25lt(B[0;1m[31m$fname[21G[39m(B[m[?12l[?25h[?25le(B[0;1m[31m$fname[22G[39m(B[m[?12l[?25h[?25l (B[0;1m[31m$fname[23G[39m(B[m[?12l[?25h[?25lo(B[0;1m[31m$fname[24G[39m(B[m[?12l[?25h[?25ln(B[0;1m[31m$fname[25G[39m(B[m[?12l[?25h[?25l (B[0;1m[31m$fname[26G[39m(B[m[?12l[?25h[?25lf(B[0;1m[31m$fname[27G[39m(B[m[?12l[?25h[?25l[32mfi(B[0;1m[31m$fname[28G[39m(B[m[?12l[?25h[?25lfil(B[0;1m[31m$fname[29G[39m(B[m[?12l[?25h[?25lr(B[0;1m[31m$fname[30G[39m(B[m[?12l[?25h[?25l (B[0;1m[31m$fname[31G[39m(B[m[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25le(B[0;1m[31m$fname[30G[39m(B[m[?12l[?25h[?25l (B[0;1m[31m$fname[31G[39m(B[m[?12l[?25h[?25l[8;15H(B[0;1m[33m"update on file "[31m$fname[32G[39m(B[m[?12l[?25h[?25l+(B[0;1m[31m$fname[33G[39m(B[m[?12l[?25h[?25l[1P[?12l[?25h[?25l (B[0;1m[31m$fname[33G[39m(B[m[?12l[?25h[?25l[32m&(B[0;1m[31m$fname[34G[39m(B[m[?12l[?25h[?25l[1P[?12l[?25h[?25l[9;23H[?12l[?25h[?25l[10;31H[?12l[?25h[?25l[?12l[?25h[?25l(B[0;1m[33m "[39m(B[m[?12l[?25h[?25l(B[0;1m[33m-"[39m(B[m[?12l[?25h[?25l(B[0;1m[33m--"[39m(B[m[?12l[?25h[?25l(B[0;1m[33m---"[39m(B[m[?12l[?25h[?25l(B[0;1m[33m----"[39m(B[m[?12l[?25h[?25l(B[0;1m[33m-----"[39m(B[m[?12l[?25h[?25l[31G(B[0;1m[33m------"[39m(B[m[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[C[?12l[?25h[?25l(B[0;1m[33m-Completed update on Git ------"[8G[39m(B[m[?12l[?25h[?25l(B[0;1m[33m--Completed update on Git ------"[10;9H[39m(B[m[?12l[?25h[?25l(B[0;1m[33m---Completed update on Git ------"[10;10H[39m(B[m[?12l[?25h[?25l(B[0;1m[33m----Completed update on Git ------"[10;11H[39m(B[m[?12l[?25h[?25l(B[0;1m[33m-----Completed update on Git ------"[10;12H[39m(B[m[?12l[?25h[?25l[7G(B[0;1m[33m------Completed update on Git ------"[10;13H[39m(B[m[?12l[?25h[?25l[7G[13G(B[0;1m[33m-Completed update on Git ------"[10;14H[39m(B[m[?12l[?25h[?25l[7G[14G(B[0;1m[33m-Completed update on Git ------"[10;15H[39m(B[m[?12l[?25h[?25l[7G[10;15H(B[0;1m[33m-Completed update on Git ------"[10;16H[39m(B[m[?12l[?25h[?25l(B[0;1m[33m Completed update on Git ------"[10;17H[39m(B[m[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: gitBatch.sh                              (B[m[36;32H[?12l[?25h[?25l[K[1;73H[1;65H(B[0;7m        (B[m[36;29H(B[0;7m[ Wrote 8 lines ](B[m[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano gitBatch.sh bash[C[C[C[C[C[C[C[C[C[C[C[C[C[4Ptouch hey.txtbash gitBatch.sh [4Ptouch hey.txt[C[1P.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch he.txtnano gitBatch.sh bash[C[C[C[C[C[C[C[C[C[C[C[C[C
****** Welcome to Git *****
1.yaml	      202003141444  envpod.yaml  he.txt   hi.txt
202003141414  2rq.yaml	    gitBatch.sh  hey.txt  README.md
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31mhe.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
he.txt
[master a374943] update on file
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 he.txt
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh [5Ptouch he.txt1.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch he1.txtbash gitBatch.sh 
****** Welcome to Git *****
1.yaml	      202003141444  envpod.yaml  he1.txt  hey.txt  README.md
202003141414  2rq.yaml	    gitBatch.sh  he.txt   hi.txt
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31mhe1.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
he1.tt z xt
[master dace0ca] update on file
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 he1.txt
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects:  25% (1/4)   Compressing objects:  50% (2/4)   Compressing objects:  75% (3/4)   Compressing objects: 100% (4/4)   Compressing objects: 100% (4/4), done.
Writing objects:  25% (1/4)   Writing objects:  50% (2/4)   Writing objects:  75% (3/4)   Writing objects: 100% (4/4)   Writing objects: 100% (4/4), 411 bytes | 411.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/2)[Kremote: Resolving deltas: 100% (2/2)[Kremote: Resolving deltas: 100% (2/2), completed with 1 local object.[K
To https://github.com/engineerbaz/k8CKAD.git
   d39ef0b..dace0ca  master -> master
--------- Completed update on Git ------
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh [4Ptouch he1.txtbash gitBatch.sh [5Ptouch he.txtnano gitBatch.sh 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 8 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"****** Welcome to Git *****"(B[0m[42m [4d[49m(B[mls[5dgit status[6d[32mread[39m(B[m fname[7dgit add (B[0;1m[31m$fname[8d[39m(B[mgit commit -m (B[0;1m[33m"update on file "[39m(B[m (B[0;1m[31m$fname[9d[39m(B[mgit push origin master[10d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"--------- Completed update on Git ------"[3d[39m(B[m[?12l[?25h[?25l[1;65H(B[0;7mModified(B[m[3daecho (B[0;1m[33m"****** Welcome to Git *****"(B[0m[42m [C[49m(B[m[?12l[?25h[?25l(B[0;1m[34mecho[39m(B[m[1P[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[8;39H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l[32m&(B[0;1m[31m$fname[34G[39m(B[m[?12l[?25h[?25l[32m&&(B[0;1m[31m$fname[35G[39m(B[m[?12l[?25h[?25l (B[0;1m[31m$fname[36G[39m(B[m[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: gitBatch.sh                              (B[m[36;32H[?12l[?25h[?25l[?12l[?25h[?25l[1K (B[0;7m[ Cancelled ](B[m[K[37;15H(B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[K[38;2H(B[0;7mX(B[m Exit       (B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[8;36H[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: gitBatch.sh                              (B[m[36;32H[?12l[?25h[?25l[K[1;73H[1;65H(B[0;7m        (B[m[36;29H(B[0;7m[ Wrote 8 lines ](B[m[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano gitBatch.sh bash[C[C[C[C[C[C[C[C[C[C[C[C[C[4Ptouch he1.txt[1P.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch he.txtnano gitBatch.sh 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 8 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"****** Welcome to Git *****"(B[0m[42m [4d[49m(B[mls[5dgit status[6d[32mread[39m(B[m fname[7dgit add (B[0;1m[31m$fname[8d[39m(B[mgit commit -m (B[0;1m[33m"update on file "[39m(B[m [32m&&[39m(B[m (B[0;1m[31m$fname[9d[39m(B[mgit push origin master[10d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"--------- Completed update on Git ------"[3d[39m(B[m[?12l[?25h[?25l[36d[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano gitBatch.sh [5Ptouch he.txtnano gitBatch.sh bash[C[C[C[C[C[C[C[C[C[C[C[C[C
****** Welcome to Git *****
1.yaml	      202003141444  envpod.yaml  he1.txt  hey.txt  README.md
202003141414  2rq.yaml	    gitBatch.sh  he.txt   hi.txt
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

no changes added to commit (use "git add" and/or "git commit -a")
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh nano[C[C[C[C[C[C[C[C[C[C[C[C[C[5Ptouch he.txt2he.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch 2he.txtbash gitBatch.sh 
****** Welcome to Git *****
1.yaml	      202003141444  2rq.yaml	 gitBatch.sh  he.txt   hi.txt
202003141414  2he.txt	    envpod.yaml  he1.txt      hey.txt  README.md
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31m2he.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
2he.txt
[master 498f48d] update on file
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 2he.txt
gitBatch.sh: line 6: 2he.txt: command not found
To https://github.com/engineerbaz/k8CKAD.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/engineerbaz/k8CKAD.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
--------- Completed update on Git ------
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh [4Ptouch 2he.txtbash gitBatch.sh nano[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;30H(B[0;7m[ Reading File ](B[m[36;36H(B[0;7m 8 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                  gitBatch.sh                             [1;73H(B[m[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Linter[36d[3d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"****** Welcome to Git *****"(B[0m[42m [4d[49m(B[mls[5dgit status[6d[32mread[39m(B[m fname[7dgit add (B[0;1m[31m$fname[8d[39m(B[mgit commit -m (B[0;1m[33m"update on file "[39m(B[m [32m&&[39m(B[m (B[0;1m[31m$fname[9d[39m(B[mgit push origin master[10d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"--------- Completed update on Git ------"[3d[39m(B[m[?12l[?25h[?25l[36d[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git stati[Kus 
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

no changes added to commit (use "git add" and/or "git commit -a")
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git status cc[Knano gitBatch.sh bash[C[C[C[C[C[C[C[C[C[C[C[C[C[4Ptouch 2he.txt[1Phe.txt3he.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch 3he.txt[2Pgit status 
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31m3he.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git add 3he.txt 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -h
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -m "Update made on [K[Kn file"&&$fname
[master 6311607] Update made on file
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 3he.txt
README.md: command not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo fname$fname
README.md
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ read fname
3he.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ ll
total 200
drwxr-xr-x  3 baz baz   4096 Mar 14 19:44 [0m[01;34m.[0m/
drwxrwxr-x 12 baz baz   4096 Mar 14 14:03 [01;34m..[0m/
-rw-r--r--  1 baz baz    256 Mar 14 14:46 1.yaml
-rw-r--r--  1 baz baz  12235 Mar 14 14:42 202003141414
-rw-r--r--  1 baz baz 155648 Mar 14 19:44 202003141444
-rw-r--r--  1 baz baz      0 Mar 14 19:43 2he.txt
-rw-r--r--  1 baz baz    151 Mar 14 14:54 2rq.yaml
-rw-r--r--  1 baz baz      0 Mar 14 19:44 3he.txt
-rw-r--r--  1 baz baz    262 Mar 14 14:48 envpod.yaml
drwxr-xr-x  8 baz baz   4096 Mar 14 19:45 [01;34m.git[0m/
-rw-r--r--  1 baz baz    189 Mar 14 19:43 gitBatch.sh
-rw-r--r--  1 baz baz      0 Mar 14 19:41 he1.txt
-rw-r--r--  1 baz baz      0 Mar 14 19:43 he.txt
-rw-r--r--  1 baz baz      0 Mar 14 19:39 hey.txt
-rw-r--r--  1 baz baz      0 Mar 14 19:37 hi.txt
-rw-r--r--  1 baz baz     92 Mar 14 14:44 README.md
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ ls
1.yaml  202003141414  202003141444  2he.txt  2rq.yaml  3he.txt  envpod.yaml  gitBatch.sh  he1.txt  he.txt  hey.txt  hi.txt  README.md
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -m "update on file " && $fname
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
	[31m202003141444[m

no changes added to commit
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -m "update on file " && $fname
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
	[31m202003141444[m

no changes added to commit
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo [K[K[K[K[Ktouch 55.tt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ read fnam
^Z^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ read fname
55.tt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git add $fname
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ gits [K[K status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mnew file:   55.tt[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -m "update on file " && $fname[1P$fname[1P&&$fname
[master 0a3e691] update on file
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 55.tt
55.tt: command not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cat gitBatch.sh 
echo "****** Welcome to Git *****" 
ls
git status
read fname
git add $fname
git commit -m "update on file " && $fname
git push origin master
echo "--------- Completed update on Git ------"
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git commit -m "update on file " && $fname
On branch master
Your branch is ahead of 'origin/master' by 3 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
	[31mmodified:   202003141414[m
	[31mmodified:   gitBatch.sh[m

Untracked files:
	[31m202003141444[m

no changes added to commit
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo " [Khi " && $fanem[K[K[K[Kname
hi 
55.tt: command not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo "hi " && $fname[C[1Pfname
hi 

Command 'fname' not found, did you mean:

  command 'uname' from deb coreutils

Try: sudo apt install <deb name>

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo "hi " && fname$fnameDfname[C[C[1Pfname[C[1P$fname[C=&&$fname[1P&&$fname[1P&&$fname
hi 
55.tt: command not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo "hi "&&$fname[1P$fname
[1] 11453
hi 
55.tt: command not found
[1]+  Done                    echo "hi "
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo "hi "&$fname&$fname=fname[1Pfname[1Pfname
hi 

Command 'fname' not found, did you mean:

  command 'uname' from deb coreutils

Try: sudo apt install <deb name>

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo "hi "&&fname[1Pfname
[1] 11490
hi 

Command 'fname' not found, did you mean:

  command 'uname' from deb coreutils

Try: sudo apt install <deb name>

[1]+  Done                    echo "hi "
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ man echp
No manual entry for echp
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ man echp[Ko
[?1049h[22;0;0t[?1h=ECHO(1)                                                            User Commands                                                           ECHO(1)[m
[m
[1mNAME[0m[m
       echo - display a line of text[m
[m
[1mSYNOPSIS[0m[m
       [1mecho[0m [[4mSHORT-OPTION[24m]... [[4mSTRING[24m]...[m
       [1mecho[0m [4mLONG-OPTION[24m[m
[m
[1mDESCRIPTION[0m[m
       Echo the STRING(s) to standard output.[m
[m
       [1m-n[0m     do not output the trailing newline[m
[m
       [1m-e[0m     enable interpretation of backslash escapes[m
[m
       [1m-E[0m     disable interpretation of backslash escapes (default)[m
[m
       [1m--help[0m display this help and exit[m
[m
       [1m--version[0m[m
              output version information and exit[m
[m
       If [1m-e[0m is in effect, the following sequences are recognized:[m
[m
       \\     backslash[m
[m
       \a     alert (BEL)[m
[m
       \b     backspace[m
[m
       \c     produce no further output[m
[m
       \e     escape[m
[m
       \f     form feed[m
[m
[7m Manual page echo(1) line 1 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       \n     new line[m
[7m Manual page echo(1) line 2 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 3 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       \r     carriage return[m
[7m Manual page echo(1) line 4 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 5 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       \t     horizontal tab[m
[7m Manual page echo(1) line 6 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 7 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       \v     vertical tab[m
[7m Manual page echo(1) line 8 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 9 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       \0NNN  byte with octal value NNN (1 to 3 digits)[m
[7m Manual page echo(1) line 10 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 11 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       \xHH   byte with hexadecimal value HH (1 to 2 digits)[m
[7m Manual page echo(1) line 12 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 13 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       NOTE: your shell may have its own version of echo, which usually supersedes the version described here.  Please refer to your shell's docu‐[m
[7m Manual page echo(1) line 14 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       mentation for details about the options it supports.[m
[7m Manual page echo(1) line 15 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 16 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[1mAUTHOR[0m[m
[7m Manual page echo(1) line 17 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       Written by Brian Fox and Chet Ramey.[m
[7m Manual page echo(1) line 18 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 19 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[1mREPORTING[0m [1mBUGS[0m[m
[7m Manual page echo(1) line 20 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>[m
[7m Manual page echo(1) line 21 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       Report echo translation bugs to <http://translationproject.org/team/>[m
[7m Manual page echo(1) line 22 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 23 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[1mCOPYRIGHT[0m[m
[7m Manual page echo(1) line 24 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       Copyright © 2017 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.[m
[7m Manual page echo(1) line 25 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.[m
[7m Manual page echo(1) line 26 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 27 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[1mSEE[0m [1mALSO[0m[m
[7m Manual page echo(1) line 28 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       Full documentation at: <http://www.gnu.org/software/coreutils/echo>[m
[7m Manual page echo(1) line 29 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       or available locally via: info '(coreutils) echo invocation'[m
[7m Manual page echo(1) line 30 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page echo(1) line 31 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[KGNU coreutils 8.28                                                 January 2018                                                            ECHO(1)[m
[7m Manual page echo(1) line 32 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[K[7m Manual page echo(1) line 32/68 (END) (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ what i[K[Kis echo
echo (1)             - display a line of text
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ nano gitBatch.sh 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;74H(B[0;7m 8 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                        gitBatch.sh                                                                   [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"****** Welcome to Git *****"(B[0m[42m [4d[49m(B[mls[5dgit status[6d[32mread[39m(B[m fname[7dgit add (B[0;1m[31m$fname[8d[39m(B[mgit commit -m (B[0;1m[33m"update on file "[39m(B[m [32m&&[39m(B[m (B[0;1m[31m$fname[9d[39m(B[mgit push origin master[10d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"--------- Completed update on Git ------"[3d[39m(B[m[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[8;42H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[C[?12l[?25h[?25l [?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[8;35H[1P[?12l[?25h[?25l[1P[C[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l[8;15H"update on file [1P[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[36d[K[8;35H[?12l[?25h[?25l[C[?12l[?25h[?25l[C[?12l[?25h[?25l[8;15H(B[0;1m[33m"update on file $fname"[39m(B[m[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: gitBatch.sh                              (B[m[36;32H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 8 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ ech[K[K[Kecho fname
fname
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo fname$fname
55.tt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo :[K"i[Khi %[K$fname"
hi 55.tt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ echo "hi $fname"[5P$fname[1Pfnamenano gitBatch.sh 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;74H(B[0;7m 8 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                        gitBatch.sh                                                                   [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Linter    (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"****** Welcome to Git *****"(B[0m[42m [4d[49m(B[mls[5dgit status[6d[32mread[39m(B[m fname[7dgit add (B[0;1m[31m$fname[8d[39m(B[mgit commit -m (B[0;1m[33m"update on file $fname"[9d[39m(B[mgit push origin master[10d(B[0;1m[34mecho[39m(B[m (B[0;1m[33m"--------- Completed update on Git ------"[3d[39m(B[m[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[?12l[?25h[?25l[36d[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ ls
1.yaml  202003141414  202003141444  2he.txt  2rq.yaml  3he.txt  55.tt  envpod.yaml  gitBatch.sh  he1.txt  he.txt  hey.txt  hi.txt  README.md
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ ll
total 228
drwxr-xr-x  3 baz baz   4096 Mar 14 19:51 [0m[01;34m.[0m/
drwxrwxr-x 12 baz baz   4096 Mar 14 14:03 [01;34m..[0m/
-rw-r--r--  1 baz baz    256 Mar 14 14:46 1.yaml
-rw-r--r--  1 baz baz  12235 Mar 14 14:42 202003141414
-rw-r--r--  1 baz baz 184320 Mar 14 19:50 202003141444
-rw-r--r--  1 baz baz      0 Mar 14 19:43 2he.txt
-rw-r--r--  1 baz baz    151 Mar 14 14:54 2rq.yaml
-rw-r--r--  1 baz baz      0 Mar 14 19:44 3he.txt
-rw-r--r--  1 baz baz      0 Mar 14 19:46 55.tt
-rw-r--r--  1 baz baz    262 Mar 14 14:48 envpod.yaml
drwxr-xr-x  8 baz baz   4096 Mar 14 19:47 [01;34m.git[0m/
-rw-r--r--  1 baz baz    185 Mar 14 19:50 gitBatch.sh
-rw-r--r--  1 baz baz      0 Mar 14 19:41 he1.txt
-rw-r--r--  1 baz baz      0 Mar 14 19:43 he.txt
-rw-r--r--  1 baz baz      0 Mar 14 19:39 hey.txt
-rw-r--r--  1 baz baz      0 Mar 14 19:37 hi.txt
-rw-r--r--  1 baz baz     92 Mar 14 14:44 README.md
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm 3he.txt 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm 3he.txt [1P[1@2
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm hi.txt 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm hi.txt [1@2he[C[C[C[C[C[1@y[1P
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm 55.tt 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm 55.tt [K[K[K[K[K[Khey
rm: cannot remove 'hey': No such file or directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm hey.txt
rm: cannot remove 'hey.txt': No such file or directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm he
he1.txt  he.txt   
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm he
he1.txt  he.txt   
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm he.txt 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ rm he.txt [K[K[K[K[K1.txt 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ cat hey[K[K[K[K[K[K[Kls
1.yaml  202003141414  202003141444  2rq.yaml  envpod.yaml  gitBatch.sh  README.md
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ touch bye.ztt[K[K[Ktxt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ bash gitBatch.sh 
****** Welcome to Git *****
1.yaml	202003141414  202003141444  2rq.yaml  bye.txt  envpod.yaml  gitBatch.sh  README.md
On branch master
Your branch is ahead of 'origin/master' by 3 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   202003141414[m
	[31mdeleted:    2he.txt[m
	[31mdeleted:    3he.txt[m
	[31mdeleted:    55.tt[m
	[31mmodified:   gitBatch.sh[m
	[31mdeleted:    he.txt[m
	[31mdeleted:    he1.txt[m
	[31mdeleted:    hey.txt[m
	[31mdeleted:    hi.txt[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m202003141444[m
	[31mbye.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
bye.txt
[master ed09f85] update on file bye.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 bye.txt
To https://github.com/engineerbaz/k8CKAD.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/engineerbaz/k8CKAD.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
--------- Completed update on Git ------
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git push origin master 
To https://github.com/engineerbaz/k8CKAD.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/engineerbaz/k8CKAD.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git pull 
remote: Enumerating objects: 3, done.[K
remote: Counting objects:  33% (1/3)[Kremote: Counting objects:  66% (2/3)[Kremote: Counting objects: 100% (3/3)[Kremote: Counting objects: 100% (3/3), done.[K
remote: Compressing objects:  50% (1/2)[Kremote: Compressing objects: 100% (2/2)[Kremote: Compressing objects: 100% (2/2), done.[K
remote: Total 2 (delta 1), reused 0 (delta 0), pack-reused 0[K
Unpacking objects:  50% (1/2)   Unpacking objects: 100% (2/2)   Unpacking objects: 100% (2/2), done.
From https://github.com/engineerbaz/k8CKAD
   dace0ca..8de0e53  master     -> origin/master
Removing he.txt
hint: Waiting for your editor to close the file... [?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;74H(B[0;7m 7 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                           /home/baz/Q1_CNC/k8CKAD/.git/MERGE_MSG                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mMerge branch 'master' of https://github.com/engineerbaz/k8CKAD[5d[36m# Please enter a commit message to explain why this merge is necessary,[6d# especially if it merges an updated upstream into a topic branch.[7d#[8d# Lines starting with '#' will be ignored, and an empty message aborts[9d# the commit.[3d[39m(B[m[?12l[?25h[?25l[36d[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>[KMerge made by the 'recursive' strategy.
 he.txt | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 delete mode 100644 he.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git merge
Already up to date.
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git mergepull 
Already up to date.
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ git pull mergepull [14@sh origin master[C
Counting objects: 10, done.
Delta compression using up to 4 threads.
Compressing objects:  10% (1/10)   Compressing objects:  20% (2/10)   Compressing objects:  30% (3/10)   Compressing objects:  40% (4/10)   Compressing objects:  50% (5/10)   Compressing objects:  60% (6/10)   Compressing objects:  70% (7/10)   Compressing objects:  80% (8/10)   Compressing objects:  90% (9/10)   Compressing objects: 100% (10/10)   Compressing objects: 100% (10/10), done.
Writing objects:  10% (1/10)   Writing objects:  20% (2/10)   Writing objects:  30% (3/10)   Writing objects:  40% (4/10)   Writing objects:  50% (5/10)   Writing objects:  70% (7/10)   Writing objects:  80% (8/10)   Writing objects:  90% (9/10)   Writing objects: 100% (10/10)   Writing objects: 100% (10/10), 1021 bytes | 255.00 KiB/s, done.
Total 10 (delta 5), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/5)[Kremote: Resolving deltas: 100% (5/5)[Kremote: Resolving deltas: 100% (5/5), completed with 1 local object.[K
To https://github.com/engineerbaz/k8CKAD.git
   8de0e53..8938703  master -> master
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD[00m$ ls
1.yaml  202003141414  202003141444  2rq.yaml  bye.txt  envpod.yaml  gitBatch.sh  README.md
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CN