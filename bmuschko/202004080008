Script started on 2020-04-08 00:09:21+0500
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ touc[K[K[K[Kecho << EOF >> config.txt
> DB_URL: localhost:3306
> DB_USERNAME;[K: postgres
> EOF
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cat config.txt 

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cat config.txt echo << EOF >> config.txt
DB_URL: localhost:3306
DB_USERNAME: postgres
EOF
[A[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P




]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ echo<< EOF >> config.txt
DB_URL: localhost:3306
DB_USERNAME: postgres
EOF
[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[9Pcat config.txt 
[K
[K
[K
[K[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C


]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cat config.txt echo<< EOF >> config.txt
DB_URL: localhost:3306
DB_USERNAME: postgres
EOF
[A[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P config.txt




]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ echo<< EOF > config.txt
DB_URL: localhost:3306
DB_USERNAME: postgres
EOF
[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[8Pcat config.txt 
[K
[K
[K
[K[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano config.txt 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;74H(B[0;7m 1 line ](B[m[K[H(B[0;7m  GNU nano 2.9.3                                                         config.txt                                                                   [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[m[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[3dDB_URL: localhost:3306[4dDB_USERNAME: postgres[16d[K[5d[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: config.txt                               (B[m[16;31H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 3 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano config.txt [1Pcat[C[C[C[C[C[C[C[C[C[C[C[C
DB_URL: localhost:3306
DB_USERNAME: postgres

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl run db-config [K[K[K[K[K[K[K[K[K[K[K[K[K[Kcreate cm db-config --from-file=config.txt
configmap/db-config created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ ki[Kubectl get cm
NAME        DATA   AGE
106cm       1      38d
110c        1      38d
112env      1      37d
another     2      18d
cfgvolume   2      37d
cmvol       2      18d
d1cm        2      19d
d2cm        1      19d
d3cm        2      19d
d4cm        1      19d
d5cm        1      19d
db-config   1      4s
env2        1      37d
envcfgmap   1      37d
options     1      18d
testenv     1      37d
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get cm db-config
NAME        DATA   AGE
db-config   1      12s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano config.txt 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;74H(B[0;7m 3 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                         config.txt                                                                   [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mDB_URL: localhost:3306[4dDB_USERNAME: postgres[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25lD[?12l[?25h[?25lB[?12l[?25h[?25l_[?12l[?25h[?25lU[?12l[?25h[?25lR[?12l[?25h[?25lL[?12l[?25h[?25l[16d[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get cm db-o[Kconfig -o yaml
apiVersion: v1
data:
  config.txt: |+
    DB_URL: localhost:3306
    DB_USERNAME: postgres

kind: ConfigMap
metadata:
  creationTimestamp: "2020-04-07T19:12:42Z"
  name: db-config
  namespace: default
  resourceVersion: "569432"
  selfLink: /api/v1/namespaces/default/configmaps/db-config
  uid: 231044da-4eb8-46cb-a8c2-de999698a45c
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl [K[K[K[K[K[K[K[Kcc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl run backend --image=nginx --resat[K[Ktart=Never -o yaml --dry-run > b1.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b1.yaml 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 15 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b1.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: backend[9;3Hname: backend[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: backend[14;5Hresources: {}[15;3HdnsPolicy: ClusterFirst[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3dspec:[K[4d  containers:[5d  - image: nginx[6;3H  name: backend[K[7;3H  resources: {}[8;3HdnsPolicy: ClusterFirst[9;3HrestartPolicy: Never[10dstatus: {}[11d[K[12d[K[13d[K[14d[K[15d[K[9d[?12l[?25h[?25l[A[?12l[?25h[?25l[7;18H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[8;15r[8;1HM[1;18r[8;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25lb[?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25lv[?12l[?25h[?25lF[16d[K[8;9H[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25l:[?12l[?25h[?25l7[9;16r8[9dM[1;18r[9;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lM[?12l[?25h[?25la[?12l[?25h[?25lp[?12l[?25h[?25lR[?12l[?25h[?25le[?12l[?25h[?25lf[?12l[?25h[?25l:[?12l[?25h[?25l7[10;16r8[10dM[1;18r[10;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lb[?12l[?25h[?25l-[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: b1.yaml                                  (B[m[16;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 18 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b1.yaml 
pod/backend created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl exec -ti bac[K[K[K[K[K[K[Kbackend -ti -- /bin/sh
# enb v
KUBERNETES_SERVICE_PORT=443
KUBERNETES_PORT=tcp://10.96.0.1:443
F1SVC_PORT_80_TCP=tcp://10.102.148.164:80
HOSTNAME=backend
F3DEP_SERVICE_PORT=80
FOO_SERVICE_HOST=10.97.79.96
F3DEP_PORT=tcp://10.105.87.61:80
FOO_PORT_6262_TCP_ADDR=10.97.79.96
HOME=/root
NGINX_PORT_80_TCP=tcp://10.98.16.229:80
F11DEP_SERVICE_HOST=10.98.165.245
PKG_RELEASE=1~buster
FOO_PORT_6262_TCP_PORT=6262
FOO_PORT_6262_TCP_PROTO=tcp
F3DEP_PORT_80_TCP_ADDR=10.105.87.61
FOO_SERVICE_PORT=6262
FOO_PORT=tcp://10.97.79.96:6262
F11DEP_PORT=tcp://10.98.165.245:80
F11DEP_SERVICE_PORT=80
F3DEP_PORT_80_TCP_PORT=80
F3DEP_PORT_80_TCP_PROTO=tcp
F1SVC_SERVICE_HOST=10.102.148.164
TERM=xterm
FOO_PORT_6262_TCP=tcp://10.97.79.96:6262
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
NGINX_VERSION=1.17.9
F11DEP_PORT_80_TCP_ADDR=10.98.165.245
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NGINX_SERVICE_HOST=10.98.16.229
KUBERNETES_PORT_443_TCP_PORT=443
NJS_VERSION=0.3.9
F11DEP_PORT_80_TCP_PORT=80
F1SVC_PORT=tcp://10.102.148.164:80
KUBERNETES_PORT_443_TCP_PROTO=tcp
F1SVC_SERVICE_PORT=80
F3DEP_PORT_80_TCP=tcp://10.105.87.61:80
F11DEP_PORT_80_TCP_PROTO=tcp
NGINX_SERVICE_PORT=80
NGINX_PORT=tcp://10.98.16.229:80
F1SVC_PORT_80_TCP_ADDR=10.102.148.164
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
F11DEP_PORT_80_TCP=tcp://10.98.165.245:80
F1SVC_PORT_80_TCP_PORT=80
KUBERNETES_SERVICE_HOST=10.96.0.1
F1SVC_PORT_80_TCP_PROTO=tcp
PWD=/
NGINX_PORT_80_TCP_ADDR=10.98.16.229
NGINX_PORT_80_TCP_PORT=80
NGINX_PORT_80_TCP_PROTO=tcp
F3DEP_SERVICE_HOST=10.105.87.61
# ^[[A    env | grep DB
# exit
command terminated with exit code 1
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend
NAME      READY   STATUS    RESTARTS   AGE
backend   1/1     Running   0          70s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend -o yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-04-07T19:15:34Z"
  labels:
    run: backend
  name: backend
  namespace: default
  resourceVersion: "569663"
  selfLink: /api/v1/namespaces/default/pods/backend
  uid: 971b581d-356a-4688-b55c-a0958cbe2543
spec:
  containers:
  - envFrom:
    - configMapRef:
        name: db-config
    image: nginx
    imagePullPolicy: Always
    name: backend
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-k8lrh
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-k8lrh
    secret:
      defaultMode: 420
      secretName: default-token-k8lrh
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-04-07T19:15:34Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-04-07T19:15:41Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-04-07T19:15:41Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-04-07T19:15:34Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://c484133e969e6a91925b6979e81c20eef566e1d0d7b915f5974d016d8054004d
    image: nginx:latest
    imageID: docker-pullable://nginx@sha256:282530fcb7cd19f3848c7b611043f82ae4be3781cb00105a1d593d7e6286b596
    lastState: {}
    name: backend
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: "2020-04-07T19:15:40Z"
  hostIP: 10.0.2.15
  phase: Running
  podIP: 172.17.0.27
  qosClass: BestEffort
  startTime: "2020-04-07T19:15:34Z"
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl ge[K[Kdelete pd[Kod backend
pod "backend" deleted
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b2
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;70H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 2.9.3                                                             b2                                                                       [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[m[?12l[?25h[?25l[36d[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b2[K[Kconfig.txt 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;74H(B[0;7m 3 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                         config.txt                                                                   [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mDB_URL: localhost:3306[4dDB_USERNAME: postgres[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25lD[?12l[?25h[?25lB[?12l[?25h[?25l_[?12l[?25h[?25lU[?12l[?25h[?25lR[?12l[?25h[?25lL[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[3;8H[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l=localhost:3306[8G[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25lN[?12l[?25h[?25lA[?12l[?25h[?25lM[?12l[?25h[?25lE[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l[1P[?12l[?25h[?25l[1P[?12l[?25h[?25l=postgres[4;13H[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: config.txt                               (B[m[36;31H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 3 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kunano config.txt b2[Kkubectl delete pod backend[K[K[K[K[K[K[K[K[K[K[K[K d[Kcm db-config
configmap "db-config" deleted
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete cm db-config[11Pnano config.txt b2[Kkubectl delete pod backendcc[Kkubectl get pod backend -o yaml[Kexec backend -ti -- /bin/sh[21Pc -f b1.yaml [1Pnano[C[C[C[C[C[C[C[C[Ckubectl run backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccc[Kkubectl get cm db-config -o yamlcc[Knano config.txt kubectl get cm db-config[Kcreate cm db-config --from-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccc[Kkubectl create cm db-config --from-file=config.txt
configmap/db-config created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl create cm db-config --from-file=config.txt[23Pdelete cm db-config[11Pnano config.txt b2[Kkubectl delete pod backendcc[Kkubectl get pod backend -o yaml[Kexec backend -ti -- /bin/sh[12Pget pod backend[K[K[K[K[K[K[K[K[K[K[Kcm db-onfig [1@c[C[C[C[C[C[C
NAME        DATA   AGE
db-config   1      18s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get cm db-config -o yal[Kml
apiVersion: v1
data:
  config.txt: |+
    DB_URL=localhost:3306
    DB_USERNAME=postgres

kind: ConfigMap
metadata:
  creationTimestamp: "2020-04-07T19:17:45Z"
  name: db-config
  namespace: default
  resourceVersion: "569822"
  selfLink: /api/v1/namespaces/default/configmaps/db-config
  uid: 31e29c80-4057-42f7-aff8-6b1df0136715
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get cm db-config -o yaml[Kcreate cm db-config --from-file=config.txt[23Pdelete cm db-config[11Pnano config.txt b2[Kkubectl delete pod backendcc[Kkubectl get pod backend -o yaml[Kexec backend -ti -- /bin/sh[21Pc -f b1.yaml [1Pnano[C[C[C[C[C[C[C[C[Ckubectl run backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl run backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[45Pget cm db-config -o yaml[Kcreate cm db-config --from-file=config.txt[23Pdelete cm db-config[11Pnano config.txt b2[Kkubectl delete pod backendcc[Kkubectl get pod backend -o yaml[K
Error from server (NotFound): pods "backend" not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b1.yaml 1[K
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 15 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: backend[9;3Hname: backend[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: backend[14;5Hresources: {}[15;3HdnsPolicy: ClusterFirst[16;3HrestartPolicy: Never[17dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[14;18H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[15;35r[15;1HM[1;38r[15;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25ln[?12l[?25h[?25lv[?12l[?25h[?25lF[36d[K[15;9H[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25l:[?12l[?25h[?25l7[16;36r8[16dM[1;38r[16;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25lC[?12l[?25h[?25l [?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25lM[?12l[?25h[?25la[?12l[?25h[?25lp[?12l[?25h[?25lR[?12l[?25h[?25le[?12l[?25h[?25ld[?12l[?25h[?25l [?12l[?25h[?25lf[?12l[?25h[?25l:[?12l[?25h[?25l7[17;36r8[17dM[1;38r[17;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lb[?12l[?25h[?25l-[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25lg[?12l[?25h[?25l7[18;36r8[18dM[1;38r[18;1H[?12l[?25h[?25l[18;36r[36;1H
[1;38r[17;25H[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: b1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 18 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b1.yaml kubectl get pod backendrun backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[45Pget cm db-config -o yaml[Kcreate cm db-config --from-file=config.txt[23Pdelete cm db-config[11Pnano config.txt b2[Kkubectl delete pod backendcc[Kkubectl get pod backend -o yaml[Kexec backend -ti -- /bin/sh[21Pc -f b1.yaml [1Pnano[C[C[C[C[C[C[C[C[Ckubectl run backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccc[Kkubectl get cm db-config -o yamlcc[Knano config.txt kubectl get cm db-config[Kcreate cm db-config --from-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccc[Kat config.txt [1@nano[C[C[C[C[C[C[C[C[C[C[C[C[1Pcat[C[C[C[C[C[C[C[C[C[C[C[Cecho<< EOF > config.txt
DB_URL: localhost:3306
DB_USERNAME: postgres
EOF
[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[8Pcat config.txt 
[K
[K
[K
[K[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kkc -f b1.yaml 
pod/backend created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b1.yaml [1Pnano[C[C[C[C[C[C[C[C[Ckubectl get pod backend
NAME      READY   STATUS              RESTARTS   AGE
backend   0/1     ContainerCreating   0          3s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend
NAME      READY   STATUS              RESTARTS   AGE
backend   0/1     ContainerCreating   0          4s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend
NAME      READY   STATUS              RESTARTS   AGE
backend   0/1     ContainerCreating   0          6s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend
NAME      READY   STATUS    RESTARTS   AGE
backend   1/1     Running   0          7s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend[9Pc -f b1.yaml ubectl get pod backend[9Pc -f b1.yaml [1Pnano[C[C[C[C[C[C[C[C[Ckubectl get pod backendrun backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[45Pget cm db-config -o yaml[Kcreate cm db-config --from-file=config.txt[23Pdelete cm db-config[11Pnano config.txt b2[Kkubectl delete pod backendcc[Kkubectl get pod backend -o yaml[Kexec backend -ti -- /bin/sh
# env
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_SERVICE_PORT=443
F1SVC_PORT_80_TCP=tcp://10.102.148.164:80
HOSTNAME=backend
FOO_PORT_6262_TCP_ADDR=10.97.79.96
F3DEP_SERVICE_PORT=80
F3DEP_PORT=tcp://10.105.87.61:80
FOO_SERVICE_HOST=10.97.79.96
HOME=/root
NGINX_PORT_80_TCP=tcp://10.98.16.229:80
F11DEP_SERVICE_HOST=10.98.165.245
PKG_RELEASE=1~buster
FOO_PORT_6262_TCP_PORT=6262
FOO_PORT_6262_TCP_PROTO=tcp
F3DEP_PORT_80_TCP_ADDR=10.105.87.61
FOO_SERVICE_PORT=6262
FOO_PORT=tcp://10.97.79.96:6262
F11DEP_SERVICE_PORT=80
F11DEP_PORT=tcp://10.98.165.245:80
F3DEP_PORT_80_TCP_PORT=80
F3DEP_PORT_80_TCP_PROTO=tcp
F1SVC_SERVICE_HOST=10.102.148.164
TERM=xterm
FOO_PORT_6262_TCP=tcp://10.97.79.96:6262
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
NGINX_VERSION=1.17.9
F11DEP_PORT_80_TCP_ADDR=10.98.165.245
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NGINX_SERVICE_HOST=10.98.16.229
KUBERNETES_PORT_443_TCP_PORT=443
NJS_VERSION=0.3.9
F11DEP_PORT_80_TCP_PORT=80
F1SVC_PORT=tcp://10.102.148.164:80
KUBERNETES_PORT_443_TCP_PROTO=tcp
F1SVC_SERVICE_PORT=80
F11DEP_PORT_80_TCP_PROTO=tcp
F3DEP_PORT_80_TCP=tcp://10.105.87.61:80
NGINX_SERVICE_PORT=80
NGINX_PORT=tcp://10.98.16.229:80
F1SVC_PORT_80_TCP_ADDR=10.102.148.164
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_SERVICE_PORT_HTTPS=443
F11DEP_PORT_80_TCP=tcp://10.98.165.245:80
F1SVC_PORT_80_TCP_PORT=80
F1SVC_PORT_80_TCP_PROTO=tcp
KUBERNETES_SERVICE_HOST=10.96.0.1
PWD=/
NGINX_PORT_80_TCP_ADDR=10.98.16.229
NGINX_PORT_80_TCP_PORT=80
NGINX_PORT_80_TCP_PROTO=tcp
F3DEP_SERVICE_HOST=10.105.87.61
# env | grep DB
# exit
command terminated with exit code 1
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b1.yaml 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 18 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b1.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: backend[9;3Hname: backend[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: backend[14;5Hresources: {}[15;5HenvFrom:[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3dspec:[K[4d  containers:[5d  - image: nginx[6;3H  name: backend[K[7;3H  resources: {}[8;5HenvFrom:[K[9;3H   - configMapRef:[10;9H[1K name: db-config[11;3HdnsPolicy: ClusterFirst[12;3HrestartPolicy: Never[13dstatus: {}[K[14d[K[15d[K[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[A[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[9d      - configMapRef: [?12l[?25h[?25l[10d[?12l[?25h[?25l[10;10H name: db-config  [?12l[?25h[?25l[11d[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: b1.yaml                                  (B[m[16;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 18 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ echo -e "DB_URL=localhost:3306\nDB_USERNAME=postgres" > config.txt
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano config.txt 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;74H(B[0;7m 2 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                         config.txt                                                                   [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mDB_URL=localhost:3306[4dDB_USERNAME=postgres[A[?12l[?25h[?25l[16d[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano config.txt echo -e "DB_URL=localhost:3306\nDB_USERNAME=postgres" > config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano b1.yaml [Kkubectl exec backend -ti -- /bin/sh
# env
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_SERVICE_PORT=443
F1SVC_PORT_80_TCP=tcp://10.102.148.164:80
HOSTNAME=backend
FOO_PORT_6262_TCP_ADDR=10.97.79.96
F3DEP_SERVICE_PORT=80
F3DEP_PORT=tcp://10.105.87.61:80
FOO_SERVICE_HOST=10.97.79.96
HOME=/root
NGINX_PORT_80_TCP=tcp://10.98.16.229:80
F11DEP_SERVICE_HOST=10.98.165.245
PKG_RELEASE=1~buster
FOO_PORT_6262_TCP_PORT=6262
FOO_PORT_6262_TCP_PROTO=tcp
F3DEP_PORT_80_TCP_ADDR=10.105.87.61
FOO_SERVICE_PORT=6262
FOO_PORT=tcp://10.97.79.96:6262
F11DEP_SERVICE_PORT=80
F11DEP_PORT=tcp://10.98.165.245:80
F3DEP_PORT_80_TCP_PORT=80
F3DEP_PORT_80_TCP_PROTO=tcp
F1SVC_SERVICE_HOST=10.102.148.164
TERM=xterm
FOO_PORT_6262_TCP=tcp://10.97.79.96:6262
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
NGINX_VERSION=1.17.9
F11DEP_PORT_80_TCP_ADDR=10.98.165.245
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NGINX_SERVICE_HOST=10.98.16.229
KUBERNETES_PORT_443_TCP_PORT=443
NJS_VERSION=0.3.9
F11DEP_PORT_80_TCP_PORT=80
F1SVC_PORT=tcp://10.102.148.164:80
KUBERNETES_PORT_443_TCP_PROTO=tcp
F1SVC_SERVICE_PORT=80
F11DEP_PORT_80_TCP_PROTO=tcp
F3DEP_PORT_80_TCP=tcp://10.105.87.61:80
NGINX_SERVICE_PORT=80
NGINX_PORT=tcp://10.98.16.229:80
F1SVC_PORT_80_TCP_ADDR=10.102.148.164
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_SERVICE_PORT_HTTPS=443
F11DEP_PORT_80_TCP=tcp://10.98.165.245:80
F1SVC_PORT_80_TCP_PORT=80
F1SVC_PORT_80_TCP_PROTO=tcp
KUBERNETES_SERVICE_HOST=10.96.0.1
PWD=/
NGINX_PORT_80_TCP_ADDR=10.98.16.229
NGINX_PORT_80_TCP_PORT=80
NGINX_PORT_80_TCP_PROTO=tcp
F3DEP_SERVICE_HOST=10.105.87.61
# ^[[A    env | grep local
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
# exo it
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl cc[Kkubectl exec backend -ti -- /bin/sh[19Pnano config.txt echo -e "DB_URL=localhost:3306\nDB_USERNAME=postgres" > config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano b1.yaml [Kkubectl exec backend -ti -- /bin/sh[12Pget pod backend[9Pc -f b1.yaml [1Pnano[C[C[C[C[C[C[C[C[Ckubectl get pod backendrun backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[45Pget cm db-config -o yaml[Kcreate cm db-config --from-file=config.txt[23Pdelete cm db-config
configmap "db-config" deleted
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ $ kubectl create configmap db-config --from-env-file=config.txt
$: command not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ $ kubectl create configmap db-config --from-env-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P
configmap/db-config created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ $ kubectl create configmap db-config --from-env-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[36Pkubectl delete cm db-configcc[Kkubectl exec backend -ti -- /bin/sh[19Pnano config.txt echo -e "DB_URL=localhost:3306\nDB_USERNAME=postgres" > config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano b1.yaml [Kkubectl exec backend -ti -- /bin/sh[12Pget pod backend[9Pc -f b1.yaml [1Pnano[C[C[C[C[C[C[C[C[Ckubectl get pod backendrun backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[45Pget cm db-config -o yaml[Kcreate cm db-config --from-file=config.txt[23Pdelete cm db-config[11Pnano config.txt b2[Kkubectl delete pod backend
pod "backend" deleted
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete pod backend$ kubectl create configmap db-config --from-env-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[36Pkubectl delete cm db-configcc[Kkubectl exec backend -ti -- /bin/sh[19Pnano config.txt echo -e "DB_URL=localhost:3306\nDB_USERNAME=postgres" > config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano b1.yaml [Kkubectl exec backend -ti -- /bin/sh[12Pget pod backend
Error from server (NotFound): pods "backend" not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl create -f b1.yaml 
pod/backend created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl create -f b1.yaml [3Pget pod backend[3@delete[C[C[C[C[C[C[C[C[C[C[C[C$ kubectl create configmap db-config --from-env-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[36Pkubectl delete cm db-configcc[Kkubectl exec backend -ti -- /bin/sh[19Pnano config.txt kubectl exec backend -ti -- /bin/sh
error: unable to upgrade connection: container not found ("backend")
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl exec backend -ti -- /bin/sh[9Pcreate -f b1.yaml [3Pget pod backend[3@delete[C[C[C[C[C[C[C[C[C[C[C[C[3Pget[C[C[C[C[C[C[C[C[C[C[C[C
NAME      READY   STATUS    RESTARTS   AGE
backend   1/1     Running   0          9s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backendexec backend -ti -- /bin/sh
# env
DB_URL=localhost:3306
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_SERVICE_PORT=443
F1SVC_PORT_80_TCP=tcp://10.102.148.164:80
HOSTNAME=backend
F3DEP_PORT=tcp://10.105.87.61:80
FOO_SERVICE_HOST=10.97.79.96
F3DEP_SERVICE_PORT=80
FOO_PORT_6262_TCP_ADDR=10.97.79.96
HOME=/root
F11DEP_SERVICE_HOST=10.98.165.245
NGINX_PORT_80_TCP=tcp://10.98.16.229:80
PKG_RELEASE=1~buster
FOO_PORT_6262_TCP_PORT=6262
FOO_PORT_6262_TCP_PROTO=tcp
F3DEP_PORT_80_TCP_ADDR=10.105.87.61
FOO_SERVICE_PORT=6262
FOO_PORT=tcp://10.97.79.96:6262
DB_USERNAME=postgres
F11DEP_PORT=tcp://10.98.165.245:80
F11DEP_SERVICE_PORT=80
F3DEP_PORT_80_TCP_PORT=80
F3DEP_PORT_80_TCP_PROTO=tcp
F1SVC_SERVICE_HOST=10.102.148.164
TERM=xterm
FOO_PORT_6262_TCP=tcp://10.97.79.96:6262
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
NGINX_VERSION=1.17.9
F11DEP_PORT_80_TCP_ADDR=10.98.165.245
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NGINX_SERVICE_HOST=10.98.16.229
KUBERNETES_PORT_443_TCP_PORT=443
NJS_VERSION=0.3.9
F1SVC_SERVICE_PORT=80
F1SVC_PORT=tcp://10.102.148.164:80
KUBERNETES_PORT_443_TCP_PROTO=tcp
F11DEP_PORT_80_TCP_PORT=80
F3DEP_PORT_80_TCP=tcp://10.105.87.61:80
F11DEP_PORT_80_TCP_PROTO=tcp
NGINX_SERVICE_PORT=80
NGINX_PORT=tcp://10.98.16.229:80
F1SVC_PORT_80_TCP_ADDR=10.102.148.164
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
F1SVC_PORT_80_TCP_PORT=80
F11DEP_PORT_80_TCP=tcp://10.98.165.245:80
KUBERNETES_SERVICE_HOST=10.96.0.1
F1SVC_PORT_80_TCP_PROTO=tcp
PWD=/
NGINX_PORT_80_TCP_ADDR=10.98.16.229
NGINX_PORT_80_TCP_PORT=80
NGINX_PORT_80_TCP_PROTO=tcp
F3DEP_SERVICE_HOST=10.105.87.61
# ^C
# exit
command terminated with exit code 130
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl exec backend -ti -- /bin/sh
# env | grep DB
DB_URL=localhost:3306
DB_USERNAME=postgres
# exit
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ history 
 1033  gup
 1034  cc
 1035  kga
 1036  c
 1037  cc
 1038  nano ~/.bashrc 
 1039  ll
 1040  cc
 1041  ls
 1042  nano gitBatch.sh 
 1043  cc
 1044  kubectl run d12rl --image=nginx --restart=Never --dry-run - oyam > d12.yaml
 1045  nano d12.yaml 
 1046  kubectl run d12rl --image=nginx --restart=Never --dry-run - oyaml >> d12.yaml
 1047  nano d12.yaml 
 1048  rm d12.yaml 
 1049  kubectl run d12rl --image=nginx --restart=Never --dry-run -o yaml >> d12.yaml
 1050  nano d12.yaml 
 1051  kubectl create -f d12.yaml 
 1052  kga
 1053  kubectl get d12rl
 1054  kubectl get po d12rl
 1055  kubectl describe pod d12rl
 1056  kubectl run nginx --image=nginx --restart=Never --requests='cpu=100m,memory=256Mi' --limits='cpu=200m,memory=512Mi'
 1057  kubectl run nginx3 --image=nginx --restart=Never --requests='cpu=100m,memory=256Mi' --limits='cpu=200m,memory=512Mi'
 1058  kubectl get po nginx3
 1059  kubectl get po nginx3 -w
 1060  kubectl describe pod nginx
 1061  nano d12.yaml 
 1062  kubectl delete pod/d12rl
 1063  kubectl create -f d12.yaml 
 1064  kubectl get d12rl
 1065  kubectl get pod d12rl
 1066  kubectl describe pod d12rl
 1067  nano d12.yaml 
 1068  kubectl delete pod/d12rl
 1069  kubectl create -f d12.yaml 
 1070  kubectl get pod d12rl
 1071  kubectl get pod d12rl -w
 1072  kubectl delete pod/d12rl
 1073  nano d12.yaml 
 1074  kubectl create -f d12.yaml 
 1075  kubectl get pod d12rl -w
 1076  kubectl delete pod/d12rl
 1077  nano d12.yaml 
 1078  kubectl create -f d12.yaml 
 1079  kubectl get pod d12rl -w
 1080  kubectl exec -ti d12rl 
 1081  kubectl exec -ti d12rl -- sh
 1082  cc
 1083  gup
 1084  ls
 1085  cat commandsReview.txt 
 1086  cat README.md 
 1087  echo "Practice only" >> README.md 
 1088  gup
 1089  cc
 1090  git status
 1091  git config 
 1092  git config --show-origin 
 1093  git config --global 
 1094  git config --global --get-all 
 1095  git config -h
 1096  git config -l
 1097  ls
 1098  ll
 1099  ls .git/
 1100  touch .gitignore
 1101  echo "gi.txt" > .gitignore
 1102  cat .gitignore 
 1103  echo "gi.txt" > gi.txt
 1104  echo "rgi.txt" > rgi.txt
 1105  gup
 1106  cc
 1107  nano gitBatch.sh 
 1108  gup
 1109  cc
 1110  gup
 1111  cc
 1112  kubectl create secret -h
 1113  kubectl create secret generic --help
 1114  cc
 1115  minikube status
 1116  minikube stop
 1117  minikube start
 1118  cc
 1119  kubectl get secret
 1120  kubectl create secret generic d13sec --from-literal=password=mypass
 1121  kubectl get secret
 1122  kubectl get secret d13sec -o yaml
 1123  echo -n admin > username
 1124  cat usernam
 1125  kubectl create secret generic d13sec 4sec --from-file=username
 1126  echo -n admin > username1
 1127  kubectl create secret generic d13sec 4sec --from-file=username1
 1128  cc
 1129  kubectl create secret generic d14sec --from-file=username1
 1130  kubectl get secret
 1131  kubectl get secret d14sec -o yaml
 1132  cc
 1133  kubectl get secret d14sec -o yaml
 1134  echo YWRtaW4= | base64 -d
 1135  echo YWRtaW4 | base64 -d
 1136  gup
 1137  cc
 1138  echo YWRtaW4= | base64 -d
 1139  cc
 1140  kubectl explain pod.spec.volume.secret
 1141  kubectl explain pod.spec.volumes.secret
 1142  kubectl explain pod.spec.volumes.secret --recursive
 1143  kubectl explain pod.spec.containers.volumeMount.secret
 1144  kubectl explain pod.spec.containers.volumeMounts.secret
 1145  kubectl explain pod.spec.containers.volumeMount.secret
 1146  kubectl explain pod.spec.containers.volumeMount
 1147  kubectl explain pod.spec.containers --recursive
 1148  kubectl explain pod.spec.containers.volumeMountcc
 1149  cc
 1150  kubectl run d15 --image=nginx --restart=Never --dry-run -o yaml
 1151  kubectl run d15 --image=nginx --restart=Never --dry-run -o yaml > d15.yaml
 1152  nano d15.yaml 
 1153  kubectl get secret
 1154  kubectl create -f d15.yaml 
 1155  kubectl get pod/d15
 1156  kubectl exec -ti d15
 1157  kubectl exec -ti d15 -- sh
 1158  gup
 1159  cc
 1160  kubectl run d16 --image=nginx --restart=Never --dry-run -o yaml > d16.yaml
 1161  nano d16.yaml 
 1162  kubectl delete pod/d15sec
 1163  kubectl get pod 
 1164  kubectl delete pod/d15
 1165  nano d16.yaml 
 1166  cc
 1167  kubectl explain pod.spec.containers --recursive
 1168  kubectl explain pod.spec.containers --recursive | grep -i 3
 1169  kubectl explain pod.spec.containers --recursive | grep -i 3 env
 1170  kubectl explain pod.spec.containers --recursive | grep env
 1171  kubectl explain pod.spec.containers --recursive | grep -i3 env
 1172  kubectl explain pod.spec.containers
 1173  nano d16.yaml 
 1174  kubectl explain pod.spec.containers --recursive | grep -i3 env
 1175  nano d16.yaml 
 1176  kubectl explain pod.spec.containers --recursive | grep -i7 env
 1177  kubectl explain pod.spec.containers --recursive | grep -i9 env
 1178  nano d16.yaml 
 1179  kubectl create -f d16.yaml 
 1180  kubectl get pod/d16
 1181  kubectl describe pod/d16
 1182  kubectl get secret
 1183  kubectl delete pod/d16
 1184  nano d16.yaml 
 1185  kubectl create -f d16.yaml 
 1186  kubectl get secret
 1187  kubectl delete pod/d16
 1188  kubectl create -f d16.yaml 
 1189  kubectl get pod/d16
 1190  kubectl describe pod/d16
 1191  kubectl exec -ti d16 -- sh
 1192  cat d16.yaml 
 1193  kubectl exec -ti d16 -- env
 1194  kubectl exec -ti d16 -- env | grep username
 1195  kubectl exec -ti d16 -- env | grep username1
 1196  kubectl exec -ti d16 -- sh
 1197  cc
 1198  kubectl explain pod.spec.serviceAccountName
 1199  kubectl explain pod.spec.serviceAccountName --recursive
 1200  cc
 1201  gup
 1202  cc
 1203  kubectl explain pod.spec.livenessProbe
 1204  kubectl explain pod.spec.containers.livenessProbe
 1205  kubectl explain pod.spec.containers.livenessProbe --recursive
 1206  cc
 1207  kubectl run e1lp --image=nginx --restart=Never --dry-run -o yaml > e1.yaml
 1208  nano e1.yaml 
 1209  kubectl explain pod.spec.containers.livenessProbe --recursive
 1210  kubectl explain pod.spec.containers.livenessProbe 
 1211  nano e1.yaml 
 1212  alias kc="k create "
 1213  kc -f d16.yaml 
 1214  kc -f e1.yaml 
 1215  k get pod/e1
 1216  kubectl get pod 
 1217  k get pod/e1lp
 1218  kubectl describe pod/e1lp
 1219  kubectl describe pod/e1lp | grep livenessProbe
 1220  kubectl describe pod/e1lp | grep liveness
 1221  kubectl describe pod/e1lp | grep -i liveness
 1222  cc
 1223  gup
 1224  minikube status
 1225  minikube stop
 1226  minikube start
 1227  cat e1.yaml 
 1228  script 2003240019
 1229  cc
 1230  cat e1.yaml 
 1231  kga
 1232  cc
 1233  kubectl explain pod.spec.containers --recursive
 1234  kubectl explain pod.spec.containers --recursive | grep start
 1235  nano e1.yaml 
 1236  history | grep alias
 1237  kc e2.yaml 
 1238  alias kc="kubectl create "
 1239  kc -f e2.yaml 
 1240  nano e1.yaml 
 1241  nano e2.yaml 
 1242  kc -f e2.yaml 
 1243  kubectl get pod/e2lp
 1244  kubectl get pod/e2lp -w
 1245  kubectl describe pod/e2lp
 1246  kubectl describe pod/e2lp | grep -i liveness
 1247  kubectl explain pod.spec.containers.livenessProbe # get the exact names
 1248  cc
 1249  kubectl explain --help
 1250  cc
 1251  kubectl explain pod.spec.containers.readinessProbe
 1252  kubectl explain pod.spec.containers.readinessProbe.httpGet
 1253  kubectl explain pod.spec.containers.readinessProbe.httpGet --recursive
 1254  kubectl run e3rp --image=nginx --restart=Never --dry-run -o yaml > e3.yaml
 1255  vim e3.yaml 
 1256  sudo apt-get install vim
 1257  vim e3.yaml 
 1258  cc
 1259  vim e3.yaml 
 1260  nano e2.yaml 
 1261  vim e3.yaml 
 1262  kubectl explain pod.spec.containers.readinessProbe.httpGet --recursive
 1263  kubectl explain pod.spec.containers.readinessProbe --recursive
 1264  vim e3.yaml 
 1265  kc -f e3.yaml 
 1266  kubectl get pod/e3rp
 1267  kubectl describe pod/e3rp
 1268  cc
 1269  nano ~/.bashrc
 1270  gup
 1271  cc
 1272  kubectl run e4log --image=busybox --restart=Never --dry-run -o yaml -- /bin/sh -c i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done > e4.yaml
 1273  kubectl run e4log --image=busybox --restart=Never --dry-run -o yaml -- /bin/sh -c 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 1; done' > e4.yaml
 1274  nano e4.yaml 
 1275  kc -f e4.yaml 
 1276  kubectl get pod/e4log
 1277  kubectl logs pod/e4log
 1278  cc
 1279  kubectl run e5deb --image=busybox --restart=Never -- /bin/sh -c 'ls /notexist'
 1280  kubectl get pod/e5deb
 1281  kubectl get pod/e5deb -w
 1282  kubectl get pod/e5deb
 1283  kubectl logs pod/e5deb
 1284  kubectl describe pod/e5deb
 1285  kubectl describe pod/e5deb | grep -i not
 1286  cc
 1287  kubectl describe pod/e5deb | grep -i error
 1288  kubectl describe pod/e5deb 
 1289  cc
 1290  kubectl top nodes
 1291  kubectl top pod
 1292  gup
 1293  sudo apt-get update & apt-get upgrade
 1294  sudo apt-get update && apt-get upgrade
 1295  sudo apt-get upgrade
 1296  cc
 1297  minikube status
 1298  kubectl run f1svc --image=nginx --restart=Never --port=80 --export
 1299  kubectl run f1svc --image=nginx --restart=Never --port=80 --expose
 1300  exit
 1301  rm 20200325-1-7 
 1302  ls
 1303  mv e1.yaml.save .gitignore 
 1304  gup
 1305  cat gi.txt 
 1306  ll 
 1307  ll gi.txt 
 1308  exit
 1309  minikube start
 1310  la
 1311  ls
 1312  cc
 1313  ls
 1314  ll
 1315  gup
 1316  kubectl get pod
 1317  kubectl get pod f1sv
 1318  kubectl get pod f1svc
 1319  kubectl describe pod/f1svc
 1320  script 20200325-1-7
 1321  script 202003250107
 1322  rm 202003250107
 1323  exit
 1324  kc -f f2.yaml 
 1325  kubectl get pod -l app=foo -o wide
 1326  kubectl get pod -l app=foo -o wide -w
 1327  kubectl run busybox --image=busybox --restart=Never -ti --rm -- sh
 1328  kubectl delete pod/busybox
 1329  kubectl run busybox --image=busybox --restart=Never -ti --rm -- sh
 1330  cc
 1331  kubectl expose deploy foo --port=6262 --target-port=8080
 1332  kubectl get svc
 1333  kubectl ep foo
 1334  kubectl get ep foo
 1335  kubectl get svc foo -o yaml
 1336  cc
 1337  kubectl get svc
 1338  kubectl get pod busybox
 1339  c
 1340  cc
 1341  kubectl get svc
 1342  kubectl run busybox --image=busybox -it --rm --restart=Never -- sh
 1343  kubectl delete pod/busybox
 1344  docker images
 1345  docker image ls
 1346  history | docker
 1347  history | grep docker
 1348  cc
 1349  kubectl run busybox --image=busybox -it --rm --restart=Never -- sh
 1350  kubectl get pod
 1351  kubectl logs pod/foo-688d885f4b-m9zmp
 1352  cc
 1353  kubectl f3dep --image=nginx --replicas=2 --port=80 --expose
 1354  kubectl run f3dep --image=nginx --replicas=2 --port=80 --expose
 1355  kubectl describe svc fedep
 1356  kubectl describe svc f3dep
 1357  cc
 1358  kubectl run nginx --image=nginx --replicas=2 --port=80 --expose
 1359  kubectl delete deploy/nginx
 1360  kubectl delete svc/nginx
 1361  cc
 1362  kubectl run nginx --image=nginx --replicas=2 --port=80 --expose
 1363  kubectl describe svc nginx
 1364  kubectl describe svc f3dep
 1365  kubectl describe svc nginx
 1366  cc
 1367  kubectl describe svc nginx
 1368  kubectl api-resources
 1369  kubectl api-resources | grep network
 1370  kubectl explain netpol --recursive
 1371  echo <<EOF >>  f4netpol.yaml
 1372  apiVersion: extensions/v1beta1
 1373  kind: NetworkPolicy
 1374  metadata:
 1375    name: netpol
 1376  spec:
 1377    podSelector:
 1378      matchLabels:
 1379        access: granted
 1380  EOF
 1381  cat f4netpol.yaml 
 1382  nano f4netpol.yaml 
 1383  exit
 1384  minikube start
 1385  cc
 1386  script 2003260012
 1387  gup
 1388  cc
 1389  kubectl getpod
 1390  kubectl get pod
 1391  kubectl get pod f1svc
 1392  kubectl delete  pod/f1svc
 1393  cc
 1394  kubectl run f1svc --image=nginx --restart=Never --port=80 --expose
 1395  kubectl delete  pod/f1svc
 1396  kubectl get svc
 1397  kubectl delete svc f1svc
 1398  cc
 1399  kubectl run f1svc --image=nginx --restart=Never --port=80 --expose
 1400  kubectl get svc
 1401  kubectl ep
 1402  kubectl get ep
 1403  cc
 1404  kubectl get svc f1svc
 1405  kubectl run f1bb --image=busybox --restart=Never 
 1406  kubectl exec -ti -sh
 1407  kubectl exec -ti f1bb -- sh
 1408  kubectl get pod f1bb
 1409  kubectl delete  pod/f1bb
 1410  cc
 1411  kubectl run f1bb --image=busybox --restart=Never -- sh 
 1412  kubectl get pod f1bb
 1413  kubectl delete  pod/f1bb
 1414  kubectl run f1bb --image=busybox --restart=Never -- sh wget -O- 10.102.148.164
 1415  kubectl logs f1bb
 1416  kubectl get pod f1bb
 1417  kubectl delete  pod/f1bb
 1418  kubectl run f1bb --image=busybox --restart=Never -- sh
 1419  kubectl get pod f1bb
 1420  kubectl delete  pod/f1bb
 1421  cc
 1422  kubectl run busybox --rm --image=busybox -it --restart=Never -- sh
 1423  kubectl delete  pod/busybox
 1424  kubectl run busybox --rm --image=busybox -it --restart=Never -- sh
 1425  cc
 1426  kubectl run busybox --rm --image=busybox -it --restart=Never -- shs
 1427  cc
 1428  kubectl edit svc f1bb
 1429  kubectl get svc
 1430  kubectl edit svc f1svc
 1431  kubectl get svc
 1432  minikube ip
 1433  wget -O- 10.102.148.164:30669
 1434  wget -O- 192.168.99.101:30669
 1435  cc
 1436  gup
 1437  cc
 1438  kubectl get deploy 
 1439  cc
 1440  kubectl run foo --image=dgkanatsios/simpleapp --replicas=3 --labels=app=foo --dry-run -o yaml > f2.yaml
 1441  nano f2.yaml 
 1442  kubectl get pods -l app=foo -o wide
 1443  kubectl get pods -L app=foo -o wide
 1444  cc
 1445  kubectl get pods 
 1446  kubectl get pods foo
 1447  kc -f f2.yaml 
 1448  nano ~/.bashrc 
 1449  source
 1450  bash
 1451  gup
 1452  cc
 1453  kubectl get deploy
 1454  kubectl delete deploy/foo
 1455  kubectl delete svc/foo
 1456  kubectl delete pod/foo
 1457  cc
 1458  kubectl create deploy foo --image=dgkanatsios/simpleapp --replicas=3 --labels=app=foo --port=8080
 1459  kubectl run  deploy foo --image=dgkanatsios/simpleapp --replicas=3 --labels=app=foo --port=8080
 1460  kubectl run  deploy foo --image=dgkanatsios/simpleapp --replicas=3 --labels=app=foo --port=8080 > f8.yaml
 1461  kubectl delete deploy/foo
 1462  kubectl run  deploy foo --image=dgkanatsios/simpleapp --replicas=3 --labels=app=foo --port=8080 > f8.yaml
 1463  kubectl delete deploy/foo
 1464  kubectl delete deploy/deploy
 1465  kubectl run foo --image=dgkanatsios/simpleapp --replicas=3 --labels=app=foo --port=8080 > f8.yaml
 1466  nano f8.yaml 
 1467  kubectl delete deploy/deploy
 1468  kubectl delete deploy/foo
 1469  cc
 1470  kubectl run foo --image=dgkanatsios/simpleapp --replicas=3 --labels=app=foo --port=8080 --dry-run > f8.yaml
 1471  nano f8.yaml 
 1472  kubectl run foo --image=dgkanatsios/simpleapp --replicas=3 --labels=app=foo --port=8080 --dry-run -o yaml > f8.yaml
 1473  nano f8.yaml 
 1474  kc -f f8.yaml 
 1475  kubectl get deploy/foo
 1476  cc
 1477  kubectl get pods -l app=foo -o wie
 1478  kubectl get pods -l app=foo -o wide
 1479  kubectl run bbb --image=busybox --restart=Never -it --rm -- sh wget -o- 172.17.0.3:8080
 1480  kubectl run bbb --image=busybox --restart=Never -it --rm -- sh wget -0- 172.17.0.3:8080
 1481  kubectl get pods -l app=foo -o wide
 1482  kubectl run bbb --image=busybox --restart=Never -it --rm -- sh
 1483  cc
 1484  kubectl expose deploy foo --port=6262 --target-port=8080
 1485  kubectl get svc
 1486  kubectl get ep
 1487  kubectl run bbb --image=busybox --restart=never -ti --rm -- sh
 1488  kubectl run bbb --image=busybox --restart=Never -ti --rm -- sh
 1489  cc
 1490  kubectl create dploy nginx --dry-run -o yaml >f9.yaml
 1491  kubectl create dploy nginx --image=nginx --dry-run -o yaml >f9.yaml
 1492  kubectl create deploy nginx --image=nginx --dry-run -o yaml >f9.yaml
 1493  nano f9.yaml 
 1494  cc
 1495  kubectl run nginx --image=nginx --replicas=2 --port=80 --expose
 1496  kubectl delete svc/nginx
 1497  kubectl run nginx --image=nginx --replicas=2 --port=80 --expose
 1498  kubectl delete svc/nginx
 1499  kubectl delete deploy/nginx
 1500  kubectl run nginx --image=nginx --replicas=2 --port=80 --expose
 1501  kubectl get svc nginx -o yaml > f10.yaml
 1502  nano f10
 1503  nano f10.yaml 
 1504  nano f10policy.yaml
 1505  kubectl get api-version 
 1506  kubectl explain --h
 1507  kubectl explain --api-version
 1508  kubectl explain pods --api-version
 1509  history | api-vers
 1510  history | grep api-vers
 1511  kubectl explain --h
 1512  kubectl explain network-Policy
 1513  wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\

 1515  dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd2
 1516  exit
 1517  gup
 1518  exit
 1519  minikube status
 1520  minikube start
 1521  kubectl get all 
 1522  kubectl get svc
 1523  cc
 1524  script 2003312337
 1525  exit
 1526  ping 1.1.1.1
 1527  cc
 1528  kubectl run f11dep --image=nginx --replicas=2 --port=80 --expose 
 1529  kubectl get deploy/f11dep -o yaml 
 1530  kubectl get svc/f11dep -o yaml 
 1531  nano f11netpol.yaml
 1532  cc
 1533  kubectl explain networkPolicy
 1534  kubectl explain networkPolicy --recursive
 1535  kubectl explain 
 1536  kubectl explain --h
 1537  kubectl explain pods
 1538  kubectl explain networkPolicy
 1539  kubectl explain networkPolicy.apiVersion 
 1540  kubectl explain networkPolicy.apiVersion --recursive
 1541  kubectl get --h
 1542  history 
 1543  c
 1544  kubectl api-resource
 1545  kubectl api-resources
 1546  kubectl api-resources | grep cj
 1547  cc
 1548  nano f11netpol.yaml 
 1549  kubectl explain networkpolicy
 1550  kubectl explain networkpolicy.spec
 1551  kubectl explain networkpolicy.spec --recursive
 1552  echo << EOF >> f11netpol.yaml 
 1553    podSelector:
 1554      matchExpressions:
 1555        key: value
 1556  EOF
 1557  nano f11netpol.yaml 
 1558  kubectl get deploy/f11deploy
 1559  kubectl get deploy/f11dep
 1560  kubectl get deploy/f11dep -o yaml
 1561  nano f11netpol.yaml 
 1562  kc -f f11netpol.yaml 
 1563  nano f11netpol.yaml 
 1564  kc -f f11netpol.yaml 
 1565  nano f11netpol.yaml 
 1566  kc -f f11netpol.yaml 
 1567  kubectl get netpol
 1568  cca
 1569  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- http://nginx:80                       # This should not work
 1570  kubectl get netpol
 1571  kubectl get svc/f11dep
 1572  kubectl get ep
 1573  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- http://f11dep:80
 1574  kubectl run busybox --image=busybox --rm -it --restart=Never --labels=access=granted  -- wget -O- http://f11dep:80
 1575  kubectl delete pod/busybox
 1576  kubectl run busybox --image=busybox --rm -it --restart=Never --labels=access=granted  -- wget -O- http://f11dep:80
 1577  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- http://f11dep:80
 1578  nano f11netpol.yaml 
 1579  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- 10.98.165.245:80
 1580  kubectl run busybox --image=busybox --rm -it --restart=Never --labels=access=granted  -- wget -O- 10.98.165.245:80
 1581  kubectl get svc,pod
 1582  kubectl run busybox --image=busybox --rm -it --restart=Never -- sh
 1583  kubectl run busybox --image=busybox --rm -it --restart=Never --labels=access=granted  -- sh
 1584  kubectl run busybox --image=busybox --rm -it --restart=Never --labels="access=granted"  -- sh
 1585  kubectl run busybox --image=busybox --rm -it --restart=Never -- sh
 1586  nano f11netpol.yaml 
 1587  kubectl delete netpol/f11dep
 1588  kubectl get netpol
 1589  kubectl delete netpol/access-nginx
 1590  kubectl delete pod/nginx
 1591  kubectl run nginx --image=nginx --replicas=2 --port=80 --expose
 1592  kubectl delete pod/nginx
 1593  kubectl delete deploy/nginx
 1594  kubectl run nginx --image=nginx --replicas=2 --port=80 --expose
 1595  kubectl delete deploy/nginx
 1596  kubectl delete svc/nginx
 1597  kubectl delete pod/nginx
 1598  kubectl run nginx --image=nginx --replicas=2 --port=80 --expose
 1599  kubectl describe svc nginx
 1600  kubectl get svc nginx -o yaml
 1601  kubectl describe svc nginx
 1602  kubectl create -f f11dep.yaml
 1603  kubectl create -f f11netpol.yaml 
 1604  cc
 1605  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- http://nginx:80
 1606  kubectl run busybox --image=busybox --rm -it --restart=Never --labels=access=granted -- wget -O- http://nginx:80
 1607  kubectl run busybox --image=busybox --rm -it --restart=Never -- sh
 1608  kubectl delete netpol/access-nginx
 1609  nano f11netpol.yaml 
 1610  kubectl create -f f11netpol.yaml 
 1611  kubectl run busybox --image=busybox --rm -it --restart=Never -- sh
 1612  kubectl run busybox --image=busybox --rm -it --restart=Never --labels=access=granted -- sh
 1613  kubectl run busybox --image=busybox --rm -it --restart=Never --labels="access=granted" -- sh
 1614  kubectl get svc 
 1615  kubectl get pod nginx
 1616  kubectl get deploy
 1617  kubectl get deploy nginx
 1618  kubectl get pod
 1619  kubectl describe svc/nginx
 1620  nano f11netpol.yaml 
 1621  kubectl describe pod/nginx
 1622  kubectl describe deploy/nginx
 1623  exit
 1624  minikube start
 1625  kubectl get all 
 1626  kubectl netpol
 1627  kubectl get netpol
 1628  gup
 1629  cc
 1630  script 2004012345
 1631  gup
 1632  minikube start
 1633  kubectl get all 
 1634  gup
 1635  cc
 1636  script 2004030023
 1637  kubectl run g1 --image=busybox --restart=Never --dry-run -o yaml -- /bin/sh -c 'sleep 3600' > g1.yaml
 1638  nano g1.yaml 
 1639  kubectl explain pod.volumeMounts --rescursive
 1640  kubectl explain pods.volumeMounts --rescursive
 1641  kubectl explain pods.spec.volumeMounts --rescursive
 1642  kubectl explain pods.spec.volumes --rescursive
 1643  kubectl explain pods.spec --rescursive
 1644  kubectl explain pod.spec --rescursive
 1645  kubectl explain pod --recursive
 1646  kubectl explain pods.conatiners.volumeMounts
 1647  kubectl explain pods.conatiners
 1648  kubectl explain pods.spec.conatiners
 1649  kubectl explain pod.spec.conatiners
 1650  kubectl explain pod.spec.containers
 1651  kubectl explain pod.
 1652  kubectl explain pod.spec
 1653  kubectl explain pod.spec.volumes
 1654  nano g1.yaml 
 1655  kubectl explain pod.spec.
 1656  kubectl explain pod.spec.containers
 1657  kubectl explain pod.spec.containers.volumeMounts
 1658  kubectl explain pod.spec.containers.volumeMounts --recursive
 1659  nano g1.yaml 
 1660  kc -f g1.yaml 
 1661  kubectl get pod/g1
 1662  kubectl get pod/g1 -w
 1663  cc
 1664  kubectl exec -ti g1 -c g1a -- /bin/sh
 1665  kubectl exec -ti g1 -c g1b -- /bin/sh
 1666  cc
 1667  kubectl explain persistentVolume 
 1668  kubectl explain persistentVolume --recursive
 1669  cc
 1670  kubectl get pv,pvc
 1671  kubectl get pv
 1672  kubectl get pvc
 1673  cc
 1674  touch g2pv.yaml
 1675  nano g2pv.yaml 
 1676  gup
 1677  nano g2pvc.yaml 
 1678  kubectl explain persistentVolumeClaim --recursive
 1679  kubectl explain persistentVolumeClaim.spec
 1680  nano g2pvc.yaml 
 1681  kc -f g2pvc.yaml 
 1682  nano g2pvc.yaml 
 1683  kc -f g2pvc.yaml 
 1684  nano g2pvc.yaml 
 1685  kc -f g2pvc.yaml 
 1686  nano g2pvc.yaml 
 1687  kc -f g2pvc.yaml 
 1688  minikube status
 1689  kubectl get pod
 1690  ll
 1691  ls
 1692  gup
 1693  cc
 1694  nano g2pvc.yaml 
 1695  kc -f g2pvc.yaml 
 1696  kubectl get pv
 1697  kubectl get pvc
 1698  exit
 1699  minikube start
 1700  script 2004041545
 1701  cc
 1702  kubectl get all 
 1703  cc
 1704  ll
 1705  ls
 1706  nano g2pv.yaml 
 1707  cc
 1708  kubectl explain pod. --recursive
 1709  kubectl explain --h
 1710  kubectl explain --help
 1711  kubectl options
 1712  kubectl PesistentVolume --recursive
 1713  kubectl explain PesistentVolume --recursive
 1714  kubectl explain presistentVolume --recursive
 1715  kubectl explain PersistentVolume --recursive
 1716  kubectl explain PersistentVolume 
 1717  kubectl explain PersistentVolume.spec
 1718  kubectl explain PersistentVolume.kind
 1719  kubectl explain PersistentVolume.apiVersion
 1720  kubectl explain PersistentVolume.metadata
 1721  nano g2pv.yaml 
 1722  kubectl explain PersistentVolume.spec
 1723  kubectl get pod
 1724  minikube status
 1725  minikube stop
 1726  minikube start
 1727  kubectl explain PersistentVolume.spec
 1728  kubectl explain PersistentVolume.spec --recursive
 1729  nano g2pv.yaml 
 1730  kubectl create -f g2pv.yaml 
 1731  nano g2pv.yaml 
 1732  kubectl create -f g2pv.yaml 
 1733  nano g2pv.yaml 
 1734  kubectl create -f g2pv.yaml 
 1735  kubectl get pv
 1736  kubectl get pvc
 1737  nano g2pvc.yaml 
 1738  cc
 1739  script 2004042103
 1740  geit
 1741  gedit
 1742  minikube start
 1743  script 2004052320
 1744  cc
 1745  kubectl get pod
 1746  cc
 1747  ls
 1748  kubectl get pv
 1749  kubectl get pvc
 1750  kubectl run bb bb --image=busybox --restart=Never --dry-run -o yaml -- /bin/sh -c "sleep 3600" > g3.yaml 
 1751  nano g3.yaml 
 1752  kubectl create -f g3.yaml 
 1753  nano g3.yaml 
 1754  kubectl create -f g3.yaml 
 1755  cc
 1756  kubectl exec bb -ti -- cp /etc/passwd /etc/foo/passwd
 1757  nano g3.yaml 
 1758  kc -f bb1 
 1759  kc -f g3.yaml 
 1760  kubectl exec bb1 -rm -- ls /etc/foo
 1761  kubectl exec bb1 -rm -ti -- ls /etc/foo
 1762  kubectl exec bb1 -- ls /etc/foo
 1763  cc
 1764  kubectl run bb2 --image=busybox --restart=Never -- sleep 3600
 1765  kubectl cp bb2:/etc/passwd ./passwd
 1766  kubectl cp bb2:/etc/passwd .passwd
 1767  ll
 1768  ls
 1769  ls ./passwd 
 1770  cd ./passwd 
 1771  cd ..
 1772  ls
 1773  passwd 
 1774  cd k8CKAD/
 1775  ls
 1776  cat passwd 
 1777  cd ..
 1778  ls
 1779  cat passwd
 1780  cd k8CKAD/
 1781  kubectl exec bb2 -ti -- /bin/sh
 1782  cat ./passwd 
 1783  ll ./passwd 
 1784  less /etc/passwd
 1785  cc
 1786  gup
 1787  cat passwd 
 1788  cat .passwd 
 1789  gup
 1790  ping 1.1.1.1
 1791  ping 8.8.8.8
 1792  cc
 1793  kubectl create ns ckad-prep
 1794  kubectl get ns
 1795  cc
 1796  kubectl run mypod --image=nginx:2.3.5 --restart=Never --port=80 --namespace=ckad-prep
 1797  kubectl get pod -n ckad-prep
 1798  kubectl describe pod mypod -n ckad-prep
 1799  touch pod-error.txt
 1800  kubectl describe pod mypod -n ckad-prep | grep Events
 1801  kubectl describe pod mypod -n ckad-prep | grep -2 Events
 1802  kubectl describe pod mypod -n ckad-prep | grep -2 Failed
 1803  kubectl describe pod mypod -n ckad-prep | grep -2 Warning Failed
 1804  kubectl describe pod mypod -n ckad-prep | grep -2 Failed > pod-error.txt 
 1805  cat pod-error.txt 
 1806  cc
 1807  kubectl set --h
 1808  kubectl set image --h
 1809  kubectl set image pod/mypod nginx:2.3.5=nginx:1.15.12 -n ckad-prep
 1810  kubectl set image pod/mypod mypod=nginx:1.15.12 -n ckad-prep
 1811  kubectl describe pod mypod -n ckad-prep
 1812  kubectl get pod mypod -n ckad-prep
 1813  kubectl edit pod mypod -n ckad-prep
 1814  kubectl get pod -n ckad-prep
 1815  6
 1816  kubectl log pod/mypod
 1817  kubectl logs pod/mypod -n ckad-prep
 1818  cc
 1819  kubectl exec mypod -ti -n ckad-prep -- sh
 1820  kubectl get pod -n ckad-prep -o wide
 1821  cc
 1822  kubectl run bb --image=busybox --restart=Never --rm -ti -n ckad-prep -- /bin/sh
 1823  kubectl logs mypod -n ckad-prep
 1824  kubectl delete pod mypod --namespace=ckad-prep
 1825  gup
 1826  ~/Q1_CNC/k8CKAD/gup
 1827  ~/Q1_CNC/k8CKAD/gitBatch.sh
 1828  sudo ~/Q1_CNC/k8CKAD/gitBatch.sh
 1829  cd ..
 1830  gup
 1831  history 
 1832  // 1-core-concepts.md
 1833  history 
 1834  // End of 1-core-concepts.md
 1835  exit
 1836  minikube start
 1837  gup
 1838  ls
 1839  mkdir -v logfiles
 1840  cp 2020* logfiles/
 1841  ls
 1842  ll logfiles/
 1843  cd..
 1844  cd logfiles/
 1845  rm 2020*
 1846  ls
 1847  cd ..
 1848  ls
 1849  mv 2020* logfiles/
 1850  ls
 1851  mv 200* logfiles/
 1852  ls
 1853  gup
 1854  mkdir -v dgkanatsios
 1855  ls
 1856  mv -r !(logfiles) dgkanatsios/
 1857  cp -r !(logfiles) dgkanatsios/
 1858  cp -r !(logfiles & dgkanatsios) dgkanatsios/
 1859  ls
 1860  ls dgkanatsios/
 1861  cd dgkanatsios/
 1862  rm kubernetes-metrics-server/
 1863  ls /log
 1864  ls logfiles/
 1865  cd ..
 1866  ls
 1867  rmdr
 1868  mkdr
 1869  mkdr -h
 1870  rmdir dgkanatsios/
 1871  rmdir -r dgkanatsios/
 1872  rmdir -h
 1873  rmdir --help
 1874  rmdir dgkanatsios/
 1875  rmdir dgkanatsios/ --ignore-fail-on-non-empty 
 1876  ls
 1877  ls dgkanatsios/
 1878  rmdir -d dgkanatsios/
 1879  rm -rf dgkanatsios/
 1880  ls
 1881  mkdir dgkanatsios/
 1882  ls
 1883  history | grep !
 1884  mv !(kubernetes-metrics-server & logfiles & dgkanatsios) dgkanatsios/
 1885  mv !(kubernetes-metrics-server | logfiles | dgkanatsios) dgkanatsios/
 1886  cp -r !(kubernetes-metrics-server|logfiles|dgkanatsios) dgkanatsios/
 1887  ls dgkanatsios/
 1888  cd dgkanatsios/
 1889  rm -r logfiles/
 1890  ls
 1891  rm -r kubernetes-metrics-server/
 1892  cd ..
 1893  ls
 1894  undelete
 1895  git remote pull
 1896  git pull
 1897  ls
 1898  ls dgkanatsios/
 1899  git status
 1900  git checkout 
 1901  ls
 1902  ls dgkanatsios/
 1903  ls
 1904  ls dgkanatsios/
 1905  git checkout origin/master 
 1906  ls
 1907  git pull remote
 1908  git pull origin master 
 1909  ls
 1910  git fetch 
 1911  ls
 1912  git status 
 1913  git checkout logfiles
 1914  ls
 1915  cd logfiles/
 1916  ls
 1917  gup
 1918  cd ..
 1919  gup
 1920  git checkout gitBatch.sh
 1921  gup
 1922  ls
 1923  ls dgkanatsios/
 1924  ls
 1925  mkdir -v bmuschko
 1926  cd bm
 1927  cd bmuschko/
 1928  ls
 1929  gup
 1930  cd ..
 1931  gup
 1932  git push origin master 
 1933  gup
 1934  git log
 1935  history | grep
 1936  history | grep git
 1937  git checkout master 
 1938  git status
 1939  ls
 1940  ls logfiles/
 1941  ls dgkanatsios/
 1942  cp -r !(bmuschko|dgkanatsios|kubernetes-metrics-server|logfiles) dgkanatsios/
 1943  ls
 1944  cd dgkanatsios/
 1945  ls
 1946  cd ..
 1947  ls
 1948  rm -r !(bmuschko|dgkanatsios|kubernetes-metrics-server|logfiles) 
 1949  ls
 1950  ll -l
 1951  ll -r
 1952  ll -rl
 1953  ls logfiles/
 1954  ls dgkanatsios/
 1955  gup
 1956  mv dgkanatsios/gitBatch.sh ~/Q1_CNC/k8CKAD/
 1957  ls
 1958  gup
 1959  ls
 1960  gup
 1961  ls
 1962  cd bmuschko/
 1963  touch README.md
 1964  cd ..
 1965  gup
 1966  ls
 1967  cd bmuschko/
 1968  cc
 1969  kubectl create ns ckad-prep
 1970  kubectl get ns
 1971  cc
 1972  kubectl run mypod --image=nginx:2.3.5 --restart=Never --port=80 --namespace=ckad-prep 
 1973  kubectl get pod -n ckad-prep
 1974  kubectl delete pod mypod
 1975  kubectl delete pod mypod -n ckad-prep
 1976  kubectl delete ns ckad-prep
 1977  cc
 1978  ls
 1979  script 202004070027
 1980  cd ..
 1981  gup
 1982  cc
 1983  echo << EOF >> config.txt
DB_URL: localhost:3306
DB_USERNAME: postgres
EOF

 1984  cat config.txt 
 1985  echo<< EOF >> config.txt
DB_URL: localhost:3306
DB_USERNAME: postgres
EOF

 1986  cat config.txt 
 1987  echo<< EOF > config.txt
DB_URL: localhost:3306
DB_USERNAME: postgres
EOF

 1988  cat config.txt 
 1989  nano config.txt 
 1990  cat config.txt 
 1991  cc
 1992  kubectl create cm db-config --from-file=config.txt
 1993  kubectl get cm
 1994  kubectl get cm db-config
 1995  nano config.txt 
 1996  cc
 1997  kubectl get cm db-config -o yaml
 1998  cc
 1999  kubectl run backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml
 2000  nano b1.yaml 
 2001  kc -f b1.yaml 
 2002  kubectl exec backend -ti -- /bin/sh
 2003  kubectl get pod backend
 2004  kubectl get pod backend -o yaml
 2005  cc
 2006  kubectl delete pod backend
 2007  nano b2
 2008  nano config.txt 
 2009  kubectl delete cm db-config
 2010  kubectl create cm db-config --from-file=config.txt
 2011  kubectl get cm db-config 
 2012  kubectl get cm db-config -o yaml
 2013  kubectl run backend --image=nginx --restart=Never -o yaml --dry-run > b1.yaml
 2014  kubectl get pod backend
 2015  nano b1.yaml 
 2016  kc -f b1.yaml 
 2017  kubectl get pod backend
 2018  kubectl exec backend -ti -- /bin/sh
 2019  nano b1.yaml 
 2020  echo -e "DB_URL=localhost:3306\nDB_USERNAME=postgres" > config.txt
 2021  nano config.txt 
 2022  kubectl exec backend -ti -- /bin/sh
 2023  cc
 2024  kubectl delete cm db-config
 2025  $ kubectl create configmap db-config --from-env-file=config.txt
 2026  kubectl delete pod backend
 2027  kubectl get pod backend
 2028  kubectl create -f b1.yaml 
 2029  kubectl exec backend -ti -- /bin/sh
 2030  kubectl get pod backend
 2031  kubectl exec backend -ti -- /bin/sh
 2032  history 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cchistory kubectl exec backend -ti -- /bin/sh[12Pget pod backendexec backend -ti -- /bin/sh[9Pcreate -f b1.yaml [3Pget pod backend[3@delete[C[C[C[C[C[C[C[C[C[C[C[C
pod "backend" deleted
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete pod backendcc[Khistory kubectl exec backend -ti -- /bin/sh[12Pget pod backendexec backend -ti -- /bin/sh[9Pcreate -f b1.yaml [3Pget pod backend[3@delete[C[C[C[C[C[C[C[C[C[C[C[C$ kubectl create configmap db-config --from-env-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[36Pkubectl delete cm db-config
configmap "db-config" deleted
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano [K[K[K[K[Krm d[Kconfig.txt 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano config.txt
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;70H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 2.9.3                                                         config.txt                                                                   [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[m[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[3dD[?12l[?25h[?25lB[?12l[?25h[?25l_[?12l[?25h[?25lU[?12l[?25h[?25lS[?12l[?25h[?25lE[?12l[?25h[?25lR[?12l[?25h[?25lN[?12l[?25h[?25lA[?12l[?25h[?25lM[?12l[?25h[?25lE[?12l[?25h[?25l=[?12l[?25h[?25lp[?12l[?25h[?25l [?12l[?25h[?25lp[?12l[?25h[?25lo[?12l[?25h[?25ls[?12l[?25h[?25lt[?12l[?25h[?25lg[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25l[4d[?12l[?25h[?25lD[?12l[?25h[?25lB[?12l[?25h[?25l_[36d[K[4;4H[?12l[?25h[?25lU[?12l[?25h[?25lR[?12l[?25h[?25lL[?12l[?25h[?25l=[?12l[?25h[?25ll[?12l[?25h[?25lo[?12l[?25h[?25lc[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25lu[?12l[?25h[?25ls[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lh[?12l[?25h[?25lo[?12l[?25h[?25ls[?12l[?25h[?25lt[?12l[?25h[?25l:[?12l[?25h[?25l3[?12l[?25h[?25l3[?12l[?25h[?25l0[?12l[?25h[?25l6[?12l[?25h[?25l[5d[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: config.txt                               (B[m[36;31H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 3 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl create -f[K[Kcm db-config --from-ful[K[Kile[K[K[K[Kenv-file=config.txt
configmap/db-config created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl g[Kcreate -f b2[K1.yaml 
pod/backend created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend
NAME      READY   STATUS              RESTARTS   AGE
backend   0/1     ContainerCreating   0          7s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend
NAME      READY   STATUS              RESTARTS   AGE
backend   0/1     ContainerCreating   0          9s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend
NAME      READY   STATUS              RESTARTS   AGE
backend   0/1     ContainerCreating   0          10s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend
NAME      READY   STATUS    RESTARTS   AGE
backend   1/1     Running   0          12s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backendcreate -f b1.yaml cm db-config --from-env-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano config.txt[K[1Prm config.txt kubectl delete cm db-config[1Ppod backendcc[Khistory kubectl exec backend -ti -- /bin/sh[K[K[K[K[K[K[Kenv
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=backend
TERM=xterm
DB_URL=localhost:3306
DB_USERNAME=postgres
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
F11DEP_PORT_80_TCP_ADDR=10.98.165.245
F3DEP_PORT_80_TCP_ADDR=10.105.87.61
FOO_PORT_6262_TCP_ADDR=10.97.79.96
NGINX_PORT_80_TCP_ADDR=10.98.16.229
KUBERNETES_SERVICE_PORT=443
F3DEP_SERVICE_HOST=10.105.87.61
FOO_SERVICE_PORT=6262
FOO_PORT=tcp://10.97.79.96:6262
NGINX_PORT_80_TCP_PORT=80
F3DEP_PORT=tcp://10.105.87.61:80
F3DEP_PORT_80_TCP_PROTO=tcp
F3DEP_PORT_80_TCP_PORT=80
FOO_SERVICE_HOST=10.97.79.96
KUBERNETES_PORT_443_TCP_PORT=443
F1SVC_PORT_80_TCP_PROTO=tcp
FOO_PORT_6262_TCP_PORT=6262
NGINX_PORT_80_TCP_PROTO=tcp
KUBERNETES_SERVICE_PORT_HTTPS=443
NGINX_PORT_80_TCP=tcp://10.98.16.229:80
F11DEP_SERVICE_PORT=80
F11DEP_PORT_80_TCP_PORT=80
F1SVC_SERVICE_PORT=80
F1SVC_PORT_80_TCP_ADDR=10.102.148.164
F3DEP_PORT_80_TCP=tcp://10.105.87.61:80
NGINX_SERVICE_HOST=10.98.16.229
F1SVC_SERVICE_HOST=10.102.148.164
FOO_PORT_6262_TCP_PROTO=tcp
NGINX_SERVICE_PORT=80
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
KUBERNETES_PORT=tcp://10.96.0.1:443
F11DEP_PORT_80_TCP=tcp://10.98.165.245:80
F1SVC_PORT=tcp://10.102.148.164:80
F1SVC_PORT_80_TCP=tcp://10.102.148.164:80
F1SVC_PORT_80_TCP_PORT=80
KUBERNETES_SERVICE_HOST=10.96.0.1
F11DEP_SERVICE_HOST=10.98.165.245
F11DEP_PORT=tcp://10.98.165.245:80
F11DEP_PORT_80_TCP_PROTO=tcp
F3DEP_SERVICE_PORT=80
FOO_PORT_6262_TCP=tcp://10.97.79.96:6262
NGINX_PORT=tcp://10.98.16.229:80
KUBERNETES_PORT_443_TCP_PROTO=tcp
NGINX_VERSION=1.17.9
NJS_VERSION=0.3.9
PKG_RELEASE=1~buster
HOME=/root
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ echo -e "db-password=passwd" > db-credentials
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ rm db-credentials 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ // 2
bash: //: Is a directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ // 2 Secret 
bash: //: Is a directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl create sc[Kecret d[Kgeneric db-credentials --froo[Km-literl[Kal=db-password=passwd
secret/db-credentials created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get secret
NAME                  TYPE                                  DATA   AGE
122                   Opaque                                2      36d
admin-token-6tbtp     kubernetes.io/service-account-token   3      34d
admin1-token-rlg87    kubernetes.io/service-account-token   3      34d
d13sec                Opaque                                1      15d
d14sec                Opaque                                1      15d
db-credentials        Opaque                                1      6s
default-token-k8lrh   kubernetes.io/service-account-token   3      52d
mysec122              Opaque                                2      36d
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get secretcreate secret generic db-credentials --from-literal=db-password=passwd[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccc[K// 2 Secret [K[2Pccrm db-credentials echo -e "db-password=passwd" > db-credentials[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccc[Kkubectl exec backend -ti -- env[8Pget pod backendcreate -f b1.yaml cm db-config --from-env-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano config.txt[K[1Prm config.txt kubectl delete cm db-config
configmap "db-config" deleted
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete cm db-config[9Pget secretcreate secret generic db-credentials --from-literal=db-password=passwd[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccc[K// 2 Secret [K[2Pccrm db-credentials echo -e "db-password=passwd" > db-credentials[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccc[Kkubectl exec backend -ti -- env[8Pget pod backendcreate -f b1.yaml cm db-config --from-env-file=config.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cnano config.txt[K[1Prm config.txt kubectl delete cm db-config[1Ppod backend
pod "backend" deleted
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nna[K[Kn[Kna[K[Kano b1.yaml 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 18 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b1.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: backend[9;3Hname: backend[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: backend[14;5Hresources: {}[15;5HenvFrom:[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3dspec:[K[4d  containers:[5d  - image: nginx[6;3H  name: backend[K[7;3H  resources: {}[8;5HenvFrom:[K[9;3H    - configMapRef:[10;10H[1K name: db-config[11;3HdnsPolicy: ClusterFirst[12;3HrestartPolicy: Never[13dstatus: {}[K[14d[K[15d[K[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[9d[?12l[?25h[?25l[8;13H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[8;12H [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l"[?12l[?25h[?25l [?12l[?25h[?25l:[16d[K[8;9H[?12l[?25h[?25l[9d[?12l[?25h[?25l[8;9H[?12l[?25h[?25l7[9;16r8[9dM[1;18r[9;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25lD[?12l[?25h[?25lB[?12l[?25h[?25l_[?12l[?25h[?25lP[?12l[?25h[?25lA[?12l[?25h[?25lS[?12l[?25h[?25ls[?12l[?25h[?25lW[?12l[?25h[?25lO[?12l[?25h[?25lR[?12l[?25h[?25lD[?12l[?25h[?25l7[10;16r8[10dM[1;18r[10;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lv[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25lu[?12l[?25h[?25le[?12l[?25h[?25lF[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lm[?12l[?25h[?25l:[?12l[?25h[?25l7[11;15r8[11dM[1;18r[11;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lc[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25lk[?12l[?25h[?25le[?12l[?25h[?25ly[?12l[?25h[?25lR[?12l[?25h[?25le[?12l[?25h[?25lf[?12l[?25h[?25l:[?12l[?25h[?25l7[12;15r8[12dM[1;18r[12;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25lD[?12l[?25h[?25lB[?12l[?25h[?25l_[?12l[?25h[?25lP[?12l[?25h[?25lA[?12l[?25h[?25lS[?12l[?25h[?25ls[?12l[?25h[?25lW[?12l[?25h[?25l[?12l[?25h[?25lWORD[K[?12l[?25h[?25lSSWORD[?12l[?25h[?25l[10;18H[?12l[?25h[?25l[11;21H[?12l[?25h[?25l[12;5H[?12l[?25h[?25l[13;21H[?12l[?25h[?25l[12;5H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lb[?12l[?25h[?25l-[?12l[?25h[?25lc[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25ld[?12l[?25h[?25le[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25li[?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ls[?12l[?25h[?25l[13d[K[14;7H- configMapRef:[K[15;10H[1K name: db-config[13d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lk[?12l[?25h[?25le[?12l[?25h[?25ly[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lb[?12l[?25h[?25l-[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25ls[?12l[?25h[?25ls[?12l[?25h[?25lw[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25ld[?12l[?25h[?25l[14d[?12l[?25h[?25l[7G    name: db-config[15;3HdnsPolicy: ClusterFirst[A[?12l[?25h[?25l  dnsPolicy: ClusterFirst[15;3HrestartPolicy: Never[K[A[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: b1.yaml                                  (B[m[16;28H[?12l[?25h[?25l[16;27H[?12l[?25h[?25l[16;26H[?12l[?25h[?25l[16;25H[?12l[?25h[?25l[16;24H[?12l[?25h[?25l[16;23H[?12l[?25h[?25l[16;22H[?12l[?25h[?25l[16;23H[?12l[?25h[?25l(B[0;7m.yaml (B[m[16;22H[?12l[?25h[?25l(B[0;7m2.yaml(B[m[16;23H[?12l[?25h[?25l(B[0;7mSave file under DIFFERENT NAME?[17d Y(B[m Yes[K[18d(B[0;7m N(B[m No    [17G(B[0;7m^C(B[m Cancel[K[16;33H[?12l[?25h[?25l[1;149H[1;76H[39;49m(B[0;7m2[1;141H        (B[m[16;66H[1K (B[0;7m[ Wrote 21 lines ](B[m[K[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b2.yaml 
error: error validating "b2.yaml": error validating data: ValidationError(Pod.spec.containers[0].env[0].valueFrom): unknown field "secretkeyRef" in io.k8s.api.core.v1.EnvVarSource; if you choose to ignore these errors, turn validation off with --validate=false
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b2.yaml [1Pnano b1[C[C[C[C[C[C
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 18 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b1.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: backend[9;3Hname: backend[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: backend[14;5Hresources: {}[15;5HenvFrom:[3d[?12l[?25h[?25l[16d[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b1.yaml [1P[1@2
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 21 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b2.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: backend[9;3Hname: backend[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: backend[14;5Hresources: {}[15;5Henv:[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3dspec:[K[4d  containers:[5d  - image: nginx[6;3H  name: backend[K[7;3H  resources: {}[8;5Henv:[K[9;3H   - name: DB_PASSWORD[10;7H[1K valueFrom:[11;9H[1K secretkeyRef:[12;11H[1K name: db-credentials[13;11H[1K key: db-password[14;3HdnsPolicy: ClusterFirst[15;3HrestartPolicy: Never[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3;7H[1K valueFrom:[4;9H[1K secretkeyRef:[5;11H[1K name: db-credentials[6;11H[1K key: db-password[7;3HdnsPolicy: ClusterFirst[8;3HrestartPolicy: Never[9dstatus: {}[K[10d[K[11d[K[12d[K[13d[K[14d[K[15d[K[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[16d[K[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[2;15r[2;1H[7T[1;18r[3;1Hspec:[4;3Hcontainers:[5;3H- image: nginx[6;5Hname: backend[7;5Hresources: {}[8;5Henv:[9;6H- name: DB_PASSWORD[?12l[?25h[?25l[A[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lc[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25lt[?12l[?25h[?25lk[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[11;16H[1P[?12l[?25h[?25lKeyRef:[17G[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: b2.yaml                                  (B[m[16;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 21 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b2.yaml 1[C[C[C[C[C[C[1@kc -f b2[C[C[C[C[C[C
pod/backend created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b2.yaml [1Pnano[C[C[C[C[C[C[C[C[C1[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[Kky[Kubectl e[K[K get pod backed[Kbd[K[Knd
NAME      READY   STATUS    RESTARTS   AGE
backend   1/1     Running   0          15s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl exec backed[Knd -ti -- env[K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl exec backend -ti -- env
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=backend
TERM=xterm
DB_PASSWORD=passwd
F3DEP_PORT_80_TCP=tcp://10.105.87.61:80
KUBERNETES_PORT_443_TCP_PROTO=tcp
F1SVC_SERVICE_PORT=80
F1SVC_PORT_80_TCP=tcp://10.102.148.164:80
F1SVC_PORT_80_TCP_PORT=80
FOO_PORT=tcp://10.97.79.96:6262
FOO_PORT_6262_TCP=tcp://10.97.79.96:6262
F3DEP_SERVICE_HOST=10.105.87.61
F11DEP_PORT_80_TCP_PORT=80
F1SVC_SERVICE_HOST=10.102.148.164
F1SVC_PORT_80_TCP_PROTO=tcp
F1SVC_PORT_80_TCP_ADDR=10.102.148.164
FOO_PORT_6262_TCP_PROTO=tcp
F11DEP_PORT_80_TCP=tcp://10.98.165.245:80
FOO_PORT_6262_TCP_PORT=6262
F3DEP_SERVICE_PORT=80
F11DEP_PORT_80_TCP_ADDR=10.98.165.245
FOO_SERVICE_PORT=6262
KUBERNETES_PORT_443_TCP_PORT=443
F11DEP_SERVICE_HOST=10.98.165.245
F11DEP_PORT=tcp://10.98.165.245:80
FOO_SERVICE_HOST=10.97.79.96
NGINX_SERVICE_PORT=80
NGINX_PORT_80_TCP_ADDR=10.98.16.229
F3DEP_PORT_80_TCP_PORT=80
F3DEP_PORT_80_TCP_ADDR=10.105.87.61
KUBERNETES_SERVICE_PORT=443
KUBERNETES_SERVICE_PORT_HTTPS=443
F11DEP_SERVICE_PORT=80
NGINX_PORT_80_TCP=tcp://10.98.16.229:80
NGINX_PORT_80_TCP_PROTO=tcp
NGINX_PORT_80_TCP_PORT=80
F3DEP_PORT_80_TCP_PROTO=tcp
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
F1SVC_PORT=tcp://10.102.148.164:80
NGINX_PORT=tcp://10.98.16.229:80
F3DEP_PORT=tcp://10.105.87.61:80
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
F11DEP_PORT_80_TCP_PROTO=tcp
FOO_PORT_6262_TCP_ADDR=10.97.79.96
NGINX_SERVICE_HOST=10.98.16.229
KUBERNETES_PORT=tcp://10.96.0.1:443
NGINX_VERSION=1.17.9
NJS_VERSION=0.3.9
PKG_RELEASE=1~buster
HOME=/root
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ // 3 Creating a Security Context for a Pod
bash: //: Is a directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ $ kubectl run secured --image=nginx --restart=Never -o yaml --dry-run > secured.yaml
$: command not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ $ kubectl run secured --image=nginx --restart=Never -o yaml --dry-run > secured.yaml[C[1P[C[1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P.yaml[1P.yaml[1P.yaml[1P.yaml[1P.yaml[1P.yaml[1P.yamlb.yaml3.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano be[K3
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;70H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 2.9.3                                                             b3                                                                       [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[m[?12l[?25h[?25l[16d[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b3.yaml 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 15 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b3.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: secured[9;3Hname: secured[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: secured[14;5Hresources: {}[15;3HdnsPolicy: ClusterFirst[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[A[?12l[?25h[?25l[11;14H[?12l[?25h[?25l[10;6H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[11;15r[11;1HM[1;18r[11;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lv[?12l[?25h[?25lo[?12l[?25h[?25ll[?12l[?25h[?25lu[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l7[12;16r8[12dM[1;18r[16;1H[K[12d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l[5G[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l-  name :  -[?12l[?25h[?25l [?12l[?25h[?25l[1P[?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l[13d[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[12;12H[?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lv[?12l[?25h[?25lo[?12l[?25h[?25ll[?12l[?25h[?25l[13d[K[14d  containers:[K[15;3H- image: nginx[K[13d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25lt[?12l[?25h[?25ly[?12l[?25h[?25lD[?12l[?25h[?25li[?12l[?25h[?25lr[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l{[?12l[?25h[?25l}[?12l[?25h[?25l[A[?12l[?25h[?25l[11;12H[?12l[?25h[?25l[10;6H[?12l[?25h[?25l7[11;15r8[11dM[1;18r[11;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ls[?12l[?25h[?25le[?12l[?25h[?25lc[?12l[?25h[?25lu[?12l[?25h[?25lr[?12l[?25h[?25li[?12l[?25h[?25lt[?12l[?25h[?25ly[?12l[?25h[?25lC[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l:[?12l[?25h[?25l7[12;15r8[12dM[1;18r[12;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lf[?12l[?25h[?25ls[?12l[?25h[?25lG[?12l[?25h[?25lr[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25lp[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l3[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l0[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l7[3;16r8[16d[7S[1;18r[9;3Hcontainers:[10;3H- image: nginx[11;5Hname: secured[12;5Hresources: {}[13;3HdnsPolicy: ClusterFirst[14;3HrestartPolicy: Never[15dstatus: {}[9;14H[?12l[?25h[?25l[10;17H[?12l[?25h[?25l[11dd[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15;11H[?12l[?25h[?25l7[2;16r8[16d[7S[1;18r[2;1H[K[9d[?12l[?25h[?25l[8;11H[?12l[?25h[?25l[7;18H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l7[6;16r8[6dM[1;18r[6;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lv[?12l[?25h[?25lo[?12l[?25h[?25ll[?12l[?25h[?25lu[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25lM[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25ls[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l7[7;16r8[7dM[1;18r[7;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lv[?12l[?25h[?25lo[?12l[?25h[?25ll[?12l[?25h[?25l7[8;16r8[8dM[1;18r[8;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lP[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25l/[?12l[?25h[?25la[?12l[?25h[?25lp[?12l[?25h[?25lp[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: b3.yaml                                  (B[m[16;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 23 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cat b3.yaml 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: secured
  name: secured
spec:
  securityContext:
    fsGroup: 3000
  volumes: 
  - name : data-vol
    emptyDir: {}
  containers:
  - image: nginx
    name: secured
    resources: {}
    volumeMounts:
    - name: data-vol
      mountPath: /data/app
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl explain pod.sped[Kc. [Ksecurity [KContet[Kxt --recursive
KIND:     Pod
VERSION:  v1

RESOURCE: securityContext <Object>

DESCRIPTION:
     SecurityContext holds pod-level security attributes and common container
     settings. Optional: Defaults to empty. See type description for default
     values of each field.

     PodSecurityContext holds pod-level security attributes and common container
     settings. Some fields are also present in container.securityContext. Field
     values of container.securityContext take precedence over field values of
     PodSecurityContext.

FIELDS:
   fsGroup	<integer>
   runAsGroup	<integer>
   runAsNonRoot	<boolean>
   runAsUser	<integer>
   seLinuxOptions	<Object>
      level	<string>
      role	<string>
      type	<string>
      user	<string>
   supplementalGroups	<[]integer>
   sysctls	<[]Object>
      name	<string>
      value	<string>
   windowsOptions	<Object>
      gmsaCredentialSpec	<string>
      gmsaCredentialSpecName	<string>
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl explain pod.spec.securityContext --recursive[K[K[K[K[K[K[K[K[K[K[K[K
KIND:     Pod
VERSION:  v1

RESOURCE: securityContext <Object>

DESCRIPTION:
     SecurityContext holds pod-level security attributes and common container
     settings. Optional: Defaults to empty. See type description for default
     values of each field.

     PodSecurityContext holds pod-level security attributes and common container
     settings. Some fields are also present in container.securityContext. Field
     values of container.securityContext take precedence over field values of
     PodSecurityContext.

FIELDS:
   fsGroup	<integer>
     A special supplemental group that applies to all containers in a pod. Some
     volume types allow the Kubelet to change the ownership of that volume to be
     owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit
     is set (new files created in the volume will be owned by FSGroup) 3. The
     permission bits are OR'd with rw-rw---- If unset, the Kubelet will not
     modify the ownership and permissions of any volume.

   runAsGroup	<integer>
     The GID to run the entrypoint of the container process. Uses runtime
     default if unset. May also be set in SecurityContext. If set in both
     SecurityContext and PodSecurityContext, the value specified in
     SecurityContext takes precedence for that container.

   runAsNonRoot	<boolean>
     Indicates that the container must run as a non-root user. If true, the
     Kubelet will validate the image at runtime to ensure that it does not run
     as UID 0 (root) and fail to start the container if it does. If unset or
     false, no such validation will be performed. May also be set in
     SecurityContext. If set in both SecurityContext and PodSecurityContext, the
     value specified in SecurityContext takes precedence.

   runAsUser	<integer>
     The UID to run the entrypoint of the container process. Defaults to user
     specified in image metadata if unspecified. May also be set in
     SecurityContext. If set in both SecurityContext and PodSecurityContext, the
     value specified in SecurityContext takes precedence for that container.

   seLinuxOptions	<Object>
     The SELinux context to be applied to all containers. If unspecified, the
     container runtime will allocate a random SELinux context for each
     container. May also be set in SecurityContext. If set in both
     SecurityContext and PodSecurityContext, the value specified in
     SecurityContext takes precedence for that container.

   supplementalGroups	<[]integer>
     A list of groups applied to the first process run in each container, in
     addition to the container's primary GID. If unspecified, no groups will be
     added to any container.

   sysctls	<[]Object>
     Sysctls hold a list of namespaced sysctls used for the pod. Pods with
     unsupported sysctls (by the container runtime) might fail to launch.

   windowsOptions	<Object>
     Windows security options.

]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b3.yaml 
pod/secured created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b3.yaml ubectl explain pod.spec.securityContext --recursive[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat b3.yaml [K[1@nano[C[C[C[C[C[C[C[C[C[1Pcat[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[Kkubectl get pod 
NAME                         READY   STATUS              RESTARTS   AGE
06nginx                      0/1     Error               0          51d
07nginx                      0/1     Error               0          51d
100vol                       0/1     Error               0          38d
104pvc2b                     0/1     Error               0          38d
111                          0/1     Error               0          37d
113                          0/1     Completed           0          37d
114nginx                     0/1     Completed           0          37d
117                          0/1     Error               0          37d
118                          0/1     Error               0          36d
126                          0/1     Error               0          34d
131                          0/1     Error               0          34d
132                          0/1     Error               0          34d
134                          0/1     Completed           0          31d
136                          0/1     Completed           0          31d
137busybox                   0/1     Error               0          31d
13nginx                      0/1     Completed           1          51d
140                          0/1     Error               0          31d
144                          0/1     Error               0          31d
17shell                      0/1     Error               0          51d
19bb                         0/1     Completed           0          51d
21bb                         0/1     Completed           0          51d
29mc                         0/3     Completed           0          50d
2busybox1                    0/1     Completed           0          24d
33busybox1                   0/1     Completed           0          24d
34mc                         0/2     Error               0          50d
37-ng-1                      0/1     Error               0          44d
37-ng-2                      0/1     Error               0          44d
37-ng-3                      0/1     Error               0          44d
3busybox1                    0/1     Completed           0          24d
53busybox1                   0/1     Completed           0          24d
67dep-7db4cf66f7-2hfgb       1/1     Running             30         39d
67dep-7db4cf66f7-9wrj7       1/1     Running             30         39d
67dep-7db4cf66f7-h5g7f       1/1     Running             30         39d
67dep-7db4cf66f7-m2269       1/1     Running             30         39d
84job-9gkc8                  0/1     Completed           0          39d
88job-bx58m                  0/1     Completed           0          39d
b2mc                         0/2     Completed           0          23d
backend                      1/1     Running             0          22m
bb                           0/1     Completed           0          2d1h
bb1                          0/1     Completed           0          2d1h
bb2                          0/1     Completed           0          2d1h
bbusybox-1584565440-pqtfb    0/1     Completed           0          19d
bbusybox-1584565500-bwnbj    0/1     Completed           0          19d
bbusybox-1584565560-m8p9z    0/1     Completed           0          19d
busybox-1584565440-bxgcl     0/1     Completed           0          19d
busybox-1584565500-vzktl     0/1     Completed           0          19d
busybox-1584565560-vxqrv     0/1     Completed           0          19d
busybox1                     0/1     Completed           0          24d
c1a                          0/1     Error               0          23d
c1b                          0/1     Error               0          23d
c2-m6cjm                     0/1     Completed           0          23d
c4-4ntwp                     0/1     Completed           0          23d
c5job-64cfd                  0/1     Completed           0          19d
c6job-ldhpl                  0/1     Completed           0          19d
c6job-vprsm                  0/1     Completed           0          19d
ca1-66d6b4f974-4dxf6         1/1     Running             17         23d
ca1-66d6b4f974-dl85x         1/1     Running             17         23d
ca1a-5799475b87-7xrs5        1/1     Running             17         23d
ca1a-5799475b87-h7vbr        1/1     Running             17         23d
ca1a-5799475b87-h9q9t        1/1     Running             17         23d
ca1a-5799475b87-hkkcj        1/1     Running             17         23d
ca1a-5799475b87-kmlfd        1/1     Running             17         23d
ca1a-5799475b87-qch6n        1/1     Running             17         23d
d10                          0/1     Error               0          18d
d11sec                       0/1     Error               0          16d
d12rl                        0/1     Completed           0          15d
d16                          0/1     Completed           0          15d
d7                           0/1     Error               0          19d
d8                           0/1     Error               0          19d
e1lp                         0/1     Completed           0          15d
e2lp                         0/1     Error               0          15d
e3rp                         0/1     Error               0          15d
e4log                        0/1     Error               0          15d
e5deb                        0/1     Error               0          15d
f11dep-598b88ffd8-d2rp9      1/1     Running             6          6d1h
f11dep-598b88ffd8-qfsfq      1/1     Running             6          6d1h
f1svc                        0/1     Error               0          13d
f3dep-6b9b97f8c6-7vx4q       1/1     Running             8          12d
f3dep-6b9b97f8c6-xcdtl       1/1     Running             8          12d
foo-688d885f4b-5b2j4         1/1     Running             7          7d1h
foo-688d885f4b-ddx2q         1/1     Running             7          7d1h
foo-688d885f4b-m7hnf         1/1     Running             7          7d1h
g1                           0/2     Error               0          5d
hello                        0/1     Error               0          31d
mysec                        0/1     Error               0          36d
nginx-7c45b84548-hc82p       1/1     Running             6          5d23h
nginx-7c45b84548-l52dj       1/1     Running             6          5d23h
nginx3                       0/1     Completed           0          15d
nginxenv                     0/1     Error               0          24d
not-running                  0/1     Error               0          31d
rbbusybox-1584565440-j4ssq   0/1     Completed           0          19d
rbbusybox-1584565500-v775d   0/1     Completed           0          19d
rbbusybox-1584565560-fh8mz   0/1     Completed           0          19d
secbusybox                   0/1     Error               0          37d
secured                      0/1     ContainerCreating   0          8s
test114                      0/1     Completed           0          37d
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod secured
NAME      READY   STATUS    RESTARTS   AGE
secured   1/1     Running   0          6m21s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl exec -t [Ki secured --s[K sh 
# cd /data/app
# ls
# touch logs.txt
# ll
sh: 4: ll: not found
# ls -l
total 0
-rw-r--r-- 1 root 3000 0 Apr  7 20:16 logs.txt
# exit
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ // 4 Defining a Pod’s Resource Requirements
bash: //: Is a directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano rq.yaml
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;70H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          rq.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[m[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[3dapiVersion: v1[4dkind: ResourceQuota[5dmetadata:[6;3Hname: app[7dspec:[8;3Hhard:[9;5Hpods: "2"[10;5Hrequests.cpu: "2"[11;5Hrequests.memory: 500m[16d[K[11;26H[?12l[?25h[?25l[A[?12l[?25h[?25l[9;14H[?12l[?25h[?25l[8;8H[?12l[?25h[?25l[A[?12l[?25h[?25l[6;12H[?12l[?25h[?25l7[7;16r8[7dM[1;18r[7;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25lc[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25lq[?12l[?25h[?25l-[?12l[?25h[?25ld[?12l[?25h[?25le[?12l[?25h[?25lm[?12l[?25h[?25lo[?12l[?25h[?25l[3d[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: rq.yaml                                  (B[m[16;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 10 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl create namespace rq-demo
namespace/rq-demo created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl create -f rq.yaml 
resourcequota/app created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get rq
error: the server doesn't have a resource type "rq"
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get rq[K[K[K[K[K[Kdescribe quota[Kcreate -f rq.yaml [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kget quota
No resources found.
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get quota -n rq-demo
NAME   CREATED AT
app    2020-04-07T20:21:12Z
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl describe quota -n rq-demo
Name:            app
Namespace:       rq-demo
Resource         Used  Hard
--------         ----  ----
pods             0     2
requests.cpu     0     2
requests.memory  0     500m
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b4.yaml
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;70H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b4.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[m[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[3dspec:[4;3Hcontainers:[5;3H- image: nginx[6;5Hname: mypod[7;5Hresources:[8;7Hrequests:[9;9Hmemory: "1G"[10;9Hcpu: "400m"[11;3HdnsPolicy: ClusterFirst[12;3HrestartPolicy: Never[13dstatus: {}[16d[K[13;11H[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: b4.yaml                                  (B[m[16;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 18 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b4.yaml -n rq-demo
Error from server (Forbidden): error when creating "b4.yaml": pods "mypod" is forbidden: exceeded quota: app, requested: requests.memory=1G, used: requests.memory=0, limited: requests.memory=500m
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b4.yaml 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 18 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b4.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: mypod[9;3Hname: mypod[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: mypod[14;5Hresources:[15;7Hrequests:[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3dspec:[K[4d  containers:[5d  - image: nginx[6;3H  name: mypod[K[7;3H  resources:[8;5H  requests:[9;8H[1K memory: "1G"[10;8H[1K cpu: "400m"[11;3HdnsPolicy: ClusterFirst[12;3HrestartPolicy: Never[13dstatus: {}[K[14d[K[15d[K[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[10;20H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[10;15H00m"[K[?12l[?25h[?25l200m"[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: b4.yaml                                  (B[m[16;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 18 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b4.yaml kc -f b4.yaml -n rq-demo[12Pnano b4.yamlkc -f b4.yaml -n rq-demo
Error from server (Forbidden): error when creating "b4.yaml": pods "mypod" is forbidden: exceeded quota: app, requested: requests.memory=1G, used: requests.memory=0, limited: requests.memory=500m
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b4.yaml -n rq-demo[11Pnano b4.yaml kc -f b4.yaml -n rq-demo[11Pnano b4.yaml 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 18 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b4.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: mypod[9;3Hname: mypod[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: mypod[14;5Hresources:[15;7Hrequests:[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3dspec:[K[4d  containers:[5d  - image: nginx[6;3H  name: mypod[K[7;3H  resources:[8;5H  requests:[9;8H[1K memory: "1G"[10;8H[1K cpu: "200m"[11;3HdnsPolicy: ClusterFirst[12;3HrestartPolicy: Never[13dstatus: {}[K[14d[K[15d[K[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[?12l[?25h[?25l[16d[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b4.yaml kc -f b4.yaml -n rq-demo[11Pnano b4.yaml 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 18 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          b4.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: mypod[9;3Hname: mypod[10dspec:[11;3Hcontainers:[12;3H- image: nginx[13;5Hname: mypod[14;5Hresources:[15;7Hrequests:[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3dspec:[K[4d  containers:[5d  - image: nginx[6;3H  name: mypod[K[7;3H  resources:[8;5H  requests:[9;8H[1K memory: "1G"[10;8H[1K cpu: "200m"[11;3HdnsPolicy: ClusterFirst[12;3HrestartPolicy: Never[13dstatus: {}[K[14d[K[15d[K[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[9;21H[?12l[?25h[?25l[?12l[?25h[?25l[1;141H(B[0;7mModified[16d(B[m[K[1;149H[9;19H"[K[?12l[?25h[?25l"[K[?12l[?25h[?25l4"[?12l[?25h[?25l0"[?12l[?25h[?25l00"[?12l[?25h[?25lm"[?12l[?25h[?25l[16d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [17;1H Y(B[m Yes[K[18d(B[0;7m N(B[m No  [18;18H(B[0;7mC(B[m Cancel[K[16;63H[?12l[?25h[?25l[17d(B[0;7m^G(B[m Get Help[17;38H(B[0;7mM-D(B[m DOS Format[17;75H(B[0;7mM-A(B[m Append[17;112H(B[0;7mM-B(B[m Backup File[18d(B[0;7m^C(B[m Cancel[17G         [18;38H(B[0;7mM-M(B[m Mac Format[18;75H(B[0;7mM-P(B[m Prepend[18;112H(B[0;7m^T(B[m To Files[16d(B[0;7mFile Name to Write: b4.yaml                                  (B[m[16;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[16;67H(B[0;7m[ Wrote 18 lines ](B[m[J[18;150H[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano b4.yaml kc -f b4.yaml -n rq-demo
pod/mypod created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f b4.yaml -n rq-demo[11Pnano b4.yaml kc -f b4.yaml -n rq-demo[11Pnano b4.yaml kc -f b4.yaml -n rq-demo[12Pnano b4.yamlkubectl describe quota -n rq-demo
Name:            app
Namespace:       rq-demo
Resource         Used  Hard
--------         ----  ----
pods             1     2
requests.cpu     200m  2
requests.memory  400m  500m
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ ..[K[K// 4 Sercice[K[K[K[Kc[Kvice Account
bash: //: Is a directory
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ u[Kkubectl create sa backend-team
serviceaccount/backend-team created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get se[Ka 
NAME           SECRETS   AGE
admin          1         34d
admin1         1         34d
backend-team   1         76s
default        1         52d
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get sa backend-tea [Km -o yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2020-04-07T20:27:06Z"
  name: backend-team
  namespace: default
  resourceVersion: "575024"
  selfLink: /api/v1/namespaces/default/serviceaccounts/backend-team
  uid: 19891c72-d9aa-4f5c-becf-f765a4755a54
secrets:
- name: backend-team-token-59r8l
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$  kubectl run backend --image=nginx --restart=Never --serviceaccount=backend-team
Error from server (AlreadyExists): pods "backend" already exists
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl dlet[K[K[Kelete pod/backend
pod "backend" deleted
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete pod/backend
Error from server (NotFound): pods "backend" not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete pod/backendget sa backend-team -o yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2020-04-07T20:27:06Z"
  name: backend-team
  namespace: default
  resourceVersion: "575024"
  selfLink: /api/v1/namespaces/default/serviceaccounts/backend-team
  uid: 19891c72-d9aa-4f5c-becf-f765a4755a54
secrets:
- name: backend-team-token-59r8l
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get sa backend-team -o yaml[9Pdelete pod/backendget sa backend-team -o yaml[K kubectl run backend --image=nginx --restart=Never --serviceaccount=backend-team
pod/backend created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend 
NAME      READY   STATUS              RESTARTS   AGE
backend   0/1     ContainerCreating   0          6s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod backend 
NAME      READY   STATUS    RESTARTS   AGE
backend   1/1     Running   0          14s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl exec -ti bake[K[K[K[K[K[K[K[Kbackend -ti -- sh
# ls 
bin  boot  dev	etc  home  lib	lib64  media  mnt  opt	proc  root  run  sbin  srv  sys  tmp  usr  var
# car t /var	/	     /var/run/secrets/kubernetes.io/serviceaccount/token
eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImJhY2tlbmQtdGVhbS10b2tlbi01OXI4bCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJiYWNrZW5kLXRlYW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIxOTg5MWM3Mi1kOWFhLTRmNWMtYmVjZi1mNzY1YTQ3NTVhNTQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGVmYXVsdDpiYWNrZW5kLXRlYW0ifQ.YaODcNfOCNXM4nYZECokvt8kBHapec6E0mO6uDxlqEu6BsXRH_wpKIUOXkzOpaBkA1A2oOw9JoaoEWxUDHaUpG5TmAO4rKwGGSntmQwb1WWyJ17QtytXAVBFgp5C0cTLgPt7-oXjBtt4jEXAOZXllBRdG_7fzlTQVuKKVhP2WlwfVK7NZjRdns5145SnZd8XpU_jIr-NFsS8yvE_BSJAxaLu_XEk9uQPNz08KEM76ipquG-RqDS9PJl9MXwroS1ezeDQppxfs_OItoSvWIVQyOVlMfHo9x_wh8Bcdq5bGHWm5hPixzzVMjx3X_h3ty5aJXcUE4l-JqY9yiImf0mdEQ# 
# ls
bin  boot  dev	etc  home  lib	lib64  media  mnt  opt	proc  root  run  sbin  srv  sys  tmp  usr  var
# exit
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ // end Configuration (18%)
bash: syntax error near unexpected token `('
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ // end Configuration (18%)
bash: syntax error near unexpected token `('
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ // 3 - Multi-Container Pods (10%)
bash: syntax error near unexpected token `('
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ 
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cc
[3J[H[2J]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl run adaptoe[K[Ker.[K --image=busybox --restart=Never --dry-run -o yaml > adap[K[K[K[Kc1.yaml
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml 
[?1049h[22;0;0t[1;18r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[16;68H(B[0;7m[ Reading File ](B[m[16;67H(B[0;7m[ Read 15 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[16d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: adapter[9;3Hname: adapter[10dspec:[11;3Hcontainers:[12;3H- image: busybox[13;5Hname: adapter[14;5Hresources: {}[15;3HdnsPolicy: ClusterFirst[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[3dspec:[K[4d  containers:[5d  - image: busybox[6;3H  name: adapter[K[7;3H  resources: {}[8;3HdnsPolicy: ClusterFirst[9;3HrestartPolicy: Never[10dstatus: {}[11d[K[12d[K[13d[K[14d[K[15d[K[9d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[3;6H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[4;15r[4;1HM[1;18r[4;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lv[?12l[?25h[?25lo[16d[K[4;5H[?12l[?25h[?25ll[?12l[?25h[?25lu[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25ls[?12l[?25h[?25l:[?12l[?25h[?25l7[5;16r8[5dM[1;18r[5;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lv[?12l[?25h[?25lo[?12l[?25h[?25ll[?12l[?25h[?25l7[6;16r8[6dM[1;18r[6;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25lm[?12l[?25h[?25lp[?12l[?25h[?25lt[?12l[?25h[?25ly[?12l[?25h[?25lD[?12l[?25h[?25li[?12l[?25h[?25lr[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l{[?12l[?25h[?25l}[?12l[?25h[?25l[7;14H[?12l[?25h[?25l[8;17H[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l}[?12l[?25h[?25l7[11;16r8[11dM[1;18r[11;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lv[?12l[?25h[?25lo[?12l[?25h[?25ll[?12l[?25h[?25lu[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25lM[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25ls[?12l[?25h[?25l:[?12l[?25h[?25l7[12;16r8[12dM[1;18r[12;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25ln[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25l-[?12l[?25h[?25lv[?12l[?25h[?25lo[?12l[?25h[?25ll[?12l[?25h[?25l[13d[K[14d  dnsPolicy: ClusterFirst[15d  restartPolicy: Never[13d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lP[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25lv[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25l/[?12l[?25h[?25ll[?12l[?25h[?25lo[?12l[?25h[?25lg[?12l[?25h[?25ls[?12l[?25h[?25l[12;21H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l7[10;15r8[10dM[1;18r[10;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25lg[?12l[?25h[?25ls[?12l[?25h[?25l:[?12l[?25h[?25l7[11;15r8[11dM[1;18r[11;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25lc[?12l[?25h[?25l [?12l[?25h[?25l7[12;15r8[12dM[1;18r[12;1H[?12l[?25h[?25l-[?12l[?25h[?25l[K[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25lw[?12l[?25h[?25lhile true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[?12l[?25h[18;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;38r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                           Modified  [3;1H(B[mspec:[4;3Hvolumes:[5;3H- name: data-vol[6;5HemptyDir: {}[7;3Hcontainers:[8;3H- image: busybox[9;5Hname: adapter[10;5Hargs:[11;5H- c[12;5H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[13;5Hresources: {}[14;5HvolumeMounts:[15;5H- name: data-vol[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[12;93H[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                           Modified  [3;1H(B[mspec:[4;3Hvolumes:[5;3H- name: data-vol[6;5HemptyDir: {}[7;3Hcontainers:[8;3H- image: busybox[9;5Hname: adapter[10;5Hargs:[11;5H- c[12;5H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[13;5Hresources: {}[14;5HvolumeMounts:[15;5H- name: data-vol[17d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[17;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[18d(B[0;7m^X(B[m Exit[18;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[18;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[37d[1;149H[16;7HmountPath: /var/logs[17d  dnsPolicy: ClusterFirst[K[18d  restartPolicy: Never[K[19dstatus: {}[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[?25l[12;93H[?12l[?25h[?25l[?12l[?25h[?25l[11;9H[?12l[?25h[?25l[A:[?12l[?25h[?25l[9;18H[?12l[?25h[?25l[Ax[?12l[?25h[?25l[7;14H[?12l[?25h[?25l[8d[?12l[?25h[?25l(B[0;7m  - image: busybox[9d(B[m[?12l[?25h[?25l(B[0;7m    name: adapter[10d(B[m[?12l[?25h[?25l(B[0;7m    args:[11d(B[m[?12l[?25h[?25l(B[0;7m    - c [12d(B[m[?12l[?25h[?25l(B[0;7m    - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[13d(B[m[?12l[?25h[?25l(B[0;7m    resources: {}[14d(B[m[?12l[?25h[?25l(B[0;7m    volumeMounts:[15d(B[m[?12l[?25h[?25l(B[0;7m    - name: data-vol[16d(B[m[?12l[?25h[?25l(B[0;7m      mountPath: /var/logs[17d(B[m[?12l[?25h[?25l[16;27H[?12l[?25h[?25l[8d  - image: busybox[9d    name: adapter[10d    args:[11d    - c[K[12d    - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[13d    resources: {}[14d    volumeMounts:[15d    - name: data-vol[16;6H[1K mountPath: /var/logs[17d[?12l[?25h[?25l[16;27H[?12l[?25h[?25l7[17;36r8[17dM[1;38r[17;1H[?12l[?25h[?25lhile true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[?12l[?25h[?25l[?12l[?25h[?25l[17;36r[36;1H
[1;38r[17;1H[?12l[?25h[?25l7[17;36r8M[1;38r[18;1H[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 25 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cat c1.yaml 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: adapter
  name: adapter
spec:
  volumes:
  - name: data-vol
    emptyDir: {}
  containers:
  - image: busybox
    name: adapter
    args:
    - c 
    - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;
    resources: {}
    volumeMounts:
    - name: data-vol
      mountPath: /var/logs

  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ ^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cat c1.yaml [1@nano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 25 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: adapter[9;3Hname: adapter[10dspec:[11;3Hvolumes:[12;3H- name: data-vol[13;5HemptyDir: {}[14;3Hcontainers:[15;3H- image: busybox[16;5Hname: adapter[17;5Hargs:[18;5H- c[19;5H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[20;5Hresources: {}[21;5HvolumeMounts:[22;5H- name: data-vol[23;7HmountPath: /var/logs[25;3HdnsPolicy: ClusterFirst[26;3HrestartPolicy: Never[27dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[1;141H(B[0;7mModified[36d(B[m[K[1;149H[24;3H- image: busybox[25;3H  name: adapter[K[26;3H  args:[K[27d    - c[K[28;5H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[29;5Hresources: {}[30;5HvolumeMounts:[31;5H- name: data-vol[33;3HdnsPolicy: ClusterFirst[34;3HrestartPolicy: Never[35dstatus: {}[32d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[25;18H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25ln[?12l[?25h[?25ls[?12l[?25h[?25lf[?12l[?25h[?25lo[?12l[?25h[?25lr[?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l[26;10H[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[28;36r[36;1H
[1;38r[28;1H[?12l[?25h[?25l7[28;36r8M[1;38r[29;1H[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25ls[?12l[?25h[?25lleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;[?12l[?25h[?25l$diskspace.txt; sleep 20; done[K[?12l[?25h[?25l    - sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disksp$[28;1H[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25ln[?12l[?25h[?25lt[?12l[?25h[?25lP[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25lv[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25l/[?12l[?25h[?25ll[?12l[?25h[?25lo[?12l[?25h[?25lg[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 33 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 33 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: adapter[9;3Hname: adapter[10dspec:[11;3Hvolumes:[12;3H- name: data-vol[13;5HemptyDir: {}[14;3Hcontainers:[15;3H- image: busybox[16;5Hname: adapter[17;5Hargs:[18;5H- c[19;5H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[20;5Hresources: {}[21;5HvolumeMounts:[22;5H- name: data-vol[23;7HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- c[28;5H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disksp$[29;5Hresources: {}[30;5HvolumeMounts:[31;5H- name: data-vol[32;7HmountPath: /var/log[33;3HdnsPolicy: ClusterFirst[34;3HrestartPolicy: Never[35dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[18;35r[18;1HM[1;38r[19;1H[?12l[?25h[?25l[A[?12l[?25h[?25l    - /bin/sh[36d[K[18;14H[?12l[?25h[?25l[19;9H[?12l[?25h[?25l[20;14H[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27;10H[?12l[?25h[?25l[28d[?12l[?25h[?25l[29;14H[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l7[3;36r8[36d[17S[1;38r[19;1Hstatus: {}[?12l[?25h[?25l[20d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[19;11H[?12l[?25h[?25l[Aoli[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[11;9H[?12l[?25h[?25l[A:[?12l[?25h[?25l[A tra[?12l[?25h[?25l[A[?12l[?25h[?25l[9d[?12l[?25h[?25l[10;10H[?12l[?25h[?25l7[11;36r8[11dM[1;38r[11;1H[?12l[?25h[?25l    - /bin/sh[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l-args:[6G[?12l[?25h[?25l args:[7G[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[11d[?12l[?25h[?25l[?12l[?25h[?25l     - /bin/sh[5G[?12l[?25h[?25l      - /bin/sh[6G[?12l[?25h[?25l[12d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l     - c[?12l[?25h[?25l      - c[?12l[?25h[?25l[13d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l  - sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks[5G[?12l[?25h[?25l  - sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disk[6G[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[2;35r[2;1H[17T[1;38r[3;1HapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: adapter[9;3Hname: adapter[10dspec:[11;3Hvolumes:[12;3H- name: data-vol[13;5HemptyDir: {}[14;3Hcontainers:[15;3H- image: busybox[16;5Hname: adapter[17;5Hargs:[18;5H- /bin/sh[19;5H- c[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[?12l[?25h[?25l-args:[6G[?12l[?25h[?25l args:[7G[?12l[?25h[?25l[18d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l     - /bin/sh[6G[?12l[?25h[?25l      - /bin/sh[7G[?12l[?25h[?25l[19d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l     - c[?12l[?25h[?25l      - c[?12l[?25h[?25l[20d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l     - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[5G[?12l[?25h[?25l      - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[6G[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 35 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 35 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: adapter[9;3Hname: adapter[10dspec:[11;3Hvolumes:[12;3H- name: data-vol[13;5HemptyDir: {}[14;3Hcontainers:[15;3H- image: busybox[16;5Hname: adapter[17;5H- args:[18;7H- /bin/sh[19;7H- c[20;7H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[21;5Hresources: {}[22;5HvolumeMounts:[23;5H- name: data-vol[24;7HmountPath: /var/logs[25;3H- image: busybox[26;5Hname: transformer[27;5H- args:[28;7H- /bin/sh[29;7H- c[30;7H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disk$[31;5Hresources: {}[32;5HvolumeMounts:[33;5H- name: data-vol[34;7HmountPath: /var/log[35;3HdnsPolicy: ClusterFirst[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[36d[K[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l7[3;36r8[36d[17S[1;38r[19;3HrestartPolicy: Never[20dstatus: {}[A[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[17;26H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[17;26Hs[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 35 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml 
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 14: did not find expected key
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 35 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hlabels:[8;5Hrun: adapter[9;3Hname: adapter[10dspec:[11;3Hvolumes:[12;3H- name: data-vol[13;5HemptyDir: {}[14;3Hcontainers:[15;3H- image: busybox[16;5Hname: adapter[17;5H- args:[18;7H- /bin/sh[19;7H- c[20;7H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[21;5Hresources: {}[22;5HvolumeMounts:[23;5H- name: data-vol[24;7HmountPath: /var/logs[25;3H- image: busybox[26;5Hname: transformer[27;5H- args:[28;7H- /bin/sh[29;7H- c[30;7H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disk$[31;5Hresources: {}[32;5HvolumeMounts:[33;5H- name: data-vol[34;7HmountPath: /var/logs[35;3HdnsPolicy: ClusterFirst[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[6;35r[35;1H
[1;38r[35;3HrestartPolicy: Never[6d[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 34 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 13: did not find expected key
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 34 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;3H- name: data-vol[12;5HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: adapter[16;5H- args:[17;7H- /bin/sh[18;7H- c[19;7H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[20;5Hresources: {}[21;5HvolumeMounts:[22;5H- name: data-vol[23;7HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5H- args:[27;7H- /bin/sh[28;7H- c[29;7H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disk$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[A[?12l[?25h[?25l[16d[?12l[?25h[?25l[15;18H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[15;17H [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [36d[K[15;14H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lp[?12l[?25h[?25lp[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;38r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                                          [3;1H(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;3H- name: data-vol[12;5HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5H- args:[17;7H- /bin/sh[18;7H- c[19;7H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace[20;5Hresources: {}[21;5HvolumeMounts:[22;5H- name: data-vol[23;7HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5H- args:[27;7H- /bin/sh[28;7H- c[29;7H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[38;1H(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spe[?7ll[?7h[15;14H[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                                          [3;1H(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;3H- name: data-vol[12;5HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5H- args:[17;7H- /bin/sh[18;7H- c[19;7H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace[20;5Hresources: {}[21;5HvolumeMounts:[22;5H- name: data-vol[23;7HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5H- args:[27;7H- /bin/sh[28;7H- c[29;7H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[37d[1;37H(B[0;7mc1.yaml[1;65HModified(B[m[19dc$[29;74H$[37;1H(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Spell[36d[?25l[15;14H[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[11d[?12l[?25h[?25l   - name: data-vol [?12l[?25h[?25l    - name: data-vol  [?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[A[?12l[?25h[?25l     emptyDir: {}   [?12l[?25h[?25l      emptyDir: {}[5G[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[A[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l[1P[?12l[?25h[?25l[1P   [?12l[?25h[?25l[17d[?12l[?25h[?25l[1P   [?12l[?25h[?25l[18d[?12l[?25h[?25l[A[?12l[?25h[?25l[1P   [?12l[?25h[?25l[18d[?12l[?25h[?25l[1P   [?12l[?25h[?25l[1P   [?12l[?25h[?25l[19d[?12l[?25h[?25l  - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace   [?12l[?25h[?25l - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.   [?12l[?25h[?25l[20d[?12l[?25h[?25l[1P   [?12l[?25h[?25l[21d[?12l[?25h[?25l[1P   [?12l[?25h[?25l[22d[?12l[?25h[?25l     - name: data-vol[5G[?12l[?25h[?25l[23d[?12l[?25h[?25l[7G mountPath: /var/logs[6G[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l [?12l[?25h[?25largs:[K[6G[?12l[?25h[?25largs:[K[5G[?12l[?25h[?25l[27d[?12l[?25h[?25l[1P    [?12l[?25h[?25l[28d[?12l[?25h[?25l[1P    [?12l[?25h[?25l[29d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[1P    [?12l[?25h[?25l[28d[?12l[?25h[?25l[A[?12l[?25h[?25l[28d[?12l[?25h[?25l[1P    [?12l[?25h[?25l[29d[?12l[?25h[?25l - sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f[5G[?12l[?25h[?25l- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2[5G[?12l[?25h[?25l[30d[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)             [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [15G  (B[0;7m^C(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[19G(B[0;7mM-D(B[m DOS Format    (B[0;7mM-A(B[m Append[37;55H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G  (B[0;7mM-M(B[m Mac Format    (B[0;7mM-P(B[m Prepend[55G(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;73H[1;65H(B[0;7m        (B[m[36;29H(B[0;7m[ Wrote 34 lines ](B[m[J[38;74H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 17: did not find expected key
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ [K]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 34 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5Hargs:[17;5H- /bin/sh[18;5H- c[19;5H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[20;4Hresources: {}[21;4HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- c[29;5H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disksp$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;38r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                                                          [3;1H(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5Hargs:[17;5H- /bin/sh[18;5H- c[19;5H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.t[20;4Hresources: {}[21;4HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- c[29;5H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[36;67H(B[0;7m[ Read 3[37;1H^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[38;1H(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spe[?7ll[?7h[19d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                                                          [3;1H(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5Hargs:[17;5H- /bin/sh[18;5H- c[19;5H- while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.t[20;4Hresources: {}[21;4HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- c[29;5H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[37d[1;37H(B[0;7mc1.yaml[73G(B[m[19d.$[29;74H$[37;1H(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Spell[36d[?25l[19d[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25lw[?12l[?25h[?25lh[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25lu[?12l[?25h[?25le[?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lo[?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25lo[?12l[?25h[?25l [?12l[?25h[?25l"[?12l[?25h[?25l$[?12l[?25h[?25l([?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25le[?12l[?25h[?25l)[?12l[?25h[?25l [?12l[?25h[?25l|[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25l([?12l[?25h[?25ld[?12l[?25h[?25lu[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25ls[?12l[?25h[?25lh[?12l[?25h[?25l [?12l[?25h[?25l~[?12l[?25h[?25l)[?12l[?25h[?25l"[?12l[?25h[?25l [?12l[?25h[?25l>[?12l[?25h[?25l>[?12l[?25h[?25l [?12l[?25h[?25l/[?12l[?25h[?25lv[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25l/[?12l[?25h[?25ll[?12l[?25h[?25lo[?12l[?25h[?25lg[?12l[?25h[?25ls[?12l[?25h[?25l/[?12l[?25h[?25ld[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25lk[?12l[?25h[?25ls[?12l[?25h[?25lp[?12l[?25h[?25la[?12l[?25h[?25lc[?12l[?25h[?25le[?12l[?25h[?25l$space.txt; sleep 5; done;[K[8G[?12l[?25h[?25lt[?12l[?25h[?25l[?12l[?25h[?25l    - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.$[19;73H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lc[?12l[?25h[?25le[?12l[?25h[?25l$space.txt; sleep 5; done;[K[8G[?12l[?25h[?25l    - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.$[19;73H[?12l[?25h[?25l$space.txt; sleep 5; done;[K[8G[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>[?1049h[22;0;0t[1;38r[?12l[?25h[39;49m]104(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.9.3                    c1.yaml                               [3d(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5Hargs:[17;5H- /bin/sh[18;5H- c[19d$space.txt; sleep 5; done;[20;4Hresources: {}[21;4HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- c[29;5H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[37d(B[0;7m^G(B[m Get Help   (B[0;7m^O(B[m Write Out  (B[0;7m^W(B[m Where Is   (B[0;7m^K(B[m Cut Text   (B[0;7m^J(B[m Justify[38d(B[0;7m^X(B[m Exit[15G(B[0;7m^R(B[m Read File  (B[0;7m^\(B[m Replace    (B[0;7m^U(B[m Uncut Text (B[0;7m^T(B[m To Spell[19;8H[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.9.3                    c1.yaml                               [3d(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5Hargs:[17;5H- /bin/sh[18;5H- c[19d$space.txt; sleep 5; done;[20;4Hresources: {}[21;4HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- c[29;5H- sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[37d[1;37H(B[0;7m       [1;75Hc1.yaml                                                                     [1;149H(B[m[19d    - while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;[29;74H -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disksp$[37;1H(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[?25l[19;74H[?12l[?25h[?25l[?12l[?25h[?25lt[?12l[?25h[?25lx[?12l[?25h[?25lt[?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25ls[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25le[?12l[?25h[?25lp[?12l[?25h[?25l [?12l[?25h[?25l5[?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25le[?12l[?25h[?25l;[?12l[?25h[?25l[20d[?12l[?25h[?25l[19;93H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[19;93H'[?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25l'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[8G[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l-c[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l-c[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[?12l[?25h[?25l'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks[8G[?12l[?25h[?25ls[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25le[?12l[?25h[?25lp[?12l[?25h[?25l [?12l[?25h[?25l2[?12l[?25h[?25l0[?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25lw[?12l[?25h[?25lh[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25lu[?12l[?25h[?25le[?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lo[?12l[?25h[?25l [?12l[?25h[?25lw[?12l[?25h[?25lh[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25l [?12l[?25h[?25lL[?12l[?25h[?25lI[?12l[?25h[?25lN[?12l[?25h[?25lE[?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lo[?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25lo[?12l[?25h[?25l [?12l[?25h[?25l"[?12l[?25h[?25l$[?12l[?25h[?25lL[?12l[?25h[?25lI[?12l[?25h[?25lN[?12l[?25h[?25lE[?12l[?25h[?25l"[?12l[?25h[?25l [?12l[?25h[?25l|[?12l[?25h[?25l [?12l[?25h[?25lc[?12l[?25h[?25lu[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25lf[?12l[?25h[?25l2[?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25ld[?12l[?25h[?25l"[?12l[?25h[?25l|[?12l[?25h[?25l"[?12l[?25h[?25l [?12l[?25h[?25l>[?12l[?25h[?25l>[?12l[?25h[?25l [?12l[?25h[?25l$[?12l[?25h[?25l([?12l[?25h[?25l$/diskspace.txt; sleep 20; done[K[?12l[?25h[?25l'[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 34 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 17: did not find expected key
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 34 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5Hargs:[17;5H- /bin/sh[18;5H- -c[19;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[20;4Hresources: {}[21;4HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- -c[29;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[3d[?12l[?25h[?25l[36d[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ vim c1.yaml 
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[38;1H"c1.yaml" 34L, 789C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[36mapiVersion[m[35m:[m v1
[36mkind[m[35m:[m Pod
[36mmetadata[m[35m:[m
  [36mlabels[m[35m:[m
    [36mrun[m[35m:[m adapter
  [36mname[m[35m:[m adapter
[36mspec[m[35m:[m
  [36mvolumes[m[35m:[m
    [38;5;130m- [m[36mname[m[35m:[m data-vol[10;7H[36memptyDir[m[35m:[m [35m{}[m
  [36mcontainers[m[35m:[m
  [38;5;130m- [m[36mimage[m[35m:[m busybox
    [36mname[m[35m:[m app
    [36margs[m[35m:[m
    [38;5;130m- [m/bin/sh
    [38;5;130m- [m-c
    [38;5;130m- [m[31m'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[m
   [36mresources[m[35m:[m [35m{}[m
   [36mvolumeMounts[m[35m:[m[20;6H[38;5;130m- [m[36mname[m[35m:[m data-vol[21;8H[36mmountPath[m[35m:[m /var/logs
  [38;5;130m- [m[36mimage[m[35m:[m busybox
    [36mname[m[35m:[m transformer
    [36margs[m[35m:[m
    [38;5;130m- [m/bin/sh
    [38;5;130m- [m-c
    [38;5;130m- [m[31m'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/diskspp[28;1Hace.txt; sleep 20; done'[m
    [36mresources[m[35m:[m [35m{}[m
    [36mvolumeMounts[m[35m:[m
    [38;5;130m- [m[36mname[m[35m:[m data-vol[32;7H[36mmountPath[m[35m:[m /var/logs
  [36mdnsPolicy[m[35m:[m ClusterFirst
  [36mrestartPolicy[m[35m:[m Never
[36mstatus[m[35m:[m [35m{}[m
[94m~                                                                                                                                                     [37;1H~                                                                                                                                                     [m[38;133H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[38;133H2[2;1H[?25h[?25l[38;133H3[3;1H[?25h[?25l[38;133H4[4;1H[?25h[?25l[38;133H5[5;1H[?25h[?25l[38;133H6[6;1H[?25h[?25l[38;133H7[7;1H[?25h[?25l[38;133H8[8;1H[?25h[?25l[38;133H9[9;1H[?25h[?25l[38;133H10,1[10;1H[?25h[?25l[38;134H1[11;1H[?25h[?25l[38;134H2[12;1H[?25h[?25l[38;134H3[13;1H[?25h[?25l[38;134H4[14;1H[?25h[?25l[38;134H5[15;1H[?25h[?25l[38;134H6[16;1H[?25h[?25l[38;134H7[17;1H[?25h[?25l[38;134H8[18;1H[?25h[?25l[38;134H9[19;1H[?25h[?25l[38;133H20[20;1H[?25h[?25l[38;134H1[21;1H[?25h[?25l[38;134H2[22;1H[?25h[?25l[38;134H3[23;1H[?25h[?25l[38;134H4[24;1H[?25h[?25l[38;134H5[25;1H[?25h[?25l[38;134H6[26;1H[?25h[?25l[38;134H7[27;1H[?25h[?25l[38;134H8[29;1H[?25h[?25l[38;134H9[30;1H[?25h[?25l[38;133H30[31;1H[?25h[?25l[38;134H1[32;1H[?25h[?25l[38;134H2[33;1H[?25h[?25l[38;134H3[34;1H[?25h[?25l[38;134H4[35;1H[?25h[?25l[38;134H3[34;1H[?25h[?25l[38;134H2[33;1H[?25h[?25l[38;134H1[32;1H[?25h[?25l[38;134H0[31;1H[?25h[?25l[38;133H29[30;1H[?25h[?25l[38;134H8[29;1H[?25h[?25l[38;134H7[27;1H[?25h[?25l[38;134H6[26;1H[?25h[?25l[38;134H5[25;1H[?25h[?25l[38;134H4[24;1H[?25h[?25l[38;134H3[23;1H[?25h[?25l[38;134H2[22;1H[?25h[?25l[38;134H1[21;1H[?25h[?25l[38;134H0[20;1H[?25h[?25l[38;133H19[19;1H[?25h[?25l[38;134H8[18;1H[?25h[?25l[38;134H7[17;1H[?25h[?25l[38;134H6[16;1H[?25h[?25l[38;134H5[15;1H[?25h[?25l[38;134H4[14;1H[?25h[?25l[38;134H3[13;1H[?25h[?25l[38;134H2[12;1H[?25h[?25l[38;134H1[11;1H[?25h[?25l[38;134H0[10;1H[?25h[?25l[38;133H9,1 [9;1H[?25h[?25l[38;133H8[8;1H[?25h[?25l[38;133H7[7;1H[?25h[?25l[38;133H6[6;1H[?25h[?25l[38;133H5[5;1H[?25h[?25l[38;133H4[4;1H[?25h[?25l[38;133H3[3;1H[?25h[?25l[38;133H2[2;1H[?25h[?25l[38;133H1[1;1H[?25h[?25l[38;133H2[2;1H[?25h[?25l[38;133H3[3;1H[?25h[?25l[38;133H4[4;1H[?25h[?25l[38;133H5[5;1H[?25h[?25l[38;133H6[6;1H[?25h[?25l[38;133H7[7;1H[?25h[?25l[38;133H8[8;1H[?25h[?25l[38;133H9[9;1H[?25h[?25l[38;133H10,1[10;1H[?25h[?25l[38;134H1[11;1H[?25h[?25l[38;134H2[12;1H[?25h[?25l[38;134H3[13;1H[?25h[?25l[38;134H4[14;1H[?25h[?25l[38;134H5[15;1H[?25h[?25l[38;134H6[16;1H[?25h[?25l[38;134H7[17;1H[?25h[38;1H[?2004l[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ vim c1.yaml [1@nano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 34 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- image: busybox[15;5Hname: app[16;5Hargs:[17;5H- /bin/sh[18;5H- -c[19;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[20;4Hresources: {}[21;4HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- -c[29;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[16d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l[36d[K[16d [?12l[?25h[?25l [?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[16;3H-  args:  -[?12l[?25h[?25l[1P[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l(B[0;7mi(B[m[?12l[?25h[?25l(B[0;7mm(B[m[?12l[?25h[?25l(B[0;7mage: busybox[15d    na(B[m[?12l[?25h[?25l(B[0;7mm(B[m[?12l[?25h[?25l(B[0;7me(B[m[?12l[?25h[?25l(B[0;7m:(B[m[?12l[?25h[?25l(B[0;7m (B[m[?12l[?25h[?25l(B[0;7ma(B[m[?12l[?25h[?25l(B[0;7mp(B[m[?12l[?25h[?25l[14;5Himage: busybox[15d    name: ap[16;10H[?12l[?25h[?25l[17;13H[?12l[?25h[?25l[18;10H[?12l[?25h[?25l[19;13H[?12l[?25h[?25l[19;95H[?12l[?25h[?25l7[20;35r8[20dM[1;38r[20;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lm[?12l[?25h[?25la[?12l[?25h[?25lg[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25lb[?12l[?25h[?25lu[?12l[?25h[?25ls[?12l[?25h[?25ly[?12l[?25h[?25lb[?12l[?25h[?25lo[?12l[?25h[?25lx[?12l[?25h[?25l7[21;35r8[21dM[1;38r[21;1H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25lp[?12l[?25h[?25lp[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[An/sh[?12l[?25h[?25l[A[?12l[?25h[?25l[A app[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[14d[?12l[?25h[?25l[14;36r[36;1H
[1;38r[35;3HdnsPolicy: ClusterFirst[14d[?12l[?25h[?25l[14;36r[36;1H
[1;38r[35;3HrestartPolicy: Never[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l    volumeMounts: [?12l[?25h[?25l[A[?12l[?25h[?25l    resources: {}  [?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l-[?12l[?25h[?25l[25d[?12l[?25h[?25l [?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 34 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1Pvim[C[C[C[C[C[C[C[C[C
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[38;1H"c1.yaml" 34L, 790C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[36mapiVersion[m[35m:[m v1
[36mkind[m[35m:[m Pod
[36mmetadata[m[35m:[m
  [36mlabels[m[35m:[m
    [36mrun[m[35m:[m adapter
  [36mname[m[35m:[m adapter
[36mspec[m[35m:[m
  [36mvolumes[m[35m:[m
    [38;5;130m- [m[36mname[m[35m:[m data-vol[10;7H[36memptyDir[m[35m:[m [35m{}[m
  [36mcontainers[m[35m:[m
  [38;5;130m- [m[36margs[m[35m:[m
    [38;5;130m- [m/bin/sh
    [38;5;130m- [m-c
    [38;5;130m- [m[31m'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[m
    image busybox
    [36mname[m[35m:[m app
    [36mresources[m[35m:[m [35m{}[m
    [36mvolumeMounts[m[35m:[m[20;6H[38;5;130m- [m[36mname[m[35m:[m data-vol[21;8H[36mmountPath[m[35m:[m /var/logs
  [38;5;130m- [m[36mimage[m[35m:[m busybox
    [36mname[m[35m:[m transformer
    [36margs[m[35m:[m
    [38;5;130m- [m/bin/sh
    [38;5;130m- [m-c
    [38;5;130m- [m[31m'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/diskspp[28;1Hace.txt; sleep 20; done'[m
    [36mresources[m[35m:[m [35m{}[m
    [36mvolumeMounts[m[35m:[m
    [38;5;130m- [m[36mname[m[35m:[m data-vol[32;7H[36mmountPath[m[35m:[m /var/logs
  [36mdnsPolicy[m[35m:[m ClusterFirst
  [36mrestartPolicy[m[35m:[m Never
[36mstatus[m[35m:[m [35m{}[m
[94m~                                                                                                                                                     [37;1H~                                                                                                                                                     [m[38;133H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[38;1H[?2004l[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ vim c1.yaml [1@nano[C[C[C[C[C[C[C[C[C[1Pvim[C[C[C[C[C[C[C[C[C[1@nano[C[C[C[C[C[C[C[C[C[1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 17: could not find expected ':'
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [2Pvim[C[C[C[C[C[C[C[C[C[1@nano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 34 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- args:[15;5H- /bin/sh[16;5H- -c[17;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[18;5Himage busybox[19;5Hname: app[20;5Hresources: {}[21;5HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- -c[29;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l-[?12l[?25h[?25l [?12l[?25h[?25l'[?12l[?25h[?25lw[?12l[?25h[?25lh[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25l[36d[K[17;13H[?12l[?25h[?25l [?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25lu[?12l[?25h[?25le[?12l[?25h[?25l;[?12l[?25h[?25l [?12l[?25h[?25ld[?12l[?25h[?25lo[?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[16;10H[?12l[?25h[?25l[An/sh[?12l[?25h[?25l[A[?12l[?25h[?25l[Aers:[?12l[?25h[?25l[12;19H[?12l[?25h[?25l[Aol[?12l[?25h[?25l[10;11H[?12l[?25h[?25l[9;6H[?12l[?25h[?25l[8;16H[?12l[?25h[?25l[Ar[?12l[?25h[?25l[6;10H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[3;15H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[4;10H[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7;17H[?12l[?25h[?25l[8d[?12l[?25h[?25l[9;6H[?12l[?25h[?25l[10;11H[?12l[?25h[?25l[11;21H[?12l[?25h[?25l[12d[?12l[?25h[?25l[13;14H[?12l[?25h[?25l[14;10H[?12l[?25h[?25l[15;14H[?12l[?25h[?25l[16;10H[?12l[?25h[?25l[17;22H[?12l[?25h[?25l[18;18H[?12l[?25h[?25l[19;14H[?12l[?25h[?25l[Aybox[?12l[?25h[?25l[A; do[?12l[?25h[?25l[16;10H[?12l[?25h[?25l[An/sh[?12l[?25h[?25l[A[?12l[?25h[?25l[Aers:[?12l[?25h[?25l[12;19H[?12l[?25h[?25l[Aol[?12l[?25h[?25l[10;11H[?12l[?25h[?25l[9;6H[?12l[?25h[?25l[8;16H[?12l[?25h[?25l[Ar[?12l[?25h[?25l[6;10H[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[3;15H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[4;10H[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7;17H[?12l[?25h[?25l[8d[?12l[?25h[?25l[9;6H[?12l[?25h[?25l[10;11H[?12l[?25h[?25l[11;21H[?12l[?25h[?25l[12d[?12l[?25h[?25l[13;14H[?12l[?25h[?25l[14;10H[?12l[?25h[?25l[15;14H[?12l[?25h[?25l[16;10H[?12l[?25h[?25l[17;22H[?12l[?25h[?25l[18;18H[?12l[?25h[?25l[19;14H[?12l[?25h[?25l[20;18H[?12l[?25h[?25l[21d[?12l[?25h[?25l[22;22H[?12l[?25h[?25l[23d[?12l[?25h[?25l[24;19H[?12l[?25h[?25l[37d[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ ynano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 17: could not find expected ':'
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 34 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- args:[15;5H- /bin/sh[16;5H- -c[17;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[18;5Himage busybox[19;5Hname: app[20;5Hresources: {}[21;5HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- -c[29;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[20d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[36d[K[19;14H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[19;13H [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[K    [?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[19;36r[36;1H
[1;38r[35;1Hstatus: {}[18;18H[?12l[?25h[?25l[11G[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[17;95H[?12l[?25h[?25l[18d[?12l[?25h[?25l7[18;35r8M[1;38r[19;1H[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25lL[?12l[?25h[?25l [?12l[?25h[?25l:[?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25lp[?12l[?25h[?25lp[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 34 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 18: could not find expected ':'
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 34 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- args:[15;5H- /bin/sh[16;5H- -c[17;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[18;5Hname: app[19;5Himage busybox[20;5Hresources: {}[21;5HvolumeMounts:[22;6H- name: data-vol[23;8HmountPath: /var/logs[24;3H- image: busybox[25;5Hname: transformer[26;5Hargs:[27;5H- /bin/sh[28;5H- -c[29;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[30;5Hresources: {}[31;5HvolumeMounts:[32;5H- name: data-vol[33;7HmountPath: /var/logs[34;3HdnsPolicy: ClusterFirst[35;3HrestartPolicy: Never[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[A[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[36d[K[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[20;36r[36;1H
[1;38r[35;1Hstatus: {}[20d[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 33 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 18: could not find expected ':'
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 33 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- args:[15;5H- /bin/sh[16;5H- -c[17;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[18;5Hname: app[19;5Himage busybox[20;5HvolumeMounts:[21;6H- name: data-vol[22;8HmountPath: /var/logs[23;3H- image: busybox[24;5Hname: transformer[25;5Hargs:[26;5H- /bin/sh[27;5H- -c[28;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[29;5Hresources: {}[30;5HvolumeMounts:[31;5H- name: data-vol[32;7HmountPath: /var/logs[33;3HdnsPolicy: ClusterFirst[34;3HrestartPolicy: Never[35dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l[21d[?12l[?25h[?25l[A[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[21d[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[21d      - name: data-vol   [?12l[?25h[?25l[36d[K[22;4H[?12l[?25h[?25l[8G mountPath: /var/logs[5G[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 33 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 18: could not find expected ':'
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 33 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- args:[15;5H- /bin/sh[16;5H- -c[17;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[18;5Hname: app[19;5Himage busybox[20;5HvolumeMounts:[21;7H- name: data-vol[22;9HmountPath: /var/logs[23;3H- image: busybox[24;5Hname: transformer[25;5Hargs:[26;5H- /bin/sh[27;5H- -c[28;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[29;5Hresources: {}[30;5HvolumeMounts:[31;5H- name: data-vol[32;7HmountPath: /var/logs[33;3HdnsPolicy: ClusterFirst[34;3HrestartPolicy: Never[35dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[36d[K[5d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[20;18H[?12l[?25h[?25l[21d[?12l[?25h[?25l[20;18H[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[20;17H [?12l[?25h[?25l:[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[A[?12l[?25h[?25l[29;36r[36;1H
[1;38r[29;1H[?12l[?25h[?25l[30d[?12l[?25h[?25l     - name: data-vol [?12l[?25h[?25l      - name: data-vol  [?12l[?25h[?25l[31d[?12l[?25h[?25l[7G mountPath: /var/logs   [?12l[?25h[?25l[8G mountPath: /var/logs[5G[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 32 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C
error: error parsing c1.yaml: error converting YAML to JSON: yaml: line 18: could not find expected ':'
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml [1Pnano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 32 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hlabels:[7;5Hrun: adapter[8;3Hname: adapter[9dspec:[10;3Hvolumes:[11;5H- name: data-vol[12;7HemptyDir: {}[13;3Hcontainers:[14;3H- args:[15;5H- /bin/sh[16;5H- -c[17;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[18;5Hname: app[19;5Himage busybox[20;5HvolumeMounts:[21;7H- name: data-vol[22;9HmountPath: /var/logs[23;3H- image: busybox[24;5Hname: transformer[25;5Hargs:[26;5H- /bin/sh[27;5H- -c[28;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[29;5HvolumeMounts:[30;7H- name: data-vol[31;9HmountPath: /var/logs[32;3HdnsPolicy: ClusterFirst[33;3HrestartPolicy: Never[34dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[A[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[6;35r[35;1H
[1;38r[6;1H[?12l[?25h[?25l[6;35r[35;1H
[1;38r[6;1H[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l [?12l[?25h[?25l[1P[?12l[?25h[?25l[8;35r[35;1H
[1;38r[7;7Hvolumes:[6G[?12l[?25h[?25l7[8;35r8[8dM[1;38r[7;7H[K[8d volumes:[?12l[?25h[?25l  volumes: [?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[A[?12l[?25h[?25l[13d[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 30 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml [1@kc -f[C[C[C[C[C[C[C[C[C[1Pnano[C[C[C[C[C[C[C[C[C[1@kc -f[C[C[C[C[C[C[C[C[C[1Pnano[C[C[C[C[C[C[C[C[C[1@kc -f[C[C[C[C[C[C[C[C[C[1Pnano[C[C[C[C[C[C[C[C[C[1@kc -f[C[C[C[C[C[C[C[C[C[1Pnano[C[C[C[C[C[C[C[C[C[1@kc -f[C[C[C[C[C[C[C[C[C[1Pnano[C[C[C[C[C[C[C[C[C[1@kc -f[C[C[C[C[C[C[C[C[C[2Pvim[C[C[C[C[C[C[C[C[C
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[27m[23m[29m[m[H[2J[?25l[38;1H"c1.yaml" 30L, 733C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[36mapiVersion[m[35m:[m v1
[36mkind[m[35m:[m Pod
[36mmetadata[m[35m:[m
  [36mname[m[35m:[m adapter
[36mspec[m[35m:[m
  [36mvolumes[m[35m:[m
    [38;5;130m- [m[36mname[m[35m:[m data-vol[8;7H[36memptyDir[m[35m:[m [35m{}[m
  [36mcontainers[m[35m:[m
  [38;5;130m- [m[36margs[m[35m:[m
    [38;5;130m- [m/bin/sh
    [38;5;130m- [m-c
    [38;5;130m- [m[31m'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[m
    [36mname[m[35m:[m app
    image busybox
    [36mvolumeMounts[m[35m:[m[17;7H[38;5;130m- [m[36mname[m[35m:[m data-vol[18;9H[36mmountPath[m[35m:[m /var/logs
  [38;5;130m- [m[36mimage[m[35m:[m busybox
    [36mname[m[35m:[m transformer
    [36margs[m[35m:[m
    [38;5;130m- [m/bin/sh
    [38;5;130m- [m-c
    [38;5;130m- [m[31m'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/diskspp[25;1Hace.txt; sleep 20; done'[m
    [36mvolumeMounts[m[35m:[m[27;7H[38;5;130m- [m[36mname[m[35m:[m data-vol[28;9H[36mmountPath[m[35m:[m /var/logs
  [36mdnsPolicy[m[35m:[m ClusterFirst
  [36mrestartPolicy[m[35m:[m Never
[36mstatus[m[35m:[m [35m{}[m
[94m~                                                                                                                                                     [33;1H~                                                                                                                                                     [34;1H~                                                                                                                                                     [35;1H~                                                                                                                                                     [36;1H~                                                                                                                                                     [37;1H~                                                                                                                                                     [m[38;133H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[38;1H[?2004l[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c2.yaml
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;70H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c2.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[m[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[3dapiVersion: v1[4dkind: Pod[5dmetadata:[6;3HcreationTimestamp: null[7;3Hname: adapter[8dspec:[9;3Hvolumes:[10;5H- name: config-volume[11;7HemptyDir: {}[12;3Hcontainers:[13;3H- args:[14;5H- /bin/sh[15;5H- -c[16;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[17;5Himage: busybox[18;5Hname: app[19;5HvolumeMounts:[20;7H- name: config-volume[21;9HmountPath: /var/logs[22;5Hresources: {}[23;3H- image: busybox[24;5Hname: transformer[25;5Hargs:[26;5H- /bin/sh[27;5H- -c[28;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt; done < /var/logs/disk$[29;5HvolumeMounts:[30;7H- name: config-volume[31;9HmountPath: /var/logs[32;3HdnsPolicy: ClusterFirst[33;3HrestartPolicy: Never[34dstatus: {}[36d[K[34;11H[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c2.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 32 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c2.yamlvim c1.yaml [1@nano[C[C[C[C[C[C[C[C[C[1@kc -f[C[C[C[C[C[C[C[C[C[1P[1@2
pod/adapter created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod adapter
NAME      READY   STATUS    RESTARTS   AGE
adapter   2/2     Running   0          22s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod adapter[9Pc -f c2.yaml [K[K[K[K[K[K[K[K[K[K[K[K[K[Kkubectl exec adapter --container=transformer -it -- /bin/sh
/ # / # [Jls -l
total 40
-rw-r--r--    1 root     root            72 Apr  7 21:37 [0;0m2020-04-07-21-37-45-transformed.txt[m
drwxr-xr-x    2 root     root         12288 Mar  9 21:48 [1;34mbin[m
drwxr-xr-x    5 root     root           360 Apr  7 21:37 [1;34mdev[m
drwxr-xr-x    1 root     root          4096 Apr  7 21:37 [1;34metc[m
drwxr-xr-x    2 nobody   nogroup       4096 Mar  9 21:48 [1;34mhome[m
dr-xr-xr-x  323 root     root             0 Apr  7 21:37 [1;34mproc[m
drwx------    1 root     root          4096 Apr  7 21:37 [1;34mroot[m
dr-xr-xr-x   12 root     root             0 Apr  7 21:37 [1;34msys[m
drwxrwxrwt    2 root     root          4096 Mar  9 21:48 [1;34mtmp[m
drwxr-xr-x    3 root     root          4096 Mar  9 21:48 [1;34musr[m
drwxr-xr-x    1 root     root          4096 Apr  7 21:37 [1;34mvar[m
/ # cat 20/ # cat 2020-04-07-21-37-45-transformed.txt [J
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
/ # / # cat 2020-04-07-21-37-45-transformed.txt [J
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
/ # / # cat 2020-04-07-21-37-45-transformed.txt [J
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
/ # / # cat 2020-04-07-21-37-45-transformed.txt [J
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
/ # / # cat 2020-04-07-21-37-45-transformed.txt [J/ # ls -l[J
total 44
-rw-r--r--    1 root     root            72 Apr  7 21:37 [0;0m2020-04-07-21-37-45-transformed.txt[m
-rw-r--r--    1 root     root           120 Apr  7 21:38 [0;0m2020-04-07-21-38-05-transformed.txt[m
drwxr-xr-x    2 root     root         12288 Mar  9 21:48 [1;34mbin[m
drwxr-xr-x    5 root     root           360 Apr  7 21:37 [1;34mdev[m
drwxr-xr-x    1 root     root          4096 Apr  7 21:37 [1;34metc[m
drwxr-xr-x    2 nobody   nogroup       4096 Mar  9 21:48 [1;34mhome[m
dr-xr-xr-x  323 root     root             0 Apr  7 21:37 [1;34mproc[m
drwx------    1 root     root          4096 Apr  7 21:37 [1;34mroot[m
dr-xr-xr-x   12 root     root             0 Apr  7 21:37 [1;34msys[m
drwxrwxrwt    2 root     root          4096 Mar  9 21:48 [1;34mtmp[m
drwxr-xr-x    3 root     root          4096 Mar  9 21:48 [1;34musr[m
drwxr-xr-x    1 root     root          4096 Apr  7 21:37 [1;34mvar[m
/ # / # ls -l[J/ # cat 2020-04-07-21-37-45-transformed.txt [J
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
 4.0K	/root
/ # exit
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cmp c1.yaml c2.yaml 
c1.yaml c2.yaml differ: byte 38, line 4
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cmp c1.yaml c2.yaml kubectl exec adapter --container=transformer -it -- /bin/sh[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cget pod adapter[K[9Pc -f c2.yaml [2Pnano c2.yamlvim c1.yaml [1@nano[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[Kcmp c2.yaml c1.yaml 
c2.yaml c1.yaml differ: byte 38, line 4
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ cmp c2.yaml c1.yaml 1.yaml c2[C[C[C[C[C[Ckubectl exec adapter --container=transformer -it -- /bin/sh[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cget pod adapter[K[9Pc -f c2.yaml [2Pnano c2.yamlvim c1.yaml [1@nano[C[C[C[C[C[C[C[C[C
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 30 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hname: adapter[7dspec:[8;3Hvolumes:[9;5H- name: data-vol[10;7HemptyDir: {}[11;3Hcontainers:[12;3H- args:[13;5H- /bin/sh[14;5H- -c[15;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[16;5Hname: app[17;5Himage busybox[18;5HvolumeMounts:[19;7H- name: data-vol[20;9HmountPath: /var/logs[21;3H- image: busybox[22;5Hname: transformer[23;5Hargs:[24;5H- /bin/sh[25;5H- -c[26;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[27;5HvolumeMounts:[28;7H- name: data-vol[29;9HmountPath: /var/logs[30;3HdnsPolicy: ClusterFirst[31;3HrestartPolicy: Never[32dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[36d[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ diff --help
Usage: diff [OPTION]... FILES
Compare FILES line by line.

Mandatory arguments to long options are mandatory for short options too.
      --normal                  output a normal diff (the default)
  -q, --brief                   report only when files differ
  -s, --report-identical-files  report when two files are the same
  -c, -C NUM, --context[=NUM]   output NUM (default 3) lines of copied context
  -u, -U NUM, --unified[=NUM]   output NUM (default 3) lines of unified context
  -e, --ed                      output an ed script
  -n, --rcs                     output an RCS format diff
  -y, --side-by-side            output in two columns
  -W, --width=NUM               output at most NUM (default 130) print columns
      --left-column             output only the left column of common lines
      --suppress-common-lines   do not output common lines

  -p, --show-c-function         show which C function each change is in
  -F, --show-function-line=RE   show the most recent line matching RE
      --label LABEL             use LABEL instead of file name and timestamp
                                  (can be repeated)

  -t, --expand-tabs             expand tabs to spaces in output
  -T, --initial-tab             make tabs line up by prepending a tab
      --tabsize=NUM             tab stops every NUM (default 8) print columns
      --suppress-blank-empty    suppress space or tab before empty output lines
  -l, --paginate                pass output through 'pr' to paginate it

  -r, --recursive                 recursively compare any subdirectories found
      --no-dereference            don't follow symbolic links
  -N, --new-file                  treat absent files as empty
      --unidirectional-new-file   treat absent first files as empty
      --ignore-file-name-case     ignore case when comparing file names
      --no-ignore-file-name-case  consider case when comparing file names
  -x, --exclude=PAT               exclude files that match PAT
  -X, --exclude-from=FILE         exclude files that match any pattern in FILE
  -S, --starting-file=FILE        start with FILE when comparing directories
      --from-file=FILE1           compare FILE1 to all operands;
                                    FILE1 can be a directory
      --to-file=FILE2             compare all operands to FILE2;
                                    FILE2 can be a directory

  -i, --ignore-case               ignore case differences in file contents
  -E, --ignore-tab-expansion      ignore changes due to tab expansion
  -Z, --ignore-trailing-space     ignore white space at line end
  -b, --ignore-space-change       ignore changes in the amount of white space
  -w, --ignore-all-space          ignore all white space
  -B, --ignore-blank-lines        ignore changes where lines are all blank
  -I, --ignore-matching-lines=RE  ignore changes where all lines match RE

  -a, --text                      treat all files as text
      --strip-trailing-cr         strip trailing carriage return on input

  -D, --ifdef=NAME                output merged file with '#ifdef NAME' diffs
      --GTYPE-group-format=GFMT   format GTYPE input groups with GFMT
      --line-format=LFMT          format all input lines with LFMT
      --LTYPE-line-format=LFMT    format LTYPE input lines with LFMT
    These format options provide fine-grained control over the output
      of diff, generalizing -D/--ifdef.
    LTYPE is 'old', 'new', or 'unchanged'.  GTYPE is LTYPE or 'changed'.
    GFMT (only) may contain:
      %<  lines from FILE1
      %>  lines from FILE2
      %=  lines common to FILE1 and FILE2
      %[-][WIDTH][.[PREC]]{doxX}LETTER  printf-style spec for LETTER
        LETTERs are as follows for new group, lower case for old group:
          F  first line number
          L  last line number
          N  number of lines = L-F+1
          E  F-1
          M  L+1
      %(A=B?T:E)  if A equals B then T else E
    LFMT (only) may contain:
      %L  contents of line
      %l  contents of line, excluding any trailing newline
      %[-][WIDTH][.[PREC]]{doxX}n  printf-style spec for input line number
    Both GFMT and LFMT may contain:
      %%  %
      %c'C'  the single character C
      %c'\OOO'  the character with octal code OOO
      C    the character C (other characters represent themselves)

  -d, --minimal            try hard to find a smaller set of changes
      --horizon-lines=NUM  keep NUM lines of the common prefix and suffix
      --speed-large-files  assume large files and many scattered small changes
      --color[=WHEN]       colorize the output; WHEN can be 'never', 'always',
                             or 'auto' (the default)
      --palette=PALETTE    the colors to use when --color is active; PALETTE is
                             a colon-separated list of terminfo capabilities

      --help               display this help and exit
  -v, --version            output version information and exit

FILES are 'FILE1 FILE2' or 'DIR1 DIR2' or 'DIR FILE' or 'FILE DIR'.
If --from-file or --to-file is given, there are no restrictions on FILE(s).
If a FILE is '-', read standard input.
Exit status is 0 if inputs are the same, 1 if different, 2 if trouble.

Report bugs to: bug-diffutils@gnu.org
GNU diffutils home page: <http://www.gnu.org/software/diffutils/>
General help using GNU software: <http://www.gnu.org/gethelp/>
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ dif c[K[Kf c1.yaml c2.yaml 
3a4
>   creationTimestamp: null
7c8
<     - name: data-vol
---
>     - name: config-volume
12c13
<     - -c 
---
>     - -c
13a15
>     image: busybox
15d16
<     image busybox
17c18
<       - name: data-vol
---
>       - name: config-volume
18a20
>     resources: {}
23,24c25,26
<     - -c 
<     - 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/diskspace.txt; sleep 20; done'
---
>     - -c
>     - 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt; done < /var/logs/diskspace.txt; sleep 20; done;'
26c28
<       - name: data-vol
---
>       - name: config-volume
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ nano c1.yaml 
[?1049h[22;0;0t[1;38r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[36;68H(B[0;7m[ Reading File ](B[m[36;67H(B[0;7m[ Read 30 lines ](B[m[H(B[0;7m  GNU nano 2.9.3                                                          c1.yaml                                                                     [1;149H(B[m[37d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[37;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket[38d(B[0;7m^X(B[m Exit[38;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[38;113H(B[0;7mM-6(B[m Copy Text   (B[0;7mM-W(B[m WhereIs Next[36d[3d[39;49m(B[mapiVersion: v1[4dkind: Pod[5dmetadata:[6;3Hname: adapter[7dspec:[8;3Hvolumes:[9;5H- name: data-vol[10;7HemptyDir: {}[11;3Hcontainers:[12;3H- args:[13;5H- /bin/sh[14;5H- -c[15;5H- 'while true; do echo "$(date) | $(du -sh ~)" >> /var/logs/diskspace.txt; sleep 5; done;'[16;5Hname: app[17;5Himage busybox[18;5HvolumeMounts:[19;7H- name: data-vol[20;9HmountPath: /var/logs[21;3H- image: busybox[22;5Hname: transformer[23;5Hargs:[24;5H- /bin/sh[25;5H- -c[26;5H- 'sleep 20; while true; do while read LINE; do echo "$LINE" | cut -f2 -d"|" >> $(date +%Y-%m-%d-%H-%M-%S)-transformed.txt;done < /var/logs/disks$[27;5HvolumeMounts:[28;7H- name: data-vol[29;9HmountPath: /var/logs[30;3HdnsPolicy: ClusterFirst[31;3HrestartPolicy: Never[32dstatus: {}[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[16;14H[?12l[?25h[?25l[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[17d[?12l[?25h[?25l[1;141H(B[0;7mModified(B[m[17;10H: busybox[17;11H[?12l[?25h[?25l[36d[K[18;11H[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24dn[?12l[?25h[?25l[25d[?12l[?25h[?25l[26de[?12l[?25h[?25l[27d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A$/diskspace.txt; sleep 20; done'[K[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25le[?12l[?25h[?25l;'[?12l[?25h[?25l[36d(B[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                                                         [37;1H Y(B[m Yes[K[38d(B[0;7m N(B[m No  [38;18H(B[0;7mC(B[m Cancel[K[36;63H[?12l[?25h[?25l[37d(B[0;7m^G(B[m Get Help[37;38H(B[0;7mM-D(B[m DOS Format[37;75H(B[0;7mM-A(B[m Append[37;112H(B[0;7mM-B(B[m Backup File[38d(B[0;7m^C(B[m Cancel[17G         [38;38H(B[0;7mM-M(B[m Mac Format[38;75H(B[0;7mM-P(B[m Prepend[38;112H(B[0;7m^T(B[m To Files[36d(B[0;7mFile Name to Write: c1.yaml                                  (B[m[36;28H[?12l[?25h[?25l[K[1;149H[1;141H(B[0;7m        (B[m[36;67H(B[0;7m[ Wrote 30 lines ](B[m[J[38;150H[?12l[?25h[38;1H[?1049l[23;0;0t[?1l>]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml 
Error from server (AlreadyExists): error when creating "c1.yaml": pods "adapter" already exists
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete pld[K[Kod/adapter 
pod "adapter" deleted
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete pod/adapter 
pod "adapter" deleted
^C
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete pod/adapter [1P[1P[1P[1P[1P[1P[1@g[1@e[1@t
NAME      READY   STATUS        RESTARTS   AGE
adapter   2/2     Terminating   0          3m26s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod/adapter 
NAME      READY   STATUS        RESTARTS   AGE
adapter   2/2     Terminating   0          3m31s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod/adapter --grace-period=0
Error: unknown flag: --grace-period


Examples:
  # List all pods in ps output format.
  kubectl get pods
  
  # List all pods in ps output format with more information (such as node name).
  kubectl get pods -o wide
  
  # List a single replication controller with specified NAME in ps output format.
  kubectl get replicationcontroller web
  
  # List deployments in JSON output format, in the "v1" version of the "apps" API group:
  kubectl get deployments.v1.apps -o json
  
  # List a single pod in JSON output format.
  kubectl get -o json pod web-pod-13je7
  
  # List a pod identified by type and name specified in "pod.yaml" in JSON output format.
  kubectl get -f pod.yaml -o json
  
  # List resources from a directory with kustomization.yaml - e.g. dir/kustomization.yaml.
  kubectl get -k dir/
  
  # Return only the phase value of the specified pod.
  kubectl get -o template pod/web-pod-13je7 --template={{.status.phase}}
  
  # List resource information in custom columns.
  kubectl get pod test-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image
  
  # List all replication controllers and services together in ps output format.
  kubectl get rc,services
  
  # List one or more resources by their type and names.
  kubectl get rc/web service/frontend pods/web-pod-13je7

Options:
  -A, --all-namespaces=false: If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace.
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
      --chunk-size=500: Return large lists in chunks rather than all at once. Pass 0 to disable. This flag is beta and may change in the future.
      --field-selector='': Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type.
  -f, --filename=[]: Filename, directory, or URL to files identifying the resource to get from a server.
      --ignore-not-found=false: If the requested object does not exist the command will return exit code 0.
  -k, --kustomize='': Process the kustomization directory. This flag can't be used together with -f or -R.
  -L, --label-columns=[]: Accepts a comma separated list of labels that are going to be presented as columns. Names are case-sensitive. You can also use multiple flag options like -L label1 -L label2...
      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).
  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].
      --raw='': Raw URI to request from the server.  Uses the transport specified by the kubeconfig file.
  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)
      --server-print=true: If true, have the server return the appropriate table output. Supports extension APIs and CRDs.
      --show-kind=false: If present, list the resource type for the requested object(s).
      --show-labels=false: When printing, show all labels as the last column (default hide labels column)
      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
  -w, --watch=false: After listing/getting the requested object, watch for changes. Uninitialized objects are excluded if no object name is provided.
      --watch-only=false: Watch for changes to the requested object(s), without listing/getting first.

Usage:
  kubectl get [(-o|--output=)json|yaml|wide|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=...] (TYPE[.VERSION][.GROUP] [NAME | -l label] | TYPE[.VERSION][.GROUP]/NAME ...) [flags] [options]

Use "kubectl options" for a list of global command-line options (applies to all commands).

unknown flag: --grace-period
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl get pod/adapter --grace-period=0[1P[1P[1P[1@d[1@e[1@l[1@e[1@t[1@e[C[1@ 
Error from server (NotFound): pods "adapter" not found
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kubectl delete  pod/adapter --grace-period=0[4Pget[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[3@delete[C[C[C[C[C[C[C[C[C[C[C[C[C[13Pc -f c1.yaml[C[1Pnano[C[C[C[C[C[C[C[C[C[8@diff c1.yaml c2[C[C[C[C[C[C[10P--helpnano c1.yaml [7@cmp c2.yaml[C[C[C[C[C[C[C[C[C1.yaml c2[C[C[C[C[C[Ckubectl exec adapter --container=transformer -it -- /bin/sh[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cget pod adapter[K[9Pc -f c2.yaml [1P[1@1
pod/adapter created
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ kc -f c1.yaml ubectl delete  pod/adapter --grace-period=0[4Pget[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kr
NAME      READY   STATUS              RESTARTS   AGE
adapter   0/2     ContainerCreating   0          6s
]0;baz@baz-ubuntu: ~/Q1_CNC/k8CKAD/bmuschko[01;32mbaz@baz-ubuntu[00m:[01;34m~/Q1_CNC/k8CKAD/bmuschko[00m$ exit
exit

Script done on 2020-04-08 02:41:31+0500
